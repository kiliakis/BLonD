
Analyzing loop at /afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:33

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:33: note: ===== analyze_loop_nest =====
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:33: note: === vect_analyze_loop_form ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:33: note: not vectorized: control flow in loop.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:33: note: bad loop form.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:16: note: vectorized 0 loops in function.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:27: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:27: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:27: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:33: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:33: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:33: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:30: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:30: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:30: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:41: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:41: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:41: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:16: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:16: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:16: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: get vectype with 2 units of type const double
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: vectype: const vector(2) double
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: === vect_pattern_recog ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: vect_is_simple_use: operand _21
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: def_stmt: _21 = (long unsigned int) i_45;

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: type of def: 3.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: vect_is_simple_use: operand i_45
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: def_stmt: i_45 = PHI <i_38(10), 0(6)>

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: type of def: 2.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: vect_is_simple_use: operand 8
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: === vect_analyze_dependences ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: === vect_analyze_data_refs_alignment ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: vect_compute_data_ref_alignment:
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: SLP: step doesn't divide the vector-size.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: Unknown alignment for access: *input_23(D)
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: === vect_analyze_data_ref_accesses ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: === vect_analyze_slp ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: Failed to SLP the basic block.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:34: note: not vectorized: failed to find SLP opportunities in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: get vectype with 2 units of type double
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: vectype: vector(2) double
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: get vectype with 2 units of type double
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: vectype: vector(2) double
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: === vect_pattern_recog ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: vect_is_simple_use: operand _29
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: def_stmt: _29 = a_25 - cut_left_9(D);

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: type of def: 3.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: vect_is_simple_use: operand _32
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: def_stmt: _32 = (long unsigned int) ffbin_31;

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: type of def: 3.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: vect_is_simple_use: operand ffbin_31
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: def_stmt: ffbin_31 = (int) fbin_30;

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: type of def: 3.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: vect_is_simple_use: operand 8
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: === vect_analyze_dependences ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: determined dependence between *_34 and *_34
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: === vect_analyze_data_refs_alignment ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: vect_compute_data_ref_alignment:
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: can't force alignment of ref: *_34
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: vect_compute_data_ref_alignment:
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: can't force alignment of ref: *_34
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: === vect_analyze_data_ref_accesses ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: not consecutive access _35 = *_34;

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: not consecutive access *_34 = _36;

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: === vect_analyze_slp ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: Failed to SLP the basic block.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:37: note: not vectorized: failed to find SLP opportunities in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:33: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:33: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:33: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:16: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:16: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:16: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at /afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:65

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:65: note: ===== analyze_loop_nest =====
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:65: note: === vect_analyze_loop_form ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:65: note: not vectorized: control flow in loop.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:65: note: bad loop form.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:43: note: vectorized 0 loops in function.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:58: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:58: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:58: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:65: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:65: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:65: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:62: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:62: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:62: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:83: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:83: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:83: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:43: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:43: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:43: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: get vectype with 2 units of type const double
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: vectype: const vector(2) double
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: === vect_pattern_recog ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: vect_is_simple_use: operand _27
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: def_stmt: _27 = (long unsigned int) i_67;

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: type of def: 3.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: vect_is_simple_use: operand i_67
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: def_stmt: i_67 = PHI <i_59(15), 0(6)>

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: type of def: 2.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: vect_is_simple_use: operand 8
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: === vect_analyze_dependences ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: === vect_analyze_data_refs_alignment ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: vect_compute_data_ref_alignment:
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: SLP: step doesn't divide the vector-size.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: Unknown alignment for access: *input_29(D)
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: === vect_analyze_data_ref_accesses ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: === vect_analyze_slp ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: Failed to SLP the basic block.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:66: note: not vectorized: failed to find SLP opportunities in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:67: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:67: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:67: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:69: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:69: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:69: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:73: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:73: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:73: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:76: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:76: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:76: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:77: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:77: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:77: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: get vectype with 2 units of type double
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: vectype: vector(2) double
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: get vectype with 2 units of type double
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: vectype: vector(2) double
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: get vectype with 2 units of type double
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: vectype: vector(2) double
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: get vectype with 2 units of type double
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: vectype: vector(2) double
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: === vect_pattern_recog ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: vect_is_simple_use: operand _47
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: def_stmt: _47 = (long unsigned int) ffbin_38;

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: type of def: 3.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: vect_is_simple_use: operand ffbin_38
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: def_stmt: ffbin_38 = (int) fbin_37;

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: type of def: 2.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: vect_is_simple_use: operand 8
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: vect_is_simple_use: operand _53
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: def_stmt: _53 = (long unsigned int) fffbin_4;

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: type of def: 3.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: vect_is_simple_use: operand fffbin_4
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: def_stmt: fffbin_4 = PHI <fffbin_3(11), fffbin_44(12)>

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: type of def: 2.
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: vect_is_simple_use: operand 8
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: === vect_analyze_dependences ===
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: determined dependence between *_49 and *_49
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: can't determine dependence between *_49 and *_55
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: can't determine dependence between *_49 and *_55
/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:78: note: not vectorized: unhandled data dependence in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:65: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:65: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:65: note: not vectorized: not enough data-refs in basic block.

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:43: note: ===vect_slp_analyze_bb===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:43: note: === vect_analyze_data_refs ===

/afs/cern.ch/work/k/kiliakis/git/BLonD/cpp_routines/histogram.cpp:43: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at cpp_routines/kick.cpp:36

cpp_routines/kick.cpp:36: note: ===== analyze_loop_nest =====
cpp_routines/kick.cpp:36: note: === vect_analyze_loop_form ===
cpp_routines/kick.cpp:36: note: === get_loop_niters ===
cpp_routines/kick.cpp:36: note: ==> get_loop_niters:(unsigned int) n_macroparticles_9(D)
cpp_routines/kick.cpp:36: note: Symbolic number of iterations is (unsigned int) n_macroparticles_9(D)
cpp_routines/kick.cpp:36: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:36: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:36: note: vectype: vector(2) double
cpp_routines/kick.cpp:36: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:36: note: vectype: vector(2) double
cpp_routines/kick.cpp:36: note: === vect_analyze_scalar_cycles ===
cpp_routines/kick.cpp:36: note: Analyze phi: i_118 = PHI <i_46(17), 0(14)>

cpp_routines/kick.cpp:36: note: Access function of PHI: {0, +, 1}_3
cpp_routines/kick.cpp:36: note: step: 1,  init: 0
cpp_routines/kick.cpp:36: note: Detected induction.
cpp_routines/kick.cpp:36: note: Analyze phi: .MEM_66 = PHI <.MEM_45(17), .MEM_278(14)>

cpp_routines/kick.cpp:36: note: === vect_pattern_recog ===
cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand _39
cpp_routines/kick.cpp:36: note: def_stmt: _39 = (long unsigned int) i_118;

cpp_routines/kick.cpp:36: note: type of def: 3.
cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand i_118
cpp_routines/kick.cpp:36: note: def_stmt: i_118 = PHI <i_46(17), 0(14)>

cpp_routines/kick.cpp:36: note: type of def: 4.
cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand 8
cpp_routines/kick.cpp:36: note: === vect_mark_stmts_to_be_vectorized ===
cpp_routines/kick.cpp:36: note: init: phi relevant? i_118 = PHI <i_46(17), 0(14)>

cpp_routines/kick.cpp:36: note: init: phi relevant? .MEM_66 = PHI <.MEM_45(17), .MEM_278(14)>

cpp_routines/kick.cpp:36: note: init: stmt relevant? _39 = (long unsigned int) i_118;

cpp_routines/kick.cpp:36: note: init: stmt relevant? _40 = _39 * 8;

cpp_routines/kick.cpp:36: note: init: stmt relevant? _41 = beam_dE_10(D) + _40;

cpp_routines/kick.cpp:36: note: init: stmt relevant? _42 = *_41;

cpp_routines/kick.cpp:36: note: init: stmt relevant? _44 = _42 + acc_kick_43(D);

cpp_routines/kick.cpp:36: note: init: stmt relevant? *_41 = _44;

cpp_routines/kick.cpp:36: note: vec_stmt_relevant_p: stmt has vdefs.
cpp_routines/kick.cpp:36: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:36: note: init: stmt relevant? i_46 = i_118 + 1;

cpp_routines/kick.cpp:36: note: init: stmt relevant? if (n_macroparticles_9(D) > i_46)

cpp_routines/kick.cpp:36: note: worklist: examine stmt: *_41 = _44;

cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand _44
cpp_routines/kick.cpp:36: note: def_stmt: _44 = _42 + acc_kick_43(D);

cpp_routines/kick.cpp:36: note: type of def: 3.
cpp_routines/kick.cpp:36: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:36: note: worklist: examine stmt: _44 = _42 + acc_kick_43(D);

cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand _42
cpp_routines/kick.cpp:36: note: def_stmt: _42 = *_41;

cpp_routines/kick.cpp:36: note: type of def: 3.
cpp_routines/kick.cpp:36: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand acc_kick_43(D)
cpp_routines/kick.cpp:36: note: def_stmt: GIMPLE_NOP

cpp_routines/kick.cpp:36: note: worklist: examine stmt: _42 = *_41;

cpp_routines/kick.cpp:36: note: === vect_analyze_dependences ===
cpp_routines/kick.cpp:36: note: dependence distance  = 0.
cpp_routines/kick.cpp:36: note: dependence distance == 0 between *_41 and *_41
cpp_routines/kick.cpp:36: note: === vect_determine_vectorization_factor ===
cpp_routines/kick.cpp:36: note: ==> examining phi: i_118 = PHI <i_46(17), 0(14)>

cpp_routines/kick.cpp:36: note: ==> examining phi: .MEM_66 = PHI <.MEM_45(17), .MEM_278(14)>

cpp_routines/kick.cpp:36: note: ==> examining statement: _39 = (long unsigned int) i_118;

cpp_routines/kick.cpp:36: note: skip.
cpp_routines/kick.cpp:36: note: ==> examining statement: _40 = _39 * 8;

cpp_routines/kick.cpp:36: note: skip.
cpp_routines/kick.cpp:36: note: ==> examining statement: _41 = beam_dE_10(D) + _40;

cpp_routines/kick.cpp:36: note: skip.
cpp_routines/kick.cpp:36: note: ==> examining statement: _42 = *_41;

cpp_routines/kick.cpp:36: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:36: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:36: note: vectype: vector(2) double
cpp_routines/kick.cpp:36: note: vectype: vector(2) double
cpp_routines/kick.cpp:36: note: nunits = 2
cpp_routines/kick.cpp:36: note: ==> examining statement: _44 = _42 + acc_kick_43(D);

cpp_routines/kick.cpp:36: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:36: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:36: note: vectype: vector(2) double
cpp_routines/kick.cpp:36: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:36: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:36: note: vectype: vector(2) double
cpp_routines/kick.cpp:36: note: vectype: vector(2) double
cpp_routines/kick.cpp:36: note: nunits = 2
cpp_routines/kick.cpp:36: note: ==> examining statement: *_41 = _44;

cpp_routines/kick.cpp:36: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:36: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:36: note: vectype: vector(2) double
cpp_routines/kick.cpp:36: note: vectype: vector(2) double
cpp_routines/kick.cpp:36: note: nunits = 2
cpp_routines/kick.cpp:36: note: ==> examining statement: i_46 = i_118 + 1;

cpp_routines/kick.cpp:36: note: skip.
cpp_routines/kick.cpp:36: note: ==> examining statement: if (n_macroparticles_9(D) > i_46)

cpp_routines/kick.cpp:36: note: skip.
cpp_routines/kick.cpp:36: note: vectorization factor = 2
cpp_routines/kick.cpp:36: note: === vect_analyze_data_refs_alignment ===
cpp_routines/kick.cpp:36: note: dependence distance  = 0.
cpp_routines/kick.cpp:36: note: accesses have the same alignment.dependence distance modulo vf == 0 between *_41 and *_41
cpp_routines/kick.cpp:36: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:36: note: can't force alignment of ref: *_41
cpp_routines/kick.cpp:36: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:36: note: can't force alignment of ref: *_41
cpp_routines/kick.cpp:36: note: === vect_analyze_data_ref_accesses ===
cpp_routines/kick.cpp:36: note: === vect_prune_runtime_alias_test_list ===
cpp_routines/kick.cpp:36: note: === vect_enhance_data_refs_alignment ===
cpp_routines/kick.cpp:36: note: Unknown misalignment, is_packed = 0
cpp_routines/kick.cpp:36: note: Unknown misalignment, is_packed = 0
cpp_routines/kick.cpp:36: note: vect_can_advance_ivs_p:
cpp_routines/kick.cpp:36: note: Analyze phi: i_118 = PHI <i_46(17), 0(14)>

cpp_routines/kick.cpp:36: note: Access function of PHI: {0, +, 1}_3
cpp_routines/kick.cpp:36: note: Analyze phi: .MEM_66 = PHI <.MEM_45(17), .MEM_278(14)>

cpp_routines/kick.cpp:36: note: virtual phi. skip.
cpp_routines/kick.cpp:36: note: vect_model_load_cost: unaligned supported by hardware.
cpp_routines/kick.cpp:36: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
cpp_routines/kick.cpp:36: note: vect_model_store_cost: unaligned supported by hardware.
cpp_routines/kick.cpp:36: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
cpp_routines/kick.cpp:36: note: Alignment of access forced using peeling.
cpp_routines/kick.cpp:36: note: Peeling for alignment will be applied.
cpp_routines/kick.cpp:36: note: === vect_analyze_slp ===
cpp_routines/kick.cpp:36: note: === vect_make_slp_decision ===
cpp_routines/kick.cpp:36: note: === vect_detect_hybrid_slp ===
cpp_routines/kick.cpp:36: note: === vect_analyze_loop_operations ===
cpp_routines/kick.cpp:36: note: examining phi: i_118 = PHI <i_46(17), 0(14)>

cpp_routines/kick.cpp:36: note: examining phi: .MEM_66 = PHI <.MEM_45(17), .MEM_278(14)>

cpp_routines/kick.cpp:36: note: ==> examining statement: _39 = (long unsigned int) i_118;

cpp_routines/kick.cpp:36: note: irrelevant.
cpp_routines/kick.cpp:36: note: ==> examining statement: _40 = _39 * 8;

cpp_routines/kick.cpp:36: note: irrelevant.
cpp_routines/kick.cpp:36: note: ==> examining statement: _41 = beam_dE_10(D) + _40;

cpp_routines/kick.cpp:36: note: irrelevant.
cpp_routines/kick.cpp:36: note: ==> examining statement: _42 = *_41;

cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand *_41
cpp_routines/kick.cpp:36: note: not ssa-name.
cpp_routines/kick.cpp:36: note: use not simple.
cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand *_41
cpp_routines/kick.cpp:36: note: not ssa-name.
cpp_routines/kick.cpp:36: note: use not simple.
cpp_routines/kick.cpp:36: note: vect_model_load_cost: aligned.
cpp_routines/kick.cpp:36: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/kick.cpp:36: note: ==> examining statement: _44 = _42 + acc_kick_43(D);

cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand _42
cpp_routines/kick.cpp:36: note: def_stmt: _42 = *_41;

cpp_routines/kick.cpp:36: note: type of def: 3.
cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand acc_kick_43(D)
cpp_routines/kick.cpp:36: note: def_stmt: GIMPLE_NOP

cpp_routines/kick.cpp:36: note: === vectorizable_operation ===
cpp_routines/kick.cpp:36: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/kick.cpp:36: note: ==> examining statement: *_41 = _44;

cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand _44
cpp_routines/kick.cpp:36: note: def_stmt: _44 = _42 + acc_kick_43(D);

cpp_routines/kick.cpp:36: note: type of def: 3.
cpp_routines/kick.cpp:36: note: vect_model_store_cost: aligned.
cpp_routines/kick.cpp:36: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/kick.cpp:36: note: ==> examining statement: i_46 = i_118 + 1;

cpp_routines/kick.cpp:36: note: irrelevant.
cpp_routines/kick.cpp:36: note: ==> examining statement: if (n_macroparticles_9(D) > i_46)

cpp_routines/kick.cpp:36: note: irrelevant.
cpp_routines/kick.cpp:36: note: === vect_update_slp_costs_according_to_vf ===cost model: prologue peel iters set to vf/2.cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
cpp_routines/kick.cpp:36: note: Cost model analysis: 
  Vector inside of loop cost: 3
  Vector prologue cost: 12
  Vector epilogue cost: 3
  Scalar iteration cost: 3
  Scalar outside cost: 7
  Vector outside cost: 15
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 4

cpp_routines/kick.cpp:36: note:   Runtime profitability threshold = 3

cpp_routines/kick.cpp:36: note:   Static estimate profitability threshold = 3

cpp_routines/kick.cpp:36: note: epilog loop required.
cpp_routines/kick.cpp:36: note: vect_can_advance_ivs_p:
cpp_routines/kick.cpp:36: note: Analyze phi: i_118 = PHI <i_46(17), 0(14)>

cpp_routines/kick.cpp:36: note: Access function of PHI: {0, +, 1}_3
cpp_routines/kick.cpp:36: note: Analyze phi: .MEM_66 = PHI <.MEM_45(17), .MEM_278(14)>

cpp_routines/kick.cpp:36: note: virtual phi. skip.

Vectorizing loop at cpp_routines/kick.cpp:36

cpp_routines/kick.cpp:36: note: === vec_transform_loop ===
cpp_routines/kick.cpp:36: note: Profitability threshold is 3 loop iterations.
cpp_routines/kick.cpp:36: note: === vect_do_peeling_for_alignment ===
cpp_routines/kick.cpp:36: note: created vect_pbeam_dE.14_22
cpp_routines/kick.cpp:36: note: niters for prolog loop: MIN_EXPR <(unsigned int) -(((unsigned long) vect_pbeam_dE.14_22 & 15) >> 3) & 1, niters.11_19>
loop at cpp_routines/kick.cpp:37: if (ivtmp_246 < prologue_after_cost_adjust.16_254)
Setting upper bound of nb iterations for prologue loop to 2

cpp_routines/kick.cpp:36: note: === vect_update_inits_of_dr ===
cpp_routines/kick.cpp:36: note: === vect_do_peeling_for_loop_bound ===
cpp_routines/kick.cpp:36: note: vect_update_ivs_after_vectorizer: phi: i_118 = PHI <i_46(17), i_253(32)>

cpp_routines/kick.cpp:36: note: vect_update_ivs_after_vectorizer: phi: .MEM_66 = PHI <.MEM_45(17), .MEM_251(32)>

cpp_routines/kick.cpp:36: note: virtual phi. skip.Setting upper bound of nb iterations for epilogue loop to 0

cpp_routines/kick.cpp:36: note: ------>vectorizing phi: i_118 = PHI <i_46(17), i_253(36)>

cpp_routines/kick.cpp:36: note: ------>vectorizing phi: .MEM_66 = PHI <.MEM_45(17), .MEM_251(36)>

cpp_routines/kick.cpp:36: note: ------>vectorizing statement: _39 = (long unsigned int) i_118;

cpp_routines/kick.cpp:36: note: ------>vectorizing statement: _40 = _39 * 8;

cpp_routines/kick.cpp:36: note: ------>vectorizing statement: _41 = beam_dE_10(D) + _40;

cpp_routines/kick.cpp:36: note: ------>vectorizing statement: _42 = *_41;

cpp_routines/kick.cpp:36: note: transform statement.
cpp_routines/kick.cpp:36: note: transform load. ncopies = 1
cpp_routines/kick.cpp:36: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *beam_dE_10(D)
cpp_routines/kick.cpp:36: note: created vect_pbeam_dE.25_222
cpp_routines/kick.cpp:36: note: add new stmt: vect_var_.26_219 = MEM[(double *)vect_pbeam_dE.22_221];

cpp_routines/kick.cpp:36: note: ------>vectorizing statement: _44 = _42 + acc_kick_43(D);

cpp_routines/kick.cpp:36: note: transform statement.
cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand _42
cpp_routines/kick.cpp:36: note: def_stmt: _42 = *_41;

cpp_routines/kick.cpp:36: note: type of def: 3.
cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand acc_kick_43(D)
cpp_routines/kick.cpp:36: note: def_stmt: GIMPLE_NOP

cpp_routines/kick.cpp:36: note: transform binary/unary operation.
cpp_routines/kick.cpp:36: note: vect_get_vec_def_for_operand: _42
cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand _42
cpp_routines/kick.cpp:36: note: def_stmt: _42 = *_41;

cpp_routines/kick.cpp:36: note: type of def: 3.
cpp_routines/kick.cpp:36: note: def =  _42  def_stmt =  _42 = *_41;

cpp_routines/kick.cpp:36: note: vect_get_vec_def_for_operand: acc_kick_43(D)
cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand acc_kick_43(D)
cpp_routines/kick.cpp:36: note: def_stmt: GIMPLE_NOP

cpp_routines/kick.cpp:36: note: def =  acc_kick_43(D)  def_stmt =  GIMPLE_NOP

cpp_routines/kick.cpp:36: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:36: note: vectype: const vector(2) double
cpp_routines/kick.cpp:36: note: Create vector_inv.
cpp_routines/kick.cpp:36: note: created new init_stmt: vect_cst_.28_218 = {acc_kick_43(D), acc_kick_43(D)};

cpp_routines/kick.cpp:36: note: add new stmt: vect_var_.27_217 = vect_var_.26_219 + vect_cst_.28_218;

cpp_routines/kick.cpp:36: note: ------>vectorizing statement: *_41 = _44;

cpp_routines/kick.cpp:36: note: transform statement.
cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand _44
cpp_routines/kick.cpp:36: note: def_stmt: _44 = _42 + acc_kick_43(D);

cpp_routines/kick.cpp:36: note: type of def: 3.
cpp_routines/kick.cpp:36: note: transform store. ncopies = 1
cpp_routines/kick.cpp:36: note: vect_get_vec_def_for_operand: _44
cpp_routines/kick.cpp:36: note: vect_is_simple_use: operand _44
cpp_routines/kick.cpp:36: note: def_stmt: _44 = _42 + acc_kick_43(D);

cpp_routines/kick.cpp:36: note: type of def: 3.
cpp_routines/kick.cpp:36: note: def =  _44  def_stmt =  _44 = _42 + acc_kick_43(D);

cpp_routines/kick.cpp:36: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *beam_dE_10(D)
cpp_routines/kick.cpp:36: note: created vect_pbeam_dE.32_215
cpp_routines/kick.cpp:36: note: add new stmt: MEM[(double *)vect_pbeam_dE.29_213] = vect_var_.27_217;

cpp_routines/kick.cpp:36: note: ------>vectorizing statement: i_46 = i_118 + 1;

cpp_routines/kick.cpp:36: note: ------>vectorizing statement: vect_pbeam_dE.22_220 = vect_pbeam_dE.22_221 + 16;

cpp_routines/kick.cpp:36: note: ------>vectorizing statement: vect_pbeam_dE.29_212 = vect_pbeam_dE.29_213 + 16;

cpp_routines/kick.cpp:36: note: ------>vectorizing statement: if (n_macroparticles_9(D) > i_46)

loop at cpp_routines/kick.cpp:37: if (ivtmp_207 < bnd.19_242)

cpp_routines/kick.cpp:36: note: LOOP VECTORIZED.
Analyzing loop at cpp_routines/kick.cpp:29

cpp_routines/kick.cpp:29: note: ===== analyze_loop_nest =====
cpp_routines/kick.cpp:29: note: === vect_analyze_loop_form ===
cpp_routines/kick.cpp:29: note: ===== analyze_loop_nest_1 =====
cpp_routines/kick.cpp:29: note: === vect_analyze_loop_form ===
cpp_routines/kick.cpp:29: note: === get_loop_niters ===
cpp_routines/kick.cpp:29: note: ==> get_loop_niters:(unsigned int) n_macroparticles_9(D)
cpp_routines/kick.cpp:29: note: Symbolic number of iterations is (unsigned int) n_macroparticles_9(D)
cpp_routines/kick.cpp:29: note: not vectorized: control flow in loop.
cpp_routines/kick.cpp:29: note: bad loop form.
Analyzing loop at cpp_routines/kick.cpp:30

cpp_routines/kick.cpp:30: note: ===== analyze_loop_nest =====
cpp_routines/kick.cpp:30: note: === vect_analyze_loop_form ===
cpp_routines/kick.cpp:30: note: === get_loop_niters ===
cpp_routines/kick.cpp:30: note: ==> get_loop_niters:(unsigned int) n_macroparticles_9(D)
cpp_routines/kick.cpp:30: note: Symbolic number of iterations is (unsigned int) n_macroparticles_9(D)
cpp_routines/kick.cpp:30: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:30: note: vectype: const vector(2) double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: === vect_analyze_scalar_cycles ===
cpp_routines/kick.cpp:30: note: Analyze phi: i_112 = PHI <i_36(4), 0(10)>

cpp_routines/kick.cpp:30: note: Access function of PHI: {0, +, 1}_2
cpp_routines/kick.cpp:30: note: step: 1,  init: 0
cpp_routines/kick.cpp:30: note: Detected induction.
cpp_routines/kick.cpp:30: note: Analyze phi: .MEM_119 = PHI <.MEM_35(4), .MEM_109(10)>

cpp_routines/kick.cpp:30: note: === vect_pattern_recog ===
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _11
cpp_routines/kick.cpp:30: note: def_stmt: _11 = (long unsigned int) i_112;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand i_112
cpp_routines/kick.cpp:30: note: def_stmt: i_112 = PHI <i_36(4), 0(10)>

cpp_routines/kick.cpp:30: note: type of def: 4.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 8
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _26
cpp_routines/kick.cpp:30: note: def_stmt: _26 = *_25;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand x_51
cpp_routines/kick.cpp:30: note: def_stmt: x_51 = ABS_EXPR <_31>;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand y_56
cpp_routines/kick.cpp:30: note: def_stmt: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand y_56
cpp_routines/kick.cpp:30: note: def_stmt: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand y_56
cpp_routines/kick.cpp:30: note: def_stmt: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_65
cpp_routines/kick.cpp:30: note: def_stmt: j_65 = j_55 + -2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_47
cpp_routines/kick.cpp:30: note: def_stmt: powmult_47 = powmult_92 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_81
cpp_routines/kick.cpp:30: note: def_stmt: px_81 = px_80 + -2.50507477628578065605381215057503863086196815856965258718e-8;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_83
cpp_routines/kick.cpp:30: note: def_stmt: px_83 = px_82 + 2.75573136213857224533049956882724274009888176806271076202e-6;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_85
cpp_routines/kick.cpp:30: note: def_stmt: px_85 = px_84 + -1.98412698295895388025597561032498106214916333556175231934e-4;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_87
cpp_routines/kick.cpp:30: note: def_stmt: px_87 = px_86 + 8.3333333333221182304129115436808206140995025634765625e-3;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_89
cpp_routines/kick.cpp:30: note: def_stmt: px_89 = px_88 + -1.666666666666662965923251249478198587894439697265625e-1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _79
cpp_routines/kick.cpp:30: note: def_stmt: _79 = px_89 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:30: note: vectype: const vector(2) double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:30: note: vectype: const vector(2) double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_117
cpp_routines/kick.cpp:30: note: def_stmt: s_117 = _31 < 0.0 ? s_77 : s_49;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vect_mark_stmts_to_be_vectorized ===
cpp_routines/kick.cpp:30: note: init: phi relevant? i_112 = PHI <i_36(4), 0(10)>

cpp_routines/kick.cpp:30: note: init: phi relevant? .MEM_119 = PHI <.MEM_35(4), .MEM_109(10)>

cpp_routines/kick.cpp:30: note: init: stmt relevant? _11 = (long unsigned int) i_112;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _12 = _11 * 8;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _13 = beam_dE_10(D) + _12;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _14 = *_13;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _25 = beam_dt_24(D) + _12;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _26 = *_25;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _27 = _26 * pretmp_273;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _31 = _27 + pretmp_275;

cpp_routines/kick.cpp:30: note: init: stmt relevant? x_51 = ABS_EXPR <_31>;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _52 = x_51 * 1.2732395447351627648657768077100627124309539794921875e+0;

cpp_routines/kick.cpp:30: note: init: stmt relevant? j_53 = (int) _52;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _54 = j_53 + 1;

cpp_routines/kick.cpp:30: note: init: stmt relevant? j_55 = _54 & -2;

cpp_routines/kick.cpp:30: note: init: stmt relevant? y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _57 = y_56 * 7.853981554508209228515625e-1;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _58 = x_51 - _57;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _59 = y_56 * 7.94662735614792836713604629039764404296875e-9;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _60 = _58 - _59;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _61 = y_56 * 3.06161699786838301793441007364599151156423031169395015949e-17;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _63 = _54 & 4;

cpp_routines/kick.cpp:30: note: init: stmt relevant? signS_64 = (const double) _63;

cpp_routines/kick.cpp:30: note: init: stmt relevant? j_65 = j_55 + -2;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _68 = j_65 & 2;

cpp_routines/kick.cpp:30: note: init: stmt relevant? poly_69 = (const double) _68;

cpp_routines/kick.cpp:30: note: init: stmt relevant? powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _104 = powmult_92 * 5.0e-1;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _105 = 1.0e+0 - _104;

cpp_routines/kick.cpp:30: note: init: stmt relevant? powmult_47 = powmult_92 * powmult_92;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_93 = powmult_92 * -1.13585365213876822713176991261513381400310995772429123463e-11;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_94 = px_93 + 2.08757008419747301468495215943325243879158392701356206089e-9;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_95 = powmult_92 * px_94;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_96 = px_95 + -2.75573141792967400664474044574836497645264898892492055893e-7;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_97 = powmult_92 * px_96;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_98 = px_97 + 2.48015872888517038060297165147360942683008033782243728638e-5;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_99 = powmult_92 * px_98;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_100 = px_99 + -1.38888888888730557304163060194923673407174646854400634766e-3;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_101 = powmult_92 * px_100;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_102 = px_101 + 4.1666666666666594964762992958640097640454769134521484375e-2;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _103 = powmult_47 * px_102;

cpp_routines/kick.cpp:30: note: init: stmt relevant? s_106 = _105 + _103;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_80 = powmult_92 * 1.58962301576546557338943663847832896834910698657949978951e-10;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_81 = px_80 + -2.50507477628578065605381215057503863086196815856965258718e-8;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_82 = px_81 * powmult_92;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_83 = px_82 + 2.75573136213857224533049956882724274009888176806271076202e-6;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_84 = px_83 * powmult_92;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_85 = px_84 + -1.98412698295895388025597561032498106214916333556175231934e-4;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_86 = px_85 * powmult_92;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_87 = px_86 + 8.3333333333221182304129115436808206140995025634765625e-3;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_88 = px_87 * powmult_92;

cpp_routines/kick.cpp:30: note: init: stmt relevant? px_89 = px_88 + -1.666666666666662965923251249478198587894439697265625e-1;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _79 = px_89 * powmult_92;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _90 = _79 * _62;

cpp_routines/kick.cpp:30: note: init: stmt relevant? s_91 = _90 + _62;

cpp_routines/kick.cpp:30: note: init: stmt relevant? s_50 = poly_69 == 0.0 ? s_106 : s_91;

cpp_routines/kick.cpp:30: note: init: stmt relevant? s_75 = -s_50;

cpp_routines/kick.cpp:30: note: init: stmt relevant? s_49 = signS_64 != 0.0 ? s_75 : s_50;

cpp_routines/kick.cpp:30: note: init: stmt relevant? s_77 = -s_49;

cpp_routines/kick.cpp:30: note: init: stmt relevant? s_117 = _31 < 0.0 ? s_77 : s_49;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _33 = s_117 * pretmp_271;

cpp_routines/kick.cpp:30: note: init: stmt relevant? _34 = _33 + _14;

cpp_routines/kick.cpp:30: note: init: stmt relevant? *_13 = _34;

cpp_routines/kick.cpp:30: note: vec_stmt_relevant_p: stmt has vdefs.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: init: stmt relevant? i_36 = i_112 + 1;

cpp_routines/kick.cpp:30: note: init: stmt relevant? if (n_macroparticles_9(D) > i_36)

cpp_routines/kick.cpp:30: note: worklist: examine stmt: *_13 = _34;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _34
cpp_routines/kick.cpp:30: note: def_stmt: _34 = _33 + _14;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _34 = _33 + _14;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _33
cpp_routines/kick.cpp:30: note: def_stmt: _33 = s_117 * pretmp_271;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _14
cpp_routines/kick.cpp:30: note: def_stmt: _14 = *_13;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _14 = *_13;

cpp_routines/kick.cpp:30: note: worklist: examine stmt: _33 = s_117 * pretmp_271;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_117
cpp_routines/kick.cpp:30: note: def_stmt: s_117 = _31 < 0.0 ? s_77 : s_49;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand pretmp_271
cpp_routines/kick.cpp:30: note: def_stmt: pretmp_271 = *pretmp_270;

cpp_routines/kick.cpp:30: note: type of def: 2.
cpp_routines/kick.cpp:30: note: def_stmt is out of loop.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: s_117 = _31 < 0.0 ? s_77 : s_49;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _31
cpp_routines/kick.cpp:30: note: def_stmt: _31 = _27 + pretmp_275;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_77
cpp_routines/kick.cpp:30: note: def_stmt: s_77 = -s_49;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_49
cpp_routines/kick.cpp:30: note: def_stmt: s_49 = signS_64 != 0.0 ? s_75 : s_50;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: s_49 = signS_64 != 0.0 ? s_75 : s_50;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand signS_64
cpp_routines/kick.cpp:30: note: def_stmt: signS_64 = (const double) _63;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_75
cpp_routines/kick.cpp:30: note: def_stmt: s_75 = -s_50;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_50
cpp_routines/kick.cpp:30: note: def_stmt: s_50 = poly_69 == 0.0 ? s_106 : s_91;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: s_50 = poly_69 == 0.0 ? s_106 : s_91;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand poly_69
cpp_routines/kick.cpp:30: note: def_stmt: poly_69 = (const double) _68;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_106
cpp_routines/kick.cpp:30: note: def_stmt: s_106 = _105 + _103;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_91
cpp_routines/kick.cpp:30: note: def_stmt: s_91 = _90 + _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: s_91 = _90 + _62;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _90
cpp_routines/kick.cpp:30: note: def_stmt: _90 = _79 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _60
cpp_routines/kick.cpp:30: note: def_stmt: _60 = _58 - _59;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _61
cpp_routines/kick.cpp:30: note: def_stmt: _61 = y_56 * 3.06161699786838301793441007364599151156423031169395015949e-17;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _61 = y_56 * 3.06161699786838301793441007364599151156423031169395015949e-17;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand y_56
cpp_routines/kick.cpp:30: note: def_stmt: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_55
cpp_routines/kick.cpp:30: note: def_stmt: j_55 = _54 & -2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: j_55 = _54 & -2;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _54
cpp_routines/kick.cpp:30: note: def_stmt: _54 = j_53 + 1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _54 = j_53 + 1;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_53
cpp_routines/kick.cpp:30: note: def_stmt: j_53 = (int) _52;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: j_53 = (int) _52;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _52
cpp_routines/kick.cpp:30: note: def_stmt: _52 = x_51 * 1.2732395447351627648657768077100627124309539794921875e+0;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _52 = x_51 * 1.2732395447351627648657768077100627124309539794921875e+0;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand x_51
cpp_routines/kick.cpp:30: note: def_stmt: x_51 = ABS_EXPR <_31>;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: x_51 = ABS_EXPR <_31>;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _31
cpp_routines/kick.cpp:30: note: def_stmt: _31 = _27 + pretmp_275;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _60 = _58 - _59;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _58
cpp_routines/kick.cpp:30: note: def_stmt: _58 = x_51 - _57;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _59
cpp_routines/kick.cpp:30: note: def_stmt: _59 = y_56 * 7.94662735614792836713604629039764404296875e-9;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _59 = y_56 * 7.94662735614792836713604629039764404296875e-9;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand y_56
cpp_routines/kick.cpp:30: note: def_stmt: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _58 = x_51 - _57;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand x_51
cpp_routines/kick.cpp:30: note: def_stmt: x_51 = ABS_EXPR <_31>;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _57
cpp_routines/kick.cpp:30: note: def_stmt: _57 = y_56 * 7.853981554508209228515625e-1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _57 = y_56 * 7.853981554508209228515625e-1;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand y_56
cpp_routines/kick.cpp:30: note: def_stmt: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _90 = _79 * _62;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _79
cpp_routines/kick.cpp:30: note: def_stmt: _79 = px_89 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _79 = px_89 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_89
cpp_routines/kick.cpp:30: note: def_stmt: px_89 = px_88 + -1.666666666666662965923251249478198587894439697265625e-1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_89 = px_88 + -1.666666666666662965923251249478198587894439697265625e-1;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_88
cpp_routines/kick.cpp:30: note: def_stmt: px_88 = px_87 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_88 = px_87 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_87
cpp_routines/kick.cpp:30: note: def_stmt: px_87 = px_86 + 8.3333333333221182304129115436808206140995025634765625e-3;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_87 = px_86 + 8.3333333333221182304129115436808206140995025634765625e-3;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_86
cpp_routines/kick.cpp:30: note: def_stmt: px_86 = px_85 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_86 = px_85 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_85
cpp_routines/kick.cpp:30: note: def_stmt: px_85 = px_84 + -1.98412698295895388025597561032498106214916333556175231934e-4;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_85 = px_84 + -1.98412698295895388025597561032498106214916333556175231934e-4;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_84
cpp_routines/kick.cpp:30: note: def_stmt: px_84 = px_83 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_84 = px_83 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_83
cpp_routines/kick.cpp:30: note: def_stmt: px_83 = px_82 + 2.75573136213857224533049956882724274009888176806271076202e-6;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_83 = px_82 + 2.75573136213857224533049956882724274009888176806271076202e-6;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_82
cpp_routines/kick.cpp:30: note: def_stmt: px_82 = px_81 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_82 = px_81 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_81
cpp_routines/kick.cpp:30: note: def_stmt: px_81 = px_80 + -2.50507477628578065605381215057503863086196815856965258718e-8;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_81 = px_80 + -2.50507477628578065605381215057503863086196815856965258718e-8;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_80
cpp_routines/kick.cpp:30: note: def_stmt: px_80 = powmult_92 * 1.58962301576546557338943663847832896834910698657949978951e-10;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_80 = powmult_92 * 1.58962301576546557338943663847832896834910698657949978951e-10;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: s_106 = _105 + _103;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _105
cpp_routines/kick.cpp:30: note: def_stmt: _105 = 1.0e+0 - _104;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _103
cpp_routines/kick.cpp:30: note: def_stmt: _103 = powmult_47 * px_102;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _103 = powmult_47 * px_102;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_47
cpp_routines/kick.cpp:30: note: def_stmt: powmult_47 = powmult_92 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_102
cpp_routines/kick.cpp:30: note: def_stmt: px_102 = px_101 + 4.1666666666666594964762992958640097640454769134521484375e-2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_102 = px_101 + 4.1666666666666594964762992958640097640454769134521484375e-2;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_101
cpp_routines/kick.cpp:30: note: def_stmt: px_101 = powmult_92 * px_100;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_101 = powmult_92 * px_100;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_100
cpp_routines/kick.cpp:30: note: def_stmt: px_100 = px_99 + -1.38888888888730557304163060194923673407174646854400634766e-3;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_100 = px_99 + -1.38888888888730557304163060194923673407174646854400634766e-3;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_99
cpp_routines/kick.cpp:30: note: def_stmt: px_99 = powmult_92 * px_98;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_99 = powmult_92 * px_98;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_98
cpp_routines/kick.cpp:30: note: def_stmt: px_98 = px_97 + 2.48015872888517038060297165147360942683008033782243728638e-5;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_98 = px_97 + 2.48015872888517038060297165147360942683008033782243728638e-5;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_97
cpp_routines/kick.cpp:30: note: def_stmt: px_97 = powmult_92 * px_96;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_97 = powmult_92 * px_96;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_96
cpp_routines/kick.cpp:30: note: def_stmt: px_96 = px_95 + -2.75573141792967400664474044574836497645264898892492055893e-7;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_96 = px_95 + -2.75573141792967400664474044574836497645264898892492055893e-7;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_95
cpp_routines/kick.cpp:30: note: def_stmt: px_95 = powmult_92 * px_94;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_95 = powmult_92 * px_94;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_94
cpp_routines/kick.cpp:30: note: def_stmt: px_94 = px_93 + 2.08757008419747301468495215943325243879158392701356206089e-9;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_94 = px_93 + 2.08757008419747301468495215943325243879158392701356206089e-9;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_93
cpp_routines/kick.cpp:30: note: def_stmt: px_93 = powmult_92 * -1.13585365213876822713176991261513381400310995772429123463e-11;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: px_93 = powmult_92 * -1.13585365213876822713176991261513381400310995772429123463e-11;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: powmult_47 = powmult_92 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _105 = 1.0e+0 - _104;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _104
cpp_routines/kick.cpp:30: note: def_stmt: _104 = powmult_92 * 5.0e-1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _104 = powmult_92 * 5.0e-1;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: poly_69 = (const double) _68;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _68
cpp_routines/kick.cpp:30: note: def_stmt: _68 = j_65 & 2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _68 = j_65 & 2;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_65
cpp_routines/kick.cpp:30: note: def_stmt: j_65 = j_55 + -2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: j_65 = j_55 + -2;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_55
cpp_routines/kick.cpp:30: note: def_stmt: j_55 = _54 & -2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: s_75 = -s_50;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_50
cpp_routines/kick.cpp:30: note: def_stmt: s_50 = poly_69 == 0.0 ? s_106 : s_91;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: signS_64 = (const double) _63;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _63
cpp_routines/kick.cpp:30: note: def_stmt: _63 = _54 & 4;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _63 = _54 & 4;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _54
cpp_routines/kick.cpp:30: note: def_stmt: _54 = j_53 + 1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: s_77 = -s_49;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_49
cpp_routines/kick.cpp:30: note: def_stmt: s_49 = signS_64 != 0.0 ? s_75 : s_50;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: already marked relevant/live.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _31 = _27 + pretmp_275;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _27
cpp_routines/kick.cpp:30: note: def_stmt: _27 = _26 * pretmp_273;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand pretmp_275
cpp_routines/kick.cpp:30: note: def_stmt: pretmp_275 = *pretmp_274;

cpp_routines/kick.cpp:30: note: type of def: 2.
cpp_routines/kick.cpp:30: note: def_stmt is out of loop.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _27 = _26 * pretmp_273;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _26
cpp_routines/kick.cpp:30: note: def_stmt: _26 = *_25;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: mark relevant 4, live 0.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand pretmp_273
cpp_routines/kick.cpp:30: note: def_stmt: pretmp_273 = *pretmp_272;

cpp_routines/kick.cpp:30: note: type of def: 2.
cpp_routines/kick.cpp:30: note: def_stmt is out of loop.
cpp_routines/kick.cpp:30: note: worklist: examine stmt: _26 = *_25;

cpp_routines/kick.cpp:30: note: === vect_analyze_dependences ===
cpp_routines/kick.cpp:30: note: dependence distance  = 0.
cpp_routines/kick.cpp:30: note: dependence distance == 0 between *_13 and *_13
cpp_routines/kick.cpp:30: note: === vect_determine_vectorization_factor ===
cpp_routines/kick.cpp:30: note: ==> examining phi: i_112 = PHI <i_36(4), 0(10)>

cpp_routines/kick.cpp:30: note: ==> examining phi: .MEM_119 = PHI <.MEM_35(4), .MEM_109(10)>

cpp_routines/kick.cpp:30: note: ==> examining statement: _11 = (long unsigned int) i_112;

cpp_routines/kick.cpp:30: note: skip.
cpp_routines/kick.cpp:30: note: ==> examining statement: _12 = _11 * 8;

cpp_routines/kick.cpp:30: note: skip.
cpp_routines/kick.cpp:30: note: ==> examining statement: _13 = beam_dE_10(D) + _12;

cpp_routines/kick.cpp:30: note: skip.
cpp_routines/kick.cpp:30: note: ==> examining statement: _14 = *_13;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _25 = beam_dt_24(D) + _12;

cpp_routines/kick.cpp:30: note: skip.
cpp_routines/kick.cpp:30: note: ==> examining statement: _26 = *_25;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _27 = _26 * pretmp_273;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _31 = _27 + pretmp_275;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: x_51 = ABS_EXPR <_31>;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _52 = x_51 * 1.2732395447351627648657768077100627124309539794921875e+0;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: j_53 = (int) _52;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  int
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  int
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: nunits = 4
cpp_routines/kick.cpp:30: note: ==> examining statement: _54 = j_53 + 1;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  int
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  int
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: nunits = 4
cpp_routines/kick.cpp:30: note: ==> examining statement: j_55 = _54 & -2;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  int
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  int
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: nunits = 4
cpp_routines/kick.cpp:30: note: ==> examining statement: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  const double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:30: note: vectype: const vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  int
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: nunits = 4
cpp_routines/kick.cpp:30: note: ==> examining statement: _57 = y_56 * 7.853981554508209228515625e-1;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _58 = x_51 - _57;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _59 = y_56 * 7.94662735614792836713604629039764404296875e-9;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _60 = _58 - _59;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _61 = y_56 * 3.06161699786838301793441007364599151156423031169395015949e-17;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _63 = _54 & 4;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  int
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  int
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: nunits = 4
cpp_routines/kick.cpp:30: note: ==> examining statement: signS_64 = (const double) _63;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  const double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:30: note: vectype: const vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  int
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: nunits = 4
cpp_routines/kick.cpp:30: note: ==> examining statement: j_65 = j_55 + -2;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  int
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  int
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: nunits = 4
cpp_routines/kick.cpp:30: note: ==> examining statement: _68 = j_65 & 2;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  int
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  int
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: nunits = 4
cpp_routines/kick.cpp:30: note: ==> examining statement: poly_69 = (const double) _68;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  const double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:30: note: vectype: const vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  int
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: nunits = 4
cpp_routines/kick.cpp:30: note: ==> examining statement: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _104 = powmult_92 * 5.0e-1;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _105 = 1.0e+0 - _104;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: powmult_47 = powmult_92 * powmult_92;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_93 = powmult_92 * -1.13585365213876822713176991261513381400310995772429123463e-11;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_94 = px_93 + 2.08757008419747301468495215943325243879158392701356206089e-9;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_95 = powmult_92 * px_94;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_96 = px_95 + -2.75573141792967400664474044574836497645264898892492055893e-7;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_97 = powmult_92 * px_96;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_98 = px_97 + 2.48015872888517038060297165147360942683008033782243728638e-5;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_99 = powmult_92 * px_98;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_100 = px_99 + -1.38888888888730557304163060194923673407174646854400634766e-3;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_101 = powmult_92 * px_100;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_102 = px_101 + 4.1666666666666594964762992958640097640454769134521484375e-2;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _103 = powmult_47 * px_102;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: s_106 = _105 + _103;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_80 = powmult_92 * 1.58962301576546557338943663847832896834910698657949978951e-10;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_81 = px_80 + -2.50507477628578065605381215057503863086196815856965258718e-8;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_82 = px_81 * powmult_92;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_83 = px_82 + 2.75573136213857224533049956882724274009888176806271076202e-6;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_84 = px_83 * powmult_92;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_85 = px_84 + -1.98412698295895388025597561032498106214916333556175231934e-4;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_86 = px_85 * powmult_92;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_87 = px_86 + 8.3333333333221182304129115436808206140995025634765625e-3;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_88 = px_87 * powmult_92;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: px_89 = px_88 + -1.666666666666662965923251249478198587894439697265625e-1;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _79 = px_89 * powmult_92;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _90 = _79 * _62;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: s_91 = _90 + _62;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: s_50 = poly_69 == 0.0 ? s_106 : s_91;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: s_75 = -s_50;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: s_49 = signS_64 != 0.0 ? s_75 : s_50;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: s_77 = -s_49;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: s_117 = _31 < 0.0 ? s_77 : s_49;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _33 = s_117 * pretmp_271;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: _34 = _33 + _14;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: *_13 = _34;

cpp_routines/kick.cpp:30: note: get vectype for scalar type:  double
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: nunits = 2
cpp_routines/kick.cpp:30: note: ==> examining statement: i_36 = i_112 + 1;

cpp_routines/kick.cpp:30: note: skip.
cpp_routines/kick.cpp:30: note: ==> examining statement: if (n_macroparticles_9(D) > i_36)

cpp_routines/kick.cpp:30: note: skip.
cpp_routines/kick.cpp:30: note: vectorization factor = 4
cpp_routines/kick.cpp:30: note: === vect_analyze_data_refs_alignment ===
cpp_routines/kick.cpp:30: note: dependence distance  = 0.
cpp_routines/kick.cpp:30: note: accesses have the same alignment.dependence distance modulo vf == 0 between *_13 and *_13
cpp_routines/kick.cpp:30: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:30: note: can't force alignment of ref: *_13
cpp_routines/kick.cpp:30: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:30: note: can't force alignment of ref: *_25
cpp_routines/kick.cpp:30: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:30: note: can't force alignment of ref: *_13
cpp_routines/kick.cpp:30: note: === vect_analyze_data_ref_accesses ===
cpp_routines/kick.cpp:30: note: === vect_prune_runtime_alias_test_list ===
cpp_routines/kick.cpp:30: note: === vect_enhance_data_refs_alignment ===
cpp_routines/kick.cpp:30: note: Unknown misalignment, is_packed = 0
cpp_routines/kick.cpp:30: note: Unknown misalignment, is_packed = 0
cpp_routines/kick.cpp:30: note: Unknown misalignment, is_packed = 0
cpp_routines/kick.cpp:30: note: vect_can_advance_ivs_p:
cpp_routines/kick.cpp:30: note: Analyze phi: i_112 = PHI <i_36(4), 0(10)>

cpp_routines/kick.cpp:30: note: Access function of PHI: {0, +, 1}_2
cpp_routines/kick.cpp:30: note: Analyze phi: .MEM_119 = PHI <.MEM_35(4), .MEM_109(10)>

cpp_routines/kick.cpp:30: note: virtual phi. skip.
cpp_routines/kick.cpp:30: note: vect_model_load_cost: unaligned supported by hardware.
cpp_routines/kick.cpp:30: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
cpp_routines/kick.cpp:30: note: vect_model_store_cost: unaligned supported by hardware.
cpp_routines/kick.cpp:30: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
cpp_routines/kick.cpp:30: note: Setting misalignment to -1.
cpp_routines/kick.cpp:30: note: Setting misalignment to -1.
cpp_routines/kick.cpp:30: note: Alignment of access forced using peeling.
cpp_routines/kick.cpp:30: note: Peeling for alignment will be applied.
cpp_routines/kick.cpp:30: note: Vectorizing an unaligned access.
cpp_routines/kick.cpp:30: note: === vect_analyze_slp ===
cpp_routines/kick.cpp:30: note: === vect_make_slp_decision ===
cpp_routines/kick.cpp:30: note: === vect_detect_hybrid_slp ===
cpp_routines/kick.cpp:30: note: === vect_analyze_loop_operations ===
cpp_routines/kick.cpp:30: note: examining phi: i_112 = PHI <i_36(4), 0(10)>

cpp_routines/kick.cpp:30: note: examining phi: .MEM_119 = PHI <.MEM_35(4), .MEM_109(10)>

cpp_routines/kick.cpp:30: note: ==> examining statement: _11 = (long unsigned int) i_112;

cpp_routines/kick.cpp:30: note: irrelevant.
cpp_routines/kick.cpp:30: note: ==> examining statement: _12 = _11 * 8;

cpp_routines/kick.cpp:30: note: irrelevant.
cpp_routines/kick.cpp:30: note: ==> examining statement: _13 = beam_dE_10(D) + _12;

cpp_routines/kick.cpp:30: note: irrelevant.
cpp_routines/kick.cpp:30: note: ==> examining statement: _14 = *_13;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand *_13
cpp_routines/kick.cpp:30: note: not ssa-name.
cpp_routines/kick.cpp:30: note: use not simple.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand *_13
cpp_routines/kick.cpp:30: note: not ssa-name.
cpp_routines/kick.cpp:30: note: use not simple.
cpp_routines/kick.cpp:30: note: vect_model_load_cost: aligned.
cpp_routines/kick.cpp:30: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _25 = beam_dt_24(D) + _12;

cpp_routines/kick.cpp:30: note: irrelevant.
cpp_routines/kick.cpp:30: note: ==> examining statement: _26 = *_25;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand *_25
cpp_routines/kick.cpp:30: note: not ssa-name.
cpp_routines/kick.cpp:30: note: use not simple.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand *_25
cpp_routines/kick.cpp:30: note: not ssa-name.
cpp_routines/kick.cpp:30: note: use not simple.
cpp_routines/kick.cpp:30: note: vect_model_load_cost: unaligned supported by hardware.
cpp_routines/kick.cpp:30: note: vect_model_load_cost: inside_cost = 4, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _27 = _26 * pretmp_273;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _26
cpp_routines/kick.cpp:30: note: def_stmt: _26 = *_25;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand pretmp_273
cpp_routines/kick.cpp:30: note: def_stmt: pretmp_273 = *pretmp_272;

cpp_routines/kick.cpp:30: note: type of def: 2.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _31 = _27 + pretmp_275;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _27
cpp_routines/kick.cpp:30: note: def_stmt: _27 = _26 * pretmp_273;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand pretmp_275
cpp_routines/kick.cpp:30: note: def_stmt: pretmp_275 = *pretmp_274;

cpp_routines/kick.cpp:30: note: type of def: 2.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: x_51 = ABS_EXPR <_31>;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _31
cpp_routines/kick.cpp:30: note: def_stmt: _31 = _27 + pretmp_275;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _52 = x_51 * 1.2732395447351627648657768077100627124309539794921875e+0;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand x_51
cpp_routines/kick.cpp:30: note: def_stmt: x_51 = ABS_EXPR <_31>;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 1.2732395447351627648657768077100627124309539794921875e+0
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: j_53 = (int) _52;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _52
cpp_routines/kick.cpp:30: note: def_stmt: _52 = x_51 * 1.2732395447351627648657768077100627124309539794921875e+0;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_conversion ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _54 = j_53 + 1;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_53
cpp_routines/kick.cpp:30: note: def_stmt: j_53 = (int) _52;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 1
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: j_55 = _54 & -2;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _54
cpp_routines/kick.cpp:30: note: def_stmt: _54 = j_53 + 1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -2
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_55
cpp_routines/kick.cpp:30: note: def_stmt: j_55 = _54 & -2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_conversion ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _57 = y_56 * 7.853981554508209228515625e-1;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand y_56
cpp_routines/kick.cpp:30: note: def_stmt: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 7.853981554508209228515625e-1
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _58 = x_51 - _57;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand x_51
cpp_routines/kick.cpp:30: note: def_stmt: x_51 = ABS_EXPR <_31>;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _57
cpp_routines/kick.cpp:30: note: def_stmt: _57 = y_56 * 7.853981554508209228515625e-1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _59 = y_56 * 7.94662735614792836713604629039764404296875e-9;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand y_56
cpp_routines/kick.cpp:30: note: def_stmt: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 7.94662735614792836713604629039764404296875e-9
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _60 = _58 - _59;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _58
cpp_routines/kick.cpp:30: note: def_stmt: _58 = x_51 - _57;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _59
cpp_routines/kick.cpp:30: note: def_stmt: _59 = y_56 * 7.94662735614792836713604629039764404296875e-9;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _61 = y_56 * 3.06161699786838301793441007364599151156423031169395015949e-17;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand y_56
cpp_routines/kick.cpp:30: note: def_stmt: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 3.06161699786838301793441007364599151156423031169395015949e-17
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _60
cpp_routines/kick.cpp:30: note: def_stmt: _60 = _58 - _59;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _61
cpp_routines/kick.cpp:30: note: def_stmt: _61 = y_56 * 3.06161699786838301793441007364599151156423031169395015949e-17;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _63 = _54 & 4;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _54
cpp_routines/kick.cpp:30: note: def_stmt: _54 = j_53 + 1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 4
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: signS_64 = (const double) _63;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _63
cpp_routines/kick.cpp:30: note: def_stmt: _63 = _54 & 4;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_conversion ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: j_65 = j_55 + -2;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_55
cpp_routines/kick.cpp:30: note: def_stmt: j_55 = _54 & -2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -2
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _68 = j_65 & 2;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_65
cpp_routines/kick.cpp:30: note: def_stmt: j_65 = j_55 + -2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 2
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: poly_69 = (const double) _68;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _68
cpp_routines/kick.cpp:30: note: def_stmt: _68 = j_65 & 2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_conversion ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _104 = powmult_92 * 5.0e-1;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 5.0e-1
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _105 = 1.0e+0 - _104;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _104
cpp_routines/kick.cpp:30: note: def_stmt: _104 = powmult_92 * 5.0e-1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: powmult_47 = powmult_92 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_93 = powmult_92 * -1.13585365213876822713176991261513381400310995772429123463e-11;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -1.13585365213876822713176991261513381400310995772429123463e-11
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_94 = px_93 + 2.08757008419747301468495215943325243879158392701356206089e-9;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_93
cpp_routines/kick.cpp:30: note: def_stmt: px_93 = powmult_92 * -1.13585365213876822713176991261513381400310995772429123463e-11;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 2.08757008419747301468495215943325243879158392701356206089e-9
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_95 = powmult_92 * px_94;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_94
cpp_routines/kick.cpp:30: note: def_stmt: px_94 = px_93 + 2.08757008419747301468495215943325243879158392701356206089e-9;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_96 = px_95 + -2.75573141792967400664474044574836497645264898892492055893e-7;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_95
cpp_routines/kick.cpp:30: note: def_stmt: px_95 = powmult_92 * px_94;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -2.75573141792967400664474044574836497645264898892492055893e-7
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_97 = powmult_92 * px_96;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_96
cpp_routines/kick.cpp:30: note: def_stmt: px_96 = px_95 + -2.75573141792967400664474044574836497645264898892492055893e-7;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_98 = px_97 + 2.48015872888517038060297165147360942683008033782243728638e-5;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_97
cpp_routines/kick.cpp:30: note: def_stmt: px_97 = powmult_92 * px_96;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 2.48015872888517038060297165147360942683008033782243728638e-5
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_99 = powmult_92 * px_98;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_98
cpp_routines/kick.cpp:30: note: def_stmt: px_98 = px_97 + 2.48015872888517038060297165147360942683008033782243728638e-5;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_100 = px_99 + -1.38888888888730557304163060194923673407174646854400634766e-3;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_99
cpp_routines/kick.cpp:30: note: def_stmt: px_99 = powmult_92 * px_98;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -1.38888888888730557304163060194923673407174646854400634766e-3
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_101 = powmult_92 * px_100;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_100
cpp_routines/kick.cpp:30: note: def_stmt: px_100 = px_99 + -1.38888888888730557304163060194923673407174646854400634766e-3;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_102 = px_101 + 4.1666666666666594964762992958640097640454769134521484375e-2;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_101
cpp_routines/kick.cpp:30: note: def_stmt: px_101 = powmult_92 * px_100;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 4.1666666666666594964762992958640097640454769134521484375e-2
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _103 = powmult_47 * px_102;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_47
cpp_routines/kick.cpp:30: note: def_stmt: powmult_47 = powmult_92 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_102
cpp_routines/kick.cpp:30: note: def_stmt: px_102 = px_101 + 4.1666666666666594964762992958640097640454769134521484375e-2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: s_106 = _105 + _103;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _105
cpp_routines/kick.cpp:30: note: def_stmt: _105 = 1.0e+0 - _104;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _103
cpp_routines/kick.cpp:30: note: def_stmt: _103 = powmult_47 * px_102;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_80 = powmult_92 * 1.58962301576546557338943663847832896834910698657949978951e-10;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 1.58962301576546557338943663847832896834910698657949978951e-10
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_81 = px_80 + -2.50507477628578065605381215057503863086196815856965258718e-8;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_80
cpp_routines/kick.cpp:30: note: def_stmt: px_80 = powmult_92 * 1.58962301576546557338943663847832896834910698657949978951e-10;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -2.50507477628578065605381215057503863086196815856965258718e-8
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_82 = px_81 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_81
cpp_routines/kick.cpp:30: note: def_stmt: px_81 = px_80 + -2.50507477628578065605381215057503863086196815856965258718e-8;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_83 = px_82 + 2.75573136213857224533049956882724274009888176806271076202e-6;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_82
cpp_routines/kick.cpp:30: note: def_stmt: px_82 = px_81 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 2.75573136213857224533049956882724274009888176806271076202e-6
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_84 = px_83 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_83
cpp_routines/kick.cpp:30: note: def_stmt: px_83 = px_82 + 2.75573136213857224533049956882724274009888176806271076202e-6;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_85 = px_84 + -1.98412698295895388025597561032498106214916333556175231934e-4;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_84
cpp_routines/kick.cpp:30: note: def_stmt: px_84 = px_83 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -1.98412698295895388025597561032498106214916333556175231934e-4
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_86 = px_85 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_85
cpp_routines/kick.cpp:30: note: def_stmt: px_85 = px_84 + -1.98412698295895388025597561032498106214916333556175231934e-4;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_87 = px_86 + 8.3333333333221182304129115436808206140995025634765625e-3;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_86
cpp_routines/kick.cpp:30: note: def_stmt: px_86 = px_85 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 8.3333333333221182304129115436808206140995025634765625e-3
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_88 = px_87 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_87
cpp_routines/kick.cpp:30: note: def_stmt: px_87 = px_86 + 8.3333333333221182304129115436808206140995025634765625e-3;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: px_89 = px_88 + -1.666666666666662965923251249478198587894439697265625e-1;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_88
cpp_routines/kick.cpp:30: note: def_stmt: px_88 = px_87 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -1.666666666666662965923251249478198587894439697265625e-1
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _79 = px_89 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_89
cpp_routines/kick.cpp:30: note: def_stmt: px_89 = px_88 + -1.666666666666662965923251249478198587894439697265625e-1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _90 = _79 * _62;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _79
cpp_routines/kick.cpp:30: note: def_stmt: _79 = px_89 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: s_91 = _90 + _62;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _90
cpp_routines/kick.cpp:30: note: def_stmt: _90 = _79 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: s_50 = poly_69 == 0.0 ? s_106 : s_91;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand poly_69 == 0.0
cpp_routines/kick.cpp:30: note: not ssa-name.
cpp_routines/kick.cpp:30: note: use not simple.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand poly_69
cpp_routines/kick.cpp:30: note: def_stmt: poly_69 = (const double) _68;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_106
cpp_routines/kick.cpp:30: note: def_stmt: s_106 = _105 + _103;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_91
cpp_routines/kick.cpp:30: note: def_stmt: s_91 = _90 + _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type unsigned long
cpp_routines/kick.cpp:30: note: vectype: vector(2) unsigned long
cpp_routines/kick.cpp:30: note: ==> examining statement: s_75 = -s_50;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_50
cpp_routines/kick.cpp:30: note: def_stmt: s_50 = poly_69 == 0.0 ? s_106 : s_91;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: s_49 = signS_64 != 0.0 ? s_75 : s_50;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand signS_64 != 0.0
cpp_routines/kick.cpp:30: note: not ssa-name.
cpp_routines/kick.cpp:30: note: use not simple.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand signS_64
cpp_routines/kick.cpp:30: note: def_stmt: signS_64 = (const double) _63;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_75
cpp_routines/kick.cpp:30: note: def_stmt: s_75 = -s_50;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_50
cpp_routines/kick.cpp:30: note: def_stmt: s_50 = poly_69 == 0.0 ? s_106 : s_91;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type unsigned long
cpp_routines/kick.cpp:30: note: vectype: vector(2) unsigned long
cpp_routines/kick.cpp:30: note: ==> examining statement: s_77 = -s_49;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_49
cpp_routines/kick.cpp:30: note: def_stmt: s_49 = signS_64 != 0.0 ? s_75 : s_50;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: s_117 = _31 < 0.0 ? s_77 : s_49;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _31 < 0.0
cpp_routines/kick.cpp:30: note: not ssa-name.
cpp_routines/kick.cpp:30: note: use not simple.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _31
cpp_routines/kick.cpp:30: note: def_stmt: _31 = _27 + pretmp_275;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_77
cpp_routines/kick.cpp:30: note: def_stmt: s_77 = -s_49;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_49
cpp_routines/kick.cpp:30: note: def_stmt: s_49 = signS_64 != 0.0 ? s_75 : s_50;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type unsigned long
cpp_routines/kick.cpp:30: note: vectype: vector(2) unsigned long
cpp_routines/kick.cpp:30: note: ==> examining statement: _33 = s_117 * pretmp_271;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_117
cpp_routines/kick.cpp:30: note: def_stmt: s_117 = _31 < 0.0 ? s_77 : s_49;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand pretmp_271
cpp_routines/kick.cpp:30: note: def_stmt: pretmp_271 = *pretmp_270;

cpp_routines/kick.cpp:30: note: type of def: 2.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
cpp_routines/kick.cpp:30: note: ==> examining statement: _34 = _33 + _14;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _33
cpp_routines/kick.cpp:30: note: def_stmt: _33 = s_117 * pretmp_271;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _14
cpp_routines/kick.cpp:30: note: def_stmt: _14 = *_13;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: === vectorizable_operation ===
cpp_routines/kick.cpp:30: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: *_13 = _34;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _34
cpp_routines/kick.cpp:30: note: def_stmt: _34 = _33 + _14;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_model_store_cost: aligned.
cpp_routines/kick.cpp:30: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/kick.cpp:30: note: ==> examining statement: i_36 = i_112 + 1;

cpp_routines/kick.cpp:30: note: irrelevant.
cpp_routines/kick.cpp:30: note: ==> examining statement: if (n_macroparticles_9(D) > i_36)

cpp_routines/kick.cpp:30: note: irrelevant.
cpp_routines/kick.cpp:30: note: === vect_update_slp_costs_according_to_vf ===cost model: prologue peel iters set to vf/2.cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
cpp_routines/kick.cpp:30: note: Cost model analysis: 
  Vector inside of loop cost: 103
  Vector prologue cost: 150
  Vector epilogue cost: 116
  Scalar iteration cost: 58
  Scalar outside cost: 7
  Vector outside cost: 266
  prologue iterations: 2
  epilogue iterations: 2
  Calculated minimum iters for profitability: 5

cpp_routines/kick.cpp:30: note:   Runtime profitability threshold = 4

cpp_routines/kick.cpp:30: note:   Static estimate profitability threshold = 4

cpp_routines/kick.cpp:30: note: epilog loop required.
cpp_routines/kick.cpp:30: note: vect_can_advance_ivs_p:
cpp_routines/kick.cpp:30: note: Analyze phi: i_112 = PHI <i_36(4), 0(10)>

cpp_routines/kick.cpp:30: note: Access function of PHI: {0, +, 1}_2
cpp_routines/kick.cpp:30: note: Analyze phi: .MEM_119 = PHI <.MEM_35(4), .MEM_109(10)>

cpp_routines/kick.cpp:30: note: virtual phi. skip.

Vectorizing loop at cpp_routines/kick.cpp:30

cpp_routines/kick.cpp:30: note: === vec_transform_loop ===
cpp_routines/kick.cpp:30: note: Profitability threshold is 4 loop iterations.
cpp_routines/kick.cpp:30: note: === vect_do_peeling_for_alignment ===
cpp_routines/kick.cpp:30: note: created vect_pbeam_dE.36_205
cpp_routines/kick.cpp:30: note: niters for prolog loop: MIN_EXPR <(unsigned int) -(((unsigned long) vect_pbeam_dE.36_205 & 15) >> 3) & 1, niters.33_206>
loop at cpp_routines/kick.cpp:32: if (ivtmp_122 < prologue_after_cost_adjust.38_130)
Setting upper bound of nb iterations for prologue loop to 3

cpp_routines/kick.cpp:30: note: === vect_update_inits_of_dr ===
cpp_routines/kick.cpp:30: note: === vect_do_peeling_for_loop_bound ===
cpp_routines/kick.cpp:30: note: vect_update_ivs_after_vectorizer: phi: i_112 = PHI <i_36(4), i_129(51)>

cpp_routines/kick.cpp:30: note: vect_update_ivs_after_vectorizer: phi: .MEM_119 = PHI <.MEM_35(4), .MEM_127(51)>

cpp_routines/kick.cpp:30: note: virtual phi. skip.Setting upper bound of nb iterations for epilogue loop to 2

cpp_routines/kick.cpp:30: note: ------>vectorizing phi: i_112 = PHI <i_36(4), i_129(55)>

cpp_routines/kick.cpp:30: note: ------>vectorizing phi: .MEM_119 = PHI <.MEM_35(4), .MEM_127(55)>

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _11 = (long unsigned int) i_112;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _12 = _11 * 8;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _13 = beam_dE_10(D) + _12;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _14 = *_13;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: transform load. ncopies = 2
cpp_routines/kick.cpp:30: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *beam_dE_10(D)
cpp_routines/kick.cpp:30: note: created vect_pbeam_dE.47_331
cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.48_334 = MEM[(double *)vect_pbeam_dE.44_332];

cpp_routines/kick.cpp:30: note: add new stmt: vect_pbeam_dE.44_335 = vect_pbeam_dE.44_332 + 16;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.49_336 = MEM[(double *)vect_pbeam_dE.44_335];

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _25 = beam_dt_24(D) + _12;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _26 = *_25;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: transform load. ncopies = 2
cpp_routines/kick.cpp:30: note: create vector_type-pointer variable to type: const vector(2) double  vectorizing a pointer ref: *beam_dt_24(D)
cpp_routines/kick.cpp:30: note: created vect_pbeam_dt.53_338
cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.54_341 = MEM[(const double *)vect_pbeam_dt.50_339];

cpp_routines/kick.cpp:30: note: add new stmt: vect_pbeam_dt.50_342 = vect_pbeam_dt.50_339 + 16;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.55_343 = MEM[(const double *)vect_pbeam_dt.50_342];

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _27 = _26 * pretmp_273;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _26
cpp_routines/kick.cpp:30: note: def_stmt: _26 = *_25;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand pretmp_273
cpp_routines/kick.cpp:30: note: def_stmt: pretmp_273 = *pretmp_272;

cpp_routines/kick.cpp:30: note: type of def: 2.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _26
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _26
cpp_routines/kick.cpp:30: note: def_stmt: _26 = *_25;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _26  def_stmt =  _26 = *_25;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: pretmp_273
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand pretmp_273
cpp_routines/kick.cpp:30: note: def_stmt: pretmp_273 = *pretmp_272;

cpp_routines/kick.cpp:30: note: type of def: 2.
cpp_routines/kick.cpp:30: note: def =  pretmp_273  def_stmt =  pretmp_273 = *pretmp_272;

cpp_routines/kick.cpp:30: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:30: note: vectype: const vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_inv.
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.57_344 = {pretmp_273, pretmp_273};

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.56_345 = vect_var_.54_341 * vect_cst_.57_344;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.56_346 = vect_var_.55_343 * vect_cst_.57_344;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _31 = _27 + pretmp_275;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _27
cpp_routines/kick.cpp:30: note: def_stmt: _27 = _26 * pretmp_273;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand pretmp_275
cpp_routines/kick.cpp:30: note: def_stmt: pretmp_275 = *pretmp_274;

cpp_routines/kick.cpp:30: note: type of def: 2.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _27
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _27
cpp_routines/kick.cpp:30: note: def_stmt: _27 = _26 * pretmp_273;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _27  def_stmt =  _27 = _26 * pretmp_273;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: pretmp_275
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand pretmp_275
cpp_routines/kick.cpp:30: note: def_stmt: pretmp_275 = *pretmp_274;

cpp_routines/kick.cpp:30: note: type of def: 2.
cpp_routines/kick.cpp:30: note: def =  pretmp_275  def_stmt =  pretmp_275 = *pretmp_274;

cpp_routines/kick.cpp:30: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:30: note: vectype: const vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_inv.
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.59_347 = {pretmp_275, pretmp_275};

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.58_348 = vect_var_.56_345 + vect_cst_.59_347;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.58_349 = vect_var_.56_346 + vect_cst_.59_347;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: x_51 = ABS_EXPR <_31>;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _31
cpp_routines/kick.cpp:30: note: def_stmt: _31 = _27 + pretmp_275;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _31
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _31
cpp_routines/kick.cpp:30: note: def_stmt: _31 = _27 + pretmp_275;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _31  def_stmt =  _31 = _27 + pretmp_275;

cpp_routines/kick.cpp:30: note: add new stmt: vect_x.60_350 = ABS_EXPR <vect_var_.58_348>;

cpp_routines/kick.cpp:30: note: add new stmt: vect_x.60_351 = ABS_EXPR <vect_var_.58_349>;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _52 = x_51 * 1.2732395447351627648657768077100627124309539794921875e+0;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand x_51
cpp_routines/kick.cpp:30: note: def_stmt: x_51 = ABS_EXPR <_31>;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 1.2732395447351627648657768077100627124309539794921875e+0
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: x_51
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand x_51
cpp_routines/kick.cpp:30: note: def_stmt: x_51 = ABS_EXPR <_31>;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  x_51  def_stmt =  x_51 = ABS_EXPR <_31>;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 1.2732395447351627648657768077100627124309539794921875e+0
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 1.2732395447351627648657768077100627124309539794921875e+0
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.62_352 = { 1.2732395447351627648657768077100627124309539794921875e+0, 1.2732395447351627648657768077100627124309539794921875e+0 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.61_353 = vect_x.60_350 * vect_cst_.62_352;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.61_354 = vect_x.60_351 * vect_cst_.62_352;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: j_53 = (int) _52;

cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _52
cpp_routines/kick.cpp:30: note: def_stmt: _52 = x_51 * 1.2732395447351627648657768077100627124309539794921875e+0;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform conversion. ncopies = 1.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _52
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _52
cpp_routines/kick.cpp:30: note: def_stmt: _52 = x_51 * 1.2732395447351627648657768077100627124309539794921875e+0;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _52  def_stmt =  _52 = x_51 * 1.2732395447351627648657768077100627124309539794921875e+0;

cpp_routines/kick.cpp:30: note: add new stmt: vect_j.63_355 = VEC_PACK_FIX_TRUNC_EXPR <vect_var_.61_353, vect_var_.61_354>;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _54 = j_53 + 1;

cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_53
cpp_routines/kick.cpp:30: note: def_stmt: j_53 = (int) _52;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 1
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: j_53
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_53
cpp_routines/kick.cpp:30: note: def_stmt: j_53 = (int) _52;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  j_53  def_stmt =  j_53 = (int) _52;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 1
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 1
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 4
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.65_356 = { 1, 1, 1, 1 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.64_357 = vect_j.63_355 + vect_cst_.65_356;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: j_55 = _54 & -2;

cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _54
cpp_routines/kick.cpp:30: note: def_stmt: _54 = j_53 + 1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -2
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _54
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _54
cpp_routines/kick.cpp:30: note: def_stmt: _54 = j_53 + 1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _54  def_stmt =  _54 = j_53 + 1;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: -2
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -2
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 4
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.67_358 = { -2, -2, -2, -2 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_j.66_359 = vect_var_.64_357 & vect_cst_.67_358;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_55
cpp_routines/kick.cpp:30: note: def_stmt: j_55 = _54 & -2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform conversion. ncopies = 1.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: j_55
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_55
cpp_routines/kick.cpp:30: note: def_stmt: j_55 = _54 & -2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  j_55  def_stmt =  j_55 = _54 & -2;

cpp_routines/kick.cpp:30: note: add new stmt: vect_y.68_360 = [vec_unpack_float_lo_expr] vect_j.66_359;

cpp_routines/kick.cpp:30: note: add new stmt: vect_y.68_361 = [vec_unpack_float_hi_expr] vect_j.66_359;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _57 = y_56 * 7.853981554508209228515625e-1;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand y_56
cpp_routines/kick.cpp:30: note: def_stmt: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 7.853981554508209228515625e-1
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: y_56
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand y_56
cpp_routines/kick.cpp:30: note: def_stmt: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  y_56  def_stmt =  y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 7.853981554508209228515625e-1
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 7.853981554508209228515625e-1
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.70_362 = { 7.853981554508209228515625e-1, 7.853981554508209228515625e-1 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.69_363 = vect_y.68_360 * vect_cst_.70_362;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.69_364 = vect_y.68_361 * vect_cst_.70_362;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _58 = x_51 - _57;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand x_51
cpp_routines/kick.cpp:30: note: def_stmt: x_51 = ABS_EXPR <_31>;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _57
cpp_routines/kick.cpp:30: note: def_stmt: _57 = y_56 * 7.853981554508209228515625e-1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: x_51
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand x_51
cpp_routines/kick.cpp:30: note: def_stmt: x_51 = ABS_EXPR <_31>;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  x_51  def_stmt =  x_51 = ABS_EXPR <_31>;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _57
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _57
cpp_routines/kick.cpp:30: note: def_stmt: _57 = y_56 * 7.853981554508209228515625e-1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _57  def_stmt =  _57 = y_56 * 7.853981554508209228515625e-1;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.71_365 = vect_x.60_350 - vect_var_.69_363;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.71_366 = vect_x.60_351 - vect_var_.69_364;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _59 = y_56 * 7.94662735614792836713604629039764404296875e-9;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand y_56
cpp_routines/kick.cpp:30: note: def_stmt: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 7.94662735614792836713604629039764404296875e-9
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: y_56
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand y_56
cpp_routines/kick.cpp:30: note: def_stmt: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  y_56  def_stmt =  y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 7.94662735614792836713604629039764404296875e-9
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 7.94662735614792836713604629039764404296875e-9
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.73_367 = { 7.94662735614792836713604629039764404296875e-9, 7.94662735614792836713604629039764404296875e-9 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.72_368 = vect_y.68_360 * vect_cst_.73_367;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.72_369 = vect_y.68_361 * vect_cst_.73_367;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _60 = _58 - _59;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _58
cpp_routines/kick.cpp:30: note: def_stmt: _58 = x_51 - _57;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _59
cpp_routines/kick.cpp:30: note: def_stmt: _59 = y_56 * 7.94662735614792836713604629039764404296875e-9;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _58
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _58
cpp_routines/kick.cpp:30: note: def_stmt: _58 = x_51 - _57;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _58  def_stmt =  _58 = x_51 - _57;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _59
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _59
cpp_routines/kick.cpp:30: note: def_stmt: _59 = y_56 * 7.94662735614792836713604629039764404296875e-9;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _59  def_stmt =  _59 = y_56 * 7.94662735614792836713604629039764404296875e-9;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.74_370 = vect_var_.71_365 - vect_var_.72_368;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.74_371 = vect_var_.71_366 - vect_var_.72_369;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _61 = y_56 * 3.06161699786838301793441007364599151156423031169395015949e-17;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand y_56
cpp_routines/kick.cpp:30: note: def_stmt: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 3.06161699786838301793441007364599151156423031169395015949e-17
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: y_56
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand y_56
cpp_routines/kick.cpp:30: note: def_stmt: y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  y_56  def_stmt =  y_56 = (const double) j_55;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 3.06161699786838301793441007364599151156423031169395015949e-17
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 3.06161699786838301793441007364599151156423031169395015949e-17
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.76_372 = { 3.06161699786838301793441007364599151156423031169395015949e-17, 3.06161699786838301793441007364599151156423031169395015949e-17 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.75_373 = vect_y.68_360 * vect_cst_.76_372;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.75_374 = vect_y.68_361 * vect_cst_.76_372;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _60
cpp_routines/kick.cpp:30: note: def_stmt: _60 = _58 - _59;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _61
cpp_routines/kick.cpp:30: note: def_stmt: _61 = y_56 * 3.06161699786838301793441007364599151156423031169395015949e-17;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _60
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _60
cpp_routines/kick.cpp:30: note: def_stmt: _60 = _58 - _59;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _60  def_stmt =  _60 = _58 - _59;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _61
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _61
cpp_routines/kick.cpp:30: note: def_stmt: _61 = y_56 * 3.06161699786838301793441007364599151156423031169395015949e-17;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _61  def_stmt =  _61 = y_56 * 3.06161699786838301793441007364599151156423031169395015949e-17;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.77_375 = vect_var_.74_370 - vect_var_.75_373;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.77_376 = vect_var_.74_371 - vect_var_.75_374;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _63 = _54 & 4;

cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _54
cpp_routines/kick.cpp:30: note: def_stmt: _54 = j_53 + 1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 4
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _54
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _54
cpp_routines/kick.cpp:30: note: def_stmt: _54 = j_53 + 1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _54  def_stmt =  _54 = j_53 + 1;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 4
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 4
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 4
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.79_377 = { 4, 4, 4, 4 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.78_378 = vect_var_.64_357 & vect_cst_.79_377;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: signS_64 = (const double) _63;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _63
cpp_routines/kick.cpp:30: note: def_stmt: _63 = _54 & 4;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform conversion. ncopies = 1.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _63
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _63
cpp_routines/kick.cpp:30: note: def_stmt: _63 = _54 & 4;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _63  def_stmt =  _63 = _54 & 4;

cpp_routines/kick.cpp:30: note: add new stmt: vect_signS.80_379 = [vec_unpack_float_lo_expr] vect_var_.78_378;

cpp_routines/kick.cpp:30: note: add new stmt: vect_signS.80_380 = [vec_unpack_float_hi_expr] vect_var_.78_378;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: j_65 = j_55 + -2;

cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_55
cpp_routines/kick.cpp:30: note: def_stmt: j_55 = _54 & -2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -2
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: j_55
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_55
cpp_routines/kick.cpp:30: note: def_stmt: j_55 = _54 & -2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  j_55  def_stmt =  j_55 = _54 & -2;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: -2
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -2
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 4
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.82_381 = { -2, -2, -2, -2 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_j.81_382 = vect_j.66_359 + vect_cst_.82_381;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _68 = j_65 & 2;

cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_65
cpp_routines/kick.cpp:30: note: def_stmt: j_65 = j_55 + -2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 2
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: j_65
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand j_65
cpp_routines/kick.cpp:30: note: def_stmt: j_65 = j_55 + -2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  j_65  def_stmt =  j_65 = j_55 + -2;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 2
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 2
cpp_routines/kick.cpp:30: note: get vectype with 4 units of type int
cpp_routines/kick.cpp:30: note: vectype: vector(4) int
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 4
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.84_383 = { 2, 2, 2, 2 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.83_384 = vect_j.81_382 & vect_cst_.84_383;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: poly_69 = (const double) _68;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _68
cpp_routines/kick.cpp:30: note: def_stmt: _68 = j_65 & 2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform conversion. ncopies = 1.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _68
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _68
cpp_routines/kick.cpp:30: note: def_stmt: _68 = j_65 & 2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _68  def_stmt =  _68 = j_65 & 2;

cpp_routines/kick.cpp:30: note: add new stmt: vect_poly.85_385 = [vec_unpack_float_lo_expr] vect_var_.83_384;

cpp_routines/kick.cpp:30: note: add new stmt: vect_poly.85_386 = [vec_unpack_float_hi_expr] vect_var_.83_384;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _62
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _62  def_stmt =  _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _62
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _62  def_stmt =  _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: add new stmt: vect_powmult.86_387 = vect_var_.77_375 * vect_var_.77_375;

cpp_routines/kick.cpp:30: note: add new stmt: vect_powmult.86_388 = vect_var_.77_376 * vect_var_.77_376;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _104 = powmult_92 * 5.0e-1;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 5.0e-1
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: powmult_92
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  powmult_92  def_stmt =  powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 5.0e-1
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 5.0e-1
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.88_389 = { 5.0e-1, 5.0e-1 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.87_390 = vect_powmult.86_387 * vect_cst_.88_389;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.87_391 = vect_powmult.86_388 * vect_cst_.88_389;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _105 = 1.0e+0 - _104;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _104
cpp_routines/kick.cpp:30: note: def_stmt: _104 = powmult_92 * 5.0e-1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 1.0e+0
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.90_392 = { 1.0e+0, 1.0e+0 };

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _104
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _104
cpp_routines/kick.cpp:30: note: def_stmt: _104 = powmult_92 * 5.0e-1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _104  def_stmt =  _104 = powmult_92 * 5.0e-1;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.89_393 = vect_cst_.90_392 - vect_var_.87_390;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.89_394 = vect_cst_.90_392 - vect_var_.87_391;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: powmult_47 = powmult_92 * powmult_92;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: powmult_92
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  powmult_92  def_stmt =  powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: powmult_92
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  powmult_92  def_stmt =  powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: add new stmt: vect_powmult.91_395 = vect_powmult.86_387 * vect_powmult.86_387;

cpp_routines/kick.cpp:30: note: add new stmt: vect_powmult.91_396 = vect_powmult.86_388 * vect_powmult.86_388;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_93 = powmult_92 * -1.13585365213876822713176991261513381400310995772429123463e-11;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -1.13585365213876822713176991261513381400310995772429123463e-11
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: powmult_92
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  powmult_92  def_stmt =  powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: -1.13585365213876822713176991261513381400310995772429123463e-11
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -1.13585365213876822713176991261513381400310995772429123463e-11
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.93_397 = { -1.13585365213876822713176991261513381400310995772429123463e-11, -1.13585365213876822713176991261513381400310995772429123463e-11 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.92_398 = vect_powmult.86_387 * vect_cst_.93_397;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.92_399 = vect_powmult.86_388 * vect_cst_.93_397;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_94 = px_93 + 2.08757008419747301468495215943325243879158392701356206089e-9;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_93
cpp_routines/kick.cpp:30: note: def_stmt: px_93 = powmult_92 * -1.13585365213876822713176991261513381400310995772429123463e-11;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 2.08757008419747301468495215943325243879158392701356206089e-9
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_93
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_93
cpp_routines/kick.cpp:30: note: def_stmt: px_93 = powmult_92 * -1.13585365213876822713176991261513381400310995772429123463e-11;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_93  def_stmt =  px_93 = powmult_92 * -1.13585365213876822713176991261513381400310995772429123463e-11;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 2.08757008419747301468495215943325243879158392701356206089e-9
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 2.08757008419747301468495215943325243879158392701356206089e-9
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.95_400 = { 2.08757008419747301468495215943325243879158392701356206089e-9, 2.08757008419747301468495215943325243879158392701356206089e-9 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.94_401 = vect_px.92_398 + vect_cst_.95_400;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.94_402 = vect_px.92_399 + vect_cst_.95_400;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_95 = powmult_92 * px_94;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_94
cpp_routines/kick.cpp:30: note: def_stmt: px_94 = px_93 + 2.08757008419747301468495215943325243879158392701356206089e-9;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: powmult_92
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  powmult_92  def_stmt =  powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_94
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_94
cpp_routines/kick.cpp:30: note: def_stmt: px_94 = px_93 + 2.08757008419747301468495215943325243879158392701356206089e-9;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_94  def_stmt =  px_94 = px_93 + 2.08757008419747301468495215943325243879158392701356206089e-9;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.96_403 = vect_powmult.86_387 * vect_px.94_401;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.96_404 = vect_powmult.86_388 * vect_px.94_402;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_96 = px_95 + -2.75573141792967400664474044574836497645264898892492055893e-7;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_95
cpp_routines/kick.cpp:30: note: def_stmt: px_95 = powmult_92 * px_94;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -2.75573141792967400664474044574836497645264898892492055893e-7
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_95
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_95
cpp_routines/kick.cpp:30: note: def_stmt: px_95 = powmult_92 * px_94;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_95  def_stmt =  px_95 = powmult_92 * px_94;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: -2.75573141792967400664474044574836497645264898892492055893e-7
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -2.75573141792967400664474044574836497645264898892492055893e-7
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.98_405 = { -2.75573141792967400664474044574836497645264898892492055893e-7, -2.75573141792967400664474044574836497645264898892492055893e-7 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.97_406 = vect_px.96_403 + vect_cst_.98_405;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.97_407 = vect_px.96_404 + vect_cst_.98_405;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_97 = powmult_92 * px_96;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_96
cpp_routines/kick.cpp:30: note: def_stmt: px_96 = px_95 + -2.75573141792967400664474044574836497645264898892492055893e-7;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: powmult_92
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  powmult_92  def_stmt =  powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_96
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_96
cpp_routines/kick.cpp:30: note: def_stmt: px_96 = px_95 + -2.75573141792967400664474044574836497645264898892492055893e-7;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_96  def_stmt =  px_96 = px_95 + -2.75573141792967400664474044574836497645264898892492055893e-7;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.99_408 = vect_powmult.86_387 * vect_px.97_406;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.99_409 = vect_powmult.86_388 * vect_px.97_407;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_98 = px_97 + 2.48015872888517038060297165147360942683008033782243728638e-5;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_97
cpp_routines/kick.cpp:30: note: def_stmt: px_97 = powmult_92 * px_96;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 2.48015872888517038060297165147360942683008033782243728638e-5
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_97
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_97
cpp_routines/kick.cpp:30: note: def_stmt: px_97 = powmult_92 * px_96;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_97  def_stmt =  px_97 = powmult_92 * px_96;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 2.48015872888517038060297165147360942683008033782243728638e-5
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 2.48015872888517038060297165147360942683008033782243728638e-5
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.101_410 = { 2.48015872888517038060297165147360942683008033782243728638e-5, 2.48015872888517038060297165147360942683008033782243728638e-5 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.100_411 = vect_px.99_408 + vect_cst_.101_410;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.100_412 = vect_px.99_409 + vect_cst_.101_410;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_99 = powmult_92 * px_98;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_98
cpp_routines/kick.cpp:30: note: def_stmt: px_98 = px_97 + 2.48015872888517038060297165147360942683008033782243728638e-5;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: powmult_92
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  powmult_92  def_stmt =  powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_98
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_98
cpp_routines/kick.cpp:30: note: def_stmt: px_98 = px_97 + 2.48015872888517038060297165147360942683008033782243728638e-5;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_98  def_stmt =  px_98 = px_97 + 2.48015872888517038060297165147360942683008033782243728638e-5;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.102_413 = vect_powmult.86_387 * vect_px.100_411;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.102_414 = vect_powmult.86_388 * vect_px.100_412;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_100 = px_99 + -1.38888888888730557304163060194923673407174646854400634766e-3;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_99
cpp_routines/kick.cpp:30: note: def_stmt: px_99 = powmult_92 * px_98;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -1.38888888888730557304163060194923673407174646854400634766e-3
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_99
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_99
cpp_routines/kick.cpp:30: note: def_stmt: px_99 = powmult_92 * px_98;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_99  def_stmt =  px_99 = powmult_92 * px_98;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: -1.38888888888730557304163060194923673407174646854400634766e-3
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -1.38888888888730557304163060194923673407174646854400634766e-3
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.104_415 = { -1.38888888888730557304163060194923673407174646854400634766e-3, -1.38888888888730557304163060194923673407174646854400634766e-3 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.103_416 = vect_px.102_413 + vect_cst_.104_415;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.103_417 = vect_px.102_414 + vect_cst_.104_415;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_101 = powmult_92 * px_100;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_100
cpp_routines/kick.cpp:30: note: def_stmt: px_100 = px_99 + -1.38888888888730557304163060194923673407174646854400634766e-3;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: powmult_92
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  powmult_92  def_stmt =  powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_100
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_100
cpp_routines/kick.cpp:30: note: def_stmt: px_100 = px_99 + -1.38888888888730557304163060194923673407174646854400634766e-3;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_100  def_stmt =  px_100 = px_99 + -1.38888888888730557304163060194923673407174646854400634766e-3;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.105_418 = vect_powmult.86_387 * vect_px.103_416;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.105_419 = vect_powmult.86_388 * vect_px.103_417;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_102 = px_101 + 4.1666666666666594964762992958640097640454769134521484375e-2;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_101
cpp_routines/kick.cpp:30: note: def_stmt: px_101 = powmult_92 * px_100;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 4.1666666666666594964762992958640097640454769134521484375e-2
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_101
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_101
cpp_routines/kick.cpp:30: note: def_stmt: px_101 = powmult_92 * px_100;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_101  def_stmt =  px_101 = powmult_92 * px_100;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 4.1666666666666594964762992958640097640454769134521484375e-2
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 4.1666666666666594964762992958640097640454769134521484375e-2
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.107_420 = { 4.1666666666666594964762992958640097640454769134521484375e-2, 4.1666666666666594964762992958640097640454769134521484375e-2 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.106_421 = vect_px.105_418 + vect_cst_.107_420;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.106_422 = vect_px.105_419 + vect_cst_.107_420;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _103 = powmult_47 * px_102;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_47
cpp_routines/kick.cpp:30: note: def_stmt: powmult_47 = powmult_92 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_102
cpp_routines/kick.cpp:30: note: def_stmt: px_102 = px_101 + 4.1666666666666594964762992958640097640454769134521484375e-2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: powmult_47
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_47
cpp_routines/kick.cpp:30: note: def_stmt: powmult_47 = powmult_92 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  powmult_47  def_stmt =  powmult_47 = powmult_92 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_102
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_102
cpp_routines/kick.cpp:30: note: def_stmt: px_102 = px_101 + 4.1666666666666594964762992958640097640454769134521484375e-2;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_102  def_stmt =  px_102 = px_101 + 4.1666666666666594964762992958640097640454769134521484375e-2;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.108_423 = vect_powmult.91_395 * vect_px.106_421;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.108_424 = vect_powmult.91_396 * vect_px.106_422;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: s_106 = _105 + _103;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _105
cpp_routines/kick.cpp:30: note: def_stmt: _105 = 1.0e+0 - _104;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _103
cpp_routines/kick.cpp:30: note: def_stmt: _103 = powmult_47 * px_102;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _105
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _105
cpp_routines/kick.cpp:30: note: def_stmt: _105 = 1.0e+0 - _104;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _105  def_stmt =  _105 = 1.0e+0 - _104;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _103
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _103
cpp_routines/kick.cpp:30: note: def_stmt: _103 = powmult_47 * px_102;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _103  def_stmt =  _103 = powmult_47 * px_102;

cpp_routines/kick.cpp:30: note: add new stmt: vect_s.109_425 = vect_var_.89_393 + vect_var_.108_423;

cpp_routines/kick.cpp:30: note: add new stmt: vect_s.109_426 = vect_var_.89_394 + vect_var_.108_424;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_80 = powmult_92 * 1.58962301576546557338943663847832896834910698657949978951e-10;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 1.58962301576546557338943663847832896834910698657949978951e-10
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: powmult_92
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  powmult_92  def_stmt =  powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 1.58962301576546557338943663847832896834910698657949978951e-10
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 1.58962301576546557338943663847832896834910698657949978951e-10
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.111_427 = { 1.58962301576546557338943663847832896834910698657949978951e-10, 1.58962301576546557338943663847832896834910698657949978951e-10 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.110_428 = vect_powmult.86_387 * vect_cst_.111_427;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.110_429 = vect_powmult.86_388 * vect_cst_.111_427;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_81 = px_80 + -2.50507477628578065605381215057503863086196815856965258718e-8;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_80
cpp_routines/kick.cpp:30: note: def_stmt: px_80 = powmult_92 * 1.58962301576546557338943663847832896834910698657949978951e-10;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -2.50507477628578065605381215057503863086196815856965258718e-8
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_80
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_80
cpp_routines/kick.cpp:30: note: def_stmt: px_80 = powmult_92 * 1.58962301576546557338943663847832896834910698657949978951e-10;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_80  def_stmt =  px_80 = powmult_92 * 1.58962301576546557338943663847832896834910698657949978951e-10;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: -2.50507477628578065605381215057503863086196815856965258718e-8
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -2.50507477628578065605381215057503863086196815856965258718e-8
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.113_430 = { -2.50507477628578065605381215057503863086196815856965258718e-8, -2.50507477628578065605381215057503863086196815856965258718e-8 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.112_431 = vect_px.110_428 + vect_cst_.113_430;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.112_432 = vect_px.110_429 + vect_cst_.113_430;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_82 = px_81 * powmult_92;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_81
cpp_routines/kick.cpp:30: note: def_stmt: px_81 = px_80 + -2.50507477628578065605381215057503863086196815856965258718e-8;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_81
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_81
cpp_routines/kick.cpp:30: note: def_stmt: px_81 = px_80 + -2.50507477628578065605381215057503863086196815856965258718e-8;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_81  def_stmt =  px_81 = px_80 + -2.50507477628578065605381215057503863086196815856965258718e-8;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: powmult_92
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  powmult_92  def_stmt =  powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.114_433 = vect_px.112_431 * vect_powmult.86_387;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.114_434 = vect_px.112_432 * vect_powmult.86_388;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_83 = px_82 + 2.75573136213857224533049956882724274009888176806271076202e-6;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_82
cpp_routines/kick.cpp:30: note: def_stmt: px_82 = px_81 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 2.75573136213857224533049956882724274009888176806271076202e-6
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_82
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_82
cpp_routines/kick.cpp:30: note: def_stmt: px_82 = px_81 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_82  def_stmt =  px_82 = px_81 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 2.75573136213857224533049956882724274009888176806271076202e-6
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 2.75573136213857224533049956882724274009888176806271076202e-6
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.116_435 = { 2.75573136213857224533049956882724274009888176806271076202e-6, 2.75573136213857224533049956882724274009888176806271076202e-6 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.115_436 = vect_px.114_433 + vect_cst_.116_435;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.115_437 = vect_px.114_434 + vect_cst_.116_435;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_84 = px_83 * powmult_92;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_83
cpp_routines/kick.cpp:30: note: def_stmt: px_83 = px_82 + 2.75573136213857224533049956882724274009888176806271076202e-6;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_83
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_83
cpp_routines/kick.cpp:30: note: def_stmt: px_83 = px_82 + 2.75573136213857224533049956882724274009888176806271076202e-6;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_83  def_stmt =  px_83 = px_82 + 2.75573136213857224533049956882724274009888176806271076202e-6;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: powmult_92
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  powmult_92  def_stmt =  powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.117_438 = vect_px.115_436 * vect_powmult.86_387;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.117_439 = vect_px.115_437 * vect_powmult.86_388;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_85 = px_84 + -1.98412698295895388025597561032498106214916333556175231934e-4;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_84
cpp_routines/kick.cpp:30: note: def_stmt: px_84 = px_83 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -1.98412698295895388025597561032498106214916333556175231934e-4
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_84
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_84
cpp_routines/kick.cpp:30: note: def_stmt: px_84 = px_83 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_84  def_stmt =  px_84 = px_83 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: -1.98412698295895388025597561032498106214916333556175231934e-4
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -1.98412698295895388025597561032498106214916333556175231934e-4
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.119_440 = { -1.98412698295895388025597561032498106214916333556175231934e-4, -1.98412698295895388025597561032498106214916333556175231934e-4 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.118_441 = vect_px.117_438 + vect_cst_.119_440;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.118_442 = vect_px.117_439 + vect_cst_.119_440;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_86 = px_85 * powmult_92;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_85
cpp_routines/kick.cpp:30: note: def_stmt: px_85 = px_84 + -1.98412698295895388025597561032498106214916333556175231934e-4;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_85
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_85
cpp_routines/kick.cpp:30: note: def_stmt: px_85 = px_84 + -1.98412698295895388025597561032498106214916333556175231934e-4;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_85  def_stmt =  px_85 = px_84 + -1.98412698295895388025597561032498106214916333556175231934e-4;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: powmult_92
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  powmult_92  def_stmt =  powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.120_443 = vect_px.118_441 * vect_powmult.86_387;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.120_444 = vect_px.118_442 * vect_powmult.86_388;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_87 = px_86 + 8.3333333333221182304129115436808206140995025634765625e-3;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_86
cpp_routines/kick.cpp:30: note: def_stmt: px_86 = px_85 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 8.3333333333221182304129115436808206140995025634765625e-3
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_86
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_86
cpp_routines/kick.cpp:30: note: def_stmt: px_86 = px_85 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_86  def_stmt =  px_86 = px_85 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 8.3333333333221182304129115436808206140995025634765625e-3
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 8.3333333333221182304129115436808206140995025634765625e-3
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.122_445 = { 8.3333333333221182304129115436808206140995025634765625e-3, 8.3333333333221182304129115436808206140995025634765625e-3 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.121_446 = vect_px.120_443 + vect_cst_.122_445;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.121_447 = vect_px.120_444 + vect_cst_.122_445;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_88 = px_87 * powmult_92;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_87
cpp_routines/kick.cpp:30: note: def_stmt: px_87 = px_86 + 8.3333333333221182304129115436808206140995025634765625e-3;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_87
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_87
cpp_routines/kick.cpp:30: note: def_stmt: px_87 = px_86 + 8.3333333333221182304129115436808206140995025634765625e-3;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_87  def_stmt =  px_87 = px_86 + 8.3333333333221182304129115436808206140995025634765625e-3;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: powmult_92
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  powmult_92  def_stmt =  powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.123_448 = vect_px.121_446 * vect_powmult.86_387;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.123_449 = vect_px.121_447 * vect_powmult.86_388;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: px_89 = px_88 + -1.666666666666662965923251249478198587894439697265625e-1;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_88
cpp_routines/kick.cpp:30: note: def_stmt: px_88 = px_87 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -1.666666666666662965923251249478198587894439697265625e-1
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_88
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_88
cpp_routines/kick.cpp:30: note: def_stmt: px_88 = px_87 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_88  def_stmt =  px_88 = px_87 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: -1.666666666666662965923251249478198587894439697265625e-1
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand -1.666666666666662965923251249478198587894439697265625e-1
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.125_450 = { -1.666666666666662965923251249478198587894439697265625e-1, -1.666666666666662965923251249478198587894439697265625e-1 };

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.124_451 = vect_px.123_448 + vect_cst_.125_450;

cpp_routines/kick.cpp:30: note: add new stmt: vect_px.124_452 = vect_px.123_449 + vect_cst_.125_450;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _79 = px_89 * powmult_92;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_89
cpp_routines/kick.cpp:30: note: def_stmt: px_89 = px_88 + -1.666666666666662965923251249478198587894439697265625e-1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: px_89
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand px_89
cpp_routines/kick.cpp:30: note: def_stmt: px_89 = px_88 + -1.666666666666662965923251249478198587894439697265625e-1;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  px_89  def_stmt =  px_89 = px_88 + -1.666666666666662965923251249478198587894439697265625e-1;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: powmult_92
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand powmult_92
cpp_routines/kick.cpp:30: note: def_stmt: powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  powmult_92  def_stmt =  powmult_92 = _62 * _62;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.126_453 = vect_px.124_451 * vect_powmult.86_387;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.126_454 = vect_px.124_452 * vect_powmult.86_388;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _90 = _79 * _62;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _79
cpp_routines/kick.cpp:30: note: def_stmt: _79 = px_89 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _79
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _79
cpp_routines/kick.cpp:30: note: def_stmt: _79 = px_89 * powmult_92;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _79  def_stmt =  _79 = px_89 * powmult_92;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _62
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _62  def_stmt =  _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.127_455 = vect_var_.126_453 * vect_var_.77_375;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.127_456 = vect_var_.126_454 * vect_var_.77_376;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: s_91 = _90 + _62;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _90
cpp_routines/kick.cpp:30: note: def_stmt: _90 = _79 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _90
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _90
cpp_routines/kick.cpp:30: note: def_stmt: _90 = _79 * _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _90  def_stmt =  _90 = _79 * _62;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _62
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _62
cpp_routines/kick.cpp:30: note: def_stmt: _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _62  def_stmt =  _62 = _60 - _61;

cpp_routines/kick.cpp:30: note: add new stmt: vect_s.128_457 = vect_var_.127_455 + vect_var_.77_375;

cpp_routines/kick.cpp:30: note: add new stmt: vect_s.128_458 = vect_var_.127_456 + vect_var_.77_376;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: s_50 = poly_69 == 0.0 ? s_106 : s_91;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand poly_69
cpp_routines/kick.cpp:30: note: def_stmt: poly_69 = (const double) _68;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_106
cpp_routines/kick.cpp:30: note: def_stmt: s_106 = _105 + _103;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_91
cpp_routines/kick.cpp:30: note: def_stmt: s_91 = _90 + _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type unsigned long
cpp_routines/kick.cpp:30: note: vectype: vector(2) unsigned long
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: poly_69
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand poly_69
cpp_routines/kick.cpp:30: note: def_stmt: poly_69 = (const double) _68;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  poly_69  def_stmt =  poly_69 = (const double) _68;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand poly_69
cpp_routines/kick.cpp:30: note: def_stmt: poly_69 = (const double) _68;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 0.0
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 0.0
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:30: note: vectype: vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.130_459 = { 0.0, 0.0 };

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 0.0
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: s_106
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_106
cpp_routines/kick.cpp:30: note: def_stmt: s_106 = _105 + _103;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  s_106  def_stmt =  s_106 = _105 + _103;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_106
cpp_routines/kick.cpp:30: note: def_stmt: s_106 = _105 + _103;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: s_91
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_91
cpp_routines/kick.cpp:30: note: def_stmt: s_91 = _90 + _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  s_91  def_stmt =  s_91 = _90 + _62;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_91
cpp_routines/kick.cpp:30: note: def_stmt: s_91 = _90 + _62;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: add new stmt: vect_s.129_460 = VEC_COND_EXPR <vect_poly.85_385 == vect_cst_.130_459, vect_s.109_425, vect_s.128_457>;

cpp_routines/kick.cpp:30: note: add new stmt: vect_s.129_461 = VEC_COND_EXPR <vect_poly.85_386 == vect_cst_.130_459, vect_s.109_426, vect_s.128_458>;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: s_75 = -s_50;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_50
cpp_routines/kick.cpp:30: note: def_stmt: s_50 = poly_69 == 0.0 ? s_106 : s_91;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: s_50
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_50
cpp_routines/kick.cpp:30: note: def_stmt: s_50 = poly_69 == 0.0 ? s_106 : s_91;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  s_50  def_stmt =  s_50 = poly_69 == 0.0 ? s_106 : s_91;

cpp_routines/kick.cpp:30: note: add new stmt: vect_s.131_462 = -vect_s.129_460;

cpp_routines/kick.cpp:30: note: add new stmt: vect_s.131_463 = -vect_s.129_461;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: s_49 = signS_64 != 0.0 ? s_75 : s_50;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand signS_64
cpp_routines/kick.cpp:30: note: def_stmt: signS_64 = (const double) _63;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_75
cpp_routines/kick.cpp:30: note: def_stmt: s_75 = -s_50;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_50
cpp_routines/kick.cpp:30: note: def_stmt: s_50 = poly_69 == 0.0 ? s_106 : s_91;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type unsigned long
cpp_routines/kick.cpp:30: note: vectype: vector(2) unsigned long
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: signS_64
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand signS_64
cpp_routines/kick.cpp:30: note: def_stmt: signS_64 = (const double) _63;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  signS_64  def_stmt =  signS_64 = (const double) _63;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand signS_64
cpp_routines/kick.cpp:30: note: def_stmt: signS_64 = (const double) _63;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 0.0
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 0.0
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:30: note: vectype: const vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.133_464 = { 0.0, 0.0 };

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 0.0
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: s_75
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_75
cpp_routines/kick.cpp:30: note: def_stmt: s_75 = -s_50;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  s_75  def_stmt =  s_75 = -s_50;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_75
cpp_routines/kick.cpp:30: note: def_stmt: s_75 = -s_50;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: s_50
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_50
cpp_routines/kick.cpp:30: note: def_stmt: s_50 = poly_69 == 0.0 ? s_106 : s_91;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  s_50  def_stmt =  s_50 = poly_69 == 0.0 ? s_106 : s_91;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_50
cpp_routines/kick.cpp:30: note: def_stmt: s_50 = poly_69 == 0.0 ? s_106 : s_91;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: add new stmt: vect_s.132_465 = VEC_COND_EXPR <vect_signS.80_379 != vect_cst_.133_464, vect_s.131_462, vect_s.129_460>;

cpp_routines/kick.cpp:30: note: add new stmt: vect_s.132_466 = VEC_COND_EXPR <vect_signS.80_380 != vect_cst_.133_464, vect_s.131_463, vect_s.129_461>;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: s_77 = -s_49;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_49
cpp_routines/kick.cpp:30: note: def_stmt: s_49 = signS_64 != 0.0 ? s_75 : s_50;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: s_49
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_49
cpp_routines/kick.cpp:30: note: def_stmt: s_49 = signS_64 != 0.0 ? s_75 : s_50;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  s_49  def_stmt =  s_49 = signS_64 != 0.0 ? s_75 : s_50;

cpp_routines/kick.cpp:30: note: add new stmt: vect_s.134_467 = -vect_s.132_465;

cpp_routines/kick.cpp:30: note: add new stmt: vect_s.134_468 = -vect_s.132_466;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: s_117 = _31 < 0.0 ? s_77 : s_49;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _31
cpp_routines/kick.cpp:30: note: def_stmt: _31 = _27 + pretmp_275;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_77
cpp_routines/kick.cpp:30: note: def_stmt: s_77 = -s_49;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_49
cpp_routines/kick.cpp:30: note: def_stmt: s_49 = signS_64 != 0.0 ? s_75 : s_50;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type unsigned long
cpp_routines/kick.cpp:30: note: vectype: vector(2) unsigned long
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _31
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _31
cpp_routines/kick.cpp:30: note: def_stmt: _31 = _27 + pretmp_275;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _31  def_stmt =  _31 = _27 + pretmp_275;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _31
cpp_routines/kick.cpp:30: note: def_stmt: _31 = _27 + pretmp_275;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: 0.0
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 0.0
cpp_routines/kick.cpp:30: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:30: note: vectype: const vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_cst. nunits = 2
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.136_469 = { 0.0, 0.0 };

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand 0.0
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: s_77
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_77
cpp_routines/kick.cpp:30: note: def_stmt: s_77 = -s_49;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  s_77  def_stmt =  s_77 = -s_49;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_77
cpp_routines/kick.cpp:30: note: def_stmt: s_77 = -s_49;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: s_49
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_49
cpp_routines/kick.cpp:30: note: def_stmt: s_49 = signS_64 != 0.0 ? s_75 : s_50;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  s_49  def_stmt =  s_49 = signS_64 != 0.0 ? s_75 : s_50;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_49
cpp_routines/kick.cpp:30: note: def_stmt: s_49 = signS_64 != 0.0 ? s_75 : s_50;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: add new stmt: vect_s.135_470 = VEC_COND_EXPR <vect_var_.58_348 < vect_cst_.136_469, vect_s.134_467, vect_s.132_465>;

cpp_routines/kick.cpp:30: note: add new stmt: vect_s.135_471 = VEC_COND_EXPR <vect_var_.58_349 < vect_cst_.136_469, vect_s.134_468, vect_s.132_466>;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _33 = s_117 * pretmp_271;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_117
cpp_routines/kick.cpp:30: note: def_stmt: s_117 = _31 < 0.0 ? s_77 : s_49;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand pretmp_271
cpp_routines/kick.cpp:30: note: def_stmt: pretmp_271 = *pretmp_270;

cpp_routines/kick.cpp:30: note: type of def: 2.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: s_117
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand s_117
cpp_routines/kick.cpp:30: note: def_stmt: s_117 = _31 < 0.0 ? s_77 : s_49;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  s_117  def_stmt =  s_117 = _31 < 0.0 ? s_77 : s_49;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: pretmp_271
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand pretmp_271
cpp_routines/kick.cpp:30: note: def_stmt: pretmp_271 = *pretmp_270;

cpp_routines/kick.cpp:30: note: type of def: 2.
cpp_routines/kick.cpp:30: note: def =  pretmp_271  def_stmt =  pretmp_271 = *pretmp_270;

cpp_routines/kick.cpp:30: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:30: note: vectype: const vector(2) double
cpp_routines/kick.cpp:30: note: Create vector_inv.
cpp_routines/kick.cpp:30: note: created new init_stmt: vect_cst_.138_472 = {pretmp_271, pretmp_271};

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.137_473 = vect_s.135_470 * vect_cst_.138_472;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.137_474 = vect_s.135_471 * vect_cst_.138_472;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: _34 = _33 + _14;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _33
cpp_routines/kick.cpp:30: note: def_stmt: _33 = s_117 * pretmp_271;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _14
cpp_routines/kick.cpp:30: note: def_stmt: _14 = *_13;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform binary/unary operation.
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _33
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _33
cpp_routines/kick.cpp:30: note: def_stmt: _33 = s_117 * pretmp_271;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _33  def_stmt =  _33 = s_117 * pretmp_271;

cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _14
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _14
cpp_routines/kick.cpp:30: note: def_stmt: _14 = *_13;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _14  def_stmt =  _14 = *_13;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.139_475 = vect_var_.137_473 + vect_var_.48_334;

cpp_routines/kick.cpp:30: note: add new stmt: vect_var_.139_476 = vect_var_.137_474 + vect_var_.49_336;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: *_13 = _34;

cpp_routines/kick.cpp:30: note: multiple-types.
cpp_routines/kick.cpp:30: note: transform statement.
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _34
cpp_routines/kick.cpp:30: note: def_stmt: _34 = _33 + _14;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: transform store. ncopies = 2
cpp_routines/kick.cpp:30: note: vect_get_vec_def_for_operand: _34
cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand _34
cpp_routines/kick.cpp:30: note: def_stmt: _34 = _33 + _14;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: def =  _34  def_stmt =  _34 = _33 + _14;

cpp_routines/kick.cpp:30: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *beam_dE_10(D)
cpp_routines/kick.cpp:30: note: created vect_pbeam_dE.143_478
cpp_routines/kick.cpp:30: note: add new stmt: MEM[(double *)vect_pbeam_dE.140_479] = vect_var_.139_475;

cpp_routines/kick.cpp:30: note: vect_is_simple_use: operand vect_var_.139_475
cpp_routines/kick.cpp:30: note: def_stmt: vect_var_.139_475 = vect_var_.137_473 + vect_var_.48_334;

cpp_routines/kick.cpp:30: note: type of def: 3.
cpp_routines/kick.cpp:30: note: add new stmt: vect_pbeam_dE.140_482 = vect_pbeam_dE.140_479 + 16;

cpp_routines/kick.cpp:30: note: add new stmt: MEM[(double *)vect_pbeam_dE.140_482] = vect_var_.139_476;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: i_36 = i_112 + 1;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: vect_pbeam_dE.44_333 = vect_pbeam_dE.44_335 + 16;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: vect_pbeam_dt.50_340 = vect_pbeam_dt.50_342 + 16;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: vect_pbeam_dE.140_480 = vect_pbeam_dE.140_482 + 16;

cpp_routines/kick.cpp:30: note: ------>vectorizing statement: if (n_macroparticles_9(D) > i_36)

loop at cpp_routines/kick.cpp:32: if (ivtmp_484 < bnd.41_115)

cpp_routines/kick.cpp:30: note: LOOP VECTORIZED.
cpp_routines/kick.cpp:18: note: vectorized 2 loops in function.

cpp_routines/kick.cpp:29: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:29: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:29: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:32: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:32: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:32: note: not vectorized: no vectype for stmt: vect_var_.48_334 = MEM[(double *)vect_pbeam_dE.44_332];
 scalar_type: vector(2) double
cpp_routines/kick.cpp:32: note: === vect_pattern_recog ===
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_var_.54_341
cpp_routines/kick.cpp:32: note: def_stmt: vect_var_.54_341 = MEM[(const double *)vect_pbeam_dt.50_339];

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_var_.55_343
cpp_routines/kick.cpp:32: note: def_stmt: vect_var_.55_343 = MEM[(const double *)vect_pbeam_dt.50_342];

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_x.60_350
cpp_routines/kick.cpp:32: note: def_stmt: vect_x.60_350 = ABS_EXPR <vect_var_.58_348>;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_x.60_351
cpp_routines/kick.cpp:32: note: def_stmt: vect_x.60_351 = ABS_EXPR <vect_var_.58_349>;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_y.68_360
cpp_routines/kick.cpp:32: note: def_stmt: vect_y.68_360 = [vec_unpack_float_lo_expr] vect_j.66_359;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_y.68_361
cpp_routines/kick.cpp:32: note: def_stmt: vect_y.68_361 = [vec_unpack_float_hi_expr] vect_j.66_359;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_y.68_360
cpp_routines/kick.cpp:32: note: def_stmt: vect_y.68_360 = [vec_unpack_float_lo_expr] vect_j.66_359;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_y.68_361
cpp_routines/kick.cpp:32: note: def_stmt: vect_y.68_361 = [vec_unpack_float_hi_expr] vect_j.66_359;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_y.68_360
cpp_routines/kick.cpp:32: note: def_stmt: vect_y.68_360 = [vec_unpack_float_lo_expr] vect_j.66_359;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_y.68_361
cpp_routines/kick.cpp:32: note: def_stmt: vect_y.68_361 = [vec_unpack_float_hi_expr] vect_j.66_359;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_var_.77_375
cpp_routines/kick.cpp:32: note: def_stmt: vect_var_.77_375 = vect_var_.74_370 - vect_var_.75_373;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_var_.77_376
cpp_routines/kick.cpp:32: note: def_stmt: vect_var_.77_376 = vect_var_.74_371 - vect_var_.75_374;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.86_387
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.86_387 = vect_var_.77_375 * vect_var_.77_375;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.86_388
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.86_388 = vect_var_.77_376 * vect_var_.77_376;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.86_387
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.86_387 = vect_var_.77_375 * vect_var_.77_375;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.86_388
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.86_388 = vect_var_.77_376 * vect_var_.77_376;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.86_387
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.86_387 = vect_var_.77_375 * vect_var_.77_375;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.86_388
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.86_388 = vect_var_.77_376 * vect_var_.77_376;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.86_387
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.86_387 = vect_var_.77_375 * vect_var_.77_375;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.86_388
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.86_388 = vect_var_.77_376 * vect_var_.77_376;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.86_387
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.86_387 = vect_var_.77_375 * vect_var_.77_375;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.86_388
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.86_388 = vect_var_.77_376 * vect_var_.77_376;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.86_387
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.86_387 = vect_var_.77_375 * vect_var_.77_375;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.86_388
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.86_388 = vect_var_.77_376 * vect_var_.77_376;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.86_387
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.86_387 = vect_var_.77_375 * vect_var_.77_375;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.86_388
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.86_388 = vect_var_.77_376 * vect_var_.77_376;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.91_395
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.91_395 = vect_powmult.86_387 * vect_powmult.86_387;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.91_396
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.91_396 = vect_powmult.86_388 * vect_powmult.86_388;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.86_387
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.86_387 = vect_var_.77_375 * vect_var_.77_375;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_powmult.86_388
cpp_routines/kick.cpp:32: note: def_stmt: vect_powmult.86_388 = vect_var_.77_376 * vect_var_.77_376;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_px.112_431
cpp_routines/kick.cpp:32: note: def_stmt: vect_px.112_431 = vect_px.110_428 + vect_cst_.113_430;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_px.112_432
cpp_routines/kick.cpp:32: note: def_stmt: vect_px.112_432 = vect_px.110_429 + vect_cst_.113_430;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_px.115_436
cpp_routines/kick.cpp:32: note: def_stmt: vect_px.115_436 = vect_px.114_433 + vect_cst_.116_435;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_px.115_437
cpp_routines/kick.cpp:32: note: def_stmt: vect_px.115_437 = vect_px.114_434 + vect_cst_.116_435;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_px.118_441
cpp_routines/kick.cpp:32: note: def_stmt: vect_px.118_441 = vect_px.117_438 + vect_cst_.119_440;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_px.118_442
cpp_routines/kick.cpp:32: note: def_stmt: vect_px.118_442 = vect_px.117_439 + vect_cst_.119_440;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_px.121_446
cpp_routines/kick.cpp:32: note: def_stmt: vect_px.121_446 = vect_px.120_443 + vect_cst_.122_445;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_px.121_447
cpp_routines/kick.cpp:32: note: def_stmt: vect_px.121_447 = vect_px.120_444 + vect_cst_.122_445;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_px.124_451
cpp_routines/kick.cpp:32: note: def_stmt: vect_px.124_451 = vect_px.123_448 + vect_cst_.125_450;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_px.124_452
cpp_routines/kick.cpp:32: note: def_stmt: vect_px.124_452 = vect_px.123_449 + vect_cst_.125_450;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_var_.126_453
cpp_routines/kick.cpp:32: note: def_stmt: vect_var_.126_453 = vect_px.124_451 * vect_powmult.86_387;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_var_.126_454
cpp_routines/kick.cpp:32: note: def_stmt: vect_var_.126_454 = vect_px.124_452 * vect_powmult.86_388;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_s.135_470
cpp_routines/kick.cpp:32: note: def_stmt: vect_s.135_470 = VEC_COND_EXPR <vect_var_.58_348 < vect_cst_.136_469, vect_s.134_467, vect_s.132_465>;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand vect_s.135_471
cpp_routines/kick.cpp:32: note: def_stmt: vect_s.135_471 = VEC_COND_EXPR <vect_var_.58_349 < vect_cst_.136_469, vect_s.134_468, vect_s.132_466>;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: === vect_analyze_dependences ===
cpp_routines/kick.cpp:32: note: === vect_analyze_data_refs_alignment ===
cpp_routines/kick.cpp:32: note: === vect_analyze_data_ref_accesses ===
cpp_routines/kick.cpp:32: note: === vect_analyze_slp ===
cpp_routines/kick.cpp:32: note: Failed to SLP the basic block.
cpp_routines/kick.cpp:32: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/kick.cpp:32: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:32: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:32: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:32: note: vectype: vector(2) double
cpp_routines/kick.cpp:32: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:32: note: vectype: const vector(2) double
cpp_routines/kick.cpp:32: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:32: note: vectype: vector(2) double
cpp_routines/kick.cpp:32: note: === vect_pattern_recog ===
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand _76
cpp_routines/kick.cpp:32: note: def_stmt: _76 = (long unsigned int) i_111;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand i_111
cpp_routines/kick.cpp:32: note: def_stmt: i_111 = PHI <i_321(7), i_322(9)>

cpp_routines/kick.cpp:32: note: type of def: 2.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand 8
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand _38
cpp_routines/kick.cpp:32: note: def_stmt: _38 = *_67;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand x_5
cpp_routines/kick.cpp:32: note: def_stmt: x_5 = ABS_EXPR <_6>;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand y_276
cpp_routines/kick.cpp:32: note: def_stmt: y_276 = (const double) j_1;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand y_276
cpp_routines/kick.cpp:32: note: def_stmt: y_276 = (const double) j_1;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand y_276
cpp_routines/kick.cpp:32: note: def_stmt: y_276 = (const double) j_1;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand j_281
cpp_routines/kick.cpp:32: note: def_stmt: j_281 = j_1 + -2;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand _209
cpp_routines/kick.cpp:32: note: def_stmt: _209 = _211 - _210;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_284
cpp_routines/kick.cpp:32: note: def_stmt: powmult_284 = _209 * _209;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_284
cpp_routines/kick.cpp:32: note: def_stmt: powmult_284 = _209 * _209;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_284
cpp_routines/kick.cpp:32: note: def_stmt: powmult_284 = _209 * _209;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_284
cpp_routines/kick.cpp:32: note: def_stmt: powmult_284 = _209 * _209;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_284
cpp_routines/kick.cpp:32: note: def_stmt: powmult_284 = _209 * _209;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_284
cpp_routines/kick.cpp:32: note: def_stmt: powmult_284 = _209 * _209;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_284
cpp_routines/kick.cpp:32: note: def_stmt: powmult_284 = _209 * _209;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_287
cpp_routines/kick.cpp:32: note: def_stmt: powmult_287 = powmult_284 * powmult_284;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_284
cpp_routines/kick.cpp:32: note: def_stmt: powmult_284 = _209 * _209;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand px_301
cpp_routines/kick.cpp:32: note: def_stmt: px_301 = px_300 + -2.50507477628578065605381215057503863086196815856965258718e-8;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand px_303
cpp_routines/kick.cpp:32: note: def_stmt: px_303 = px_302 + 2.75573136213857224533049956882724274009888176806271076202e-6;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand px_305
cpp_routines/kick.cpp:32: note: def_stmt: px_305 = px_304 + -1.98412698295895388025597561032498106214916333556175231934e-4;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand px_307
cpp_routines/kick.cpp:32: note: def_stmt: px_307 = px_306 + 8.3333333333221182304129115436808206140995025634765625e-3;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand px_309
cpp_routines/kick.cpp:32: note: def_stmt: px_309 = px_308 + -1.666666666666662965923251249478198587894439697265625e-1;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand _310
cpp_routines/kick.cpp:32: note: def_stmt: _310 = px_309 * powmult_284;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:32: note: vectype: const vector(2) double
cpp_routines/kick.cpp:32: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:32: note: vectype: const vector(2) double
cpp_routines/kick.cpp:32: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:32: note: vectype: vector(2) double
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand s_317
cpp_routines/kick.cpp:32: note: def_stmt: s_317 = _6 < 0.0 ? s_316 : s_315;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: === vect_analyze_dependences ===
cpp_routines/kick.cpp:32: note: determined dependence between *_72 and *_72
cpp_routines/kick.cpp:32: note: === vect_analyze_data_refs_alignment ===
cpp_routines/kick.cpp:32: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:32: note: SLP: step doesn't divide the vector-size.
cpp_routines/kick.cpp:32: note: Unknown alignment for access: *((double *) beam_dE_10(D) + (sizetype) ((long unsigned int) i_322 * 8))
cpp_routines/kick.cpp:32: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:32: note: SLP: step doesn't divide the vector-size.
cpp_routines/kick.cpp:32: note: Unknown alignment for access: *((const double *) beam_dt_24(D) + (sizetype) ((long unsigned int) i_322 * 8))
cpp_routines/kick.cpp:32: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:32: note: SLP: step doesn't divide the vector-size.
cpp_routines/kick.cpp:32: note: Unknown alignment for access: *((double *) beam_dE_10(D) + (sizetype) ((long unsigned int) i_322 * 8))
cpp_routines/kick.cpp:32: note: === vect_analyze_data_ref_accesses ===
cpp_routines/kick.cpp:32: note: === vect_analyze_slp ===
cpp_routines/kick.cpp:32: note: Failed to SLP the basic block.
cpp_routines/kick.cpp:32: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:29: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:29: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:29: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:30: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:30: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:30: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:18: note: vectype: const vector(2) double
cpp_routines/kick.cpp:18: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:18: note: vectype: const vector(2) double
cpp_routines/kick.cpp:18: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:18: note: vectype: const vector(2) double
cpp_routines/kick.cpp:18: note: === vect_pattern_recog ===
cpp_routines/kick.cpp:18: note: vect_is_simple_use: operand pretmp_268
cpp_routines/kick.cpp:18: note: def_stmt: pretmp_268 = (long unsigned int) j_113;

cpp_routines/kick.cpp:18: note: type of def: 3.
cpp_routines/kick.cpp:18: note: vect_is_simple_use: operand j_113
cpp_routines/kick.cpp:18: note: def_stmt: j_113 = PHI <j_37(13), 0(3)>

cpp_routines/kick.cpp:18: note: type of def: 2.
cpp_routines/kick.cpp:18: note: vect_is_simple_use: operand 8
cpp_routines/kick.cpp:18: note: vect_is_simple_use: operand _203
cpp_routines/kick.cpp:18: note: def_stmt: _203 = (unsigned long) vect_pbeam_dE.36_205;

cpp_routines/kick.cpp:18: note: type of def: 3.
cpp_routines/kick.cpp:18: note: vect_is_simple_use: operand _202
cpp_routines/kick.cpp:18: note: def_stmt: _202 = _203 & 15;

cpp_routines/kick.cpp:18: note: type of def: 3.
cpp_routines/kick.cpp:18: note: vect_is_simple_use: operand _199
cpp_routines/kick.cpp:18: note: def_stmt: _199 = (unsigned int) _200;

cpp_routines/kick.cpp:18: note: type of def: 3.
cpp_routines/kick.cpp:18: note: vect_is_simple_use: operand _200
cpp_routines/kick.cpp:18: note: def_stmt: _200 = -_201;

cpp_routines/kick.cpp:18: note: type of def: 3.
cpp_routines/kick.cpp:18: note: === vect_analyze_dependences ===
cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs_alignment ===
cpp_routines/kick.cpp:18: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:18: note: SLP: step doesn't divide the vector-size.
cpp_routines/kick.cpp:18: note: Unknown alignment for access: *voltage_17(D)
cpp_routines/kick.cpp:18: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:18: note: SLP: step doesn't divide the vector-size.
cpp_routines/kick.cpp:18: note: Unknown alignment for access: *omega_RF_21(D)
cpp_routines/kick.cpp:18: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:18: note: SLP: step doesn't divide the vector-size.
cpp_routines/kick.cpp:18: note: Unknown alignment for access: *phi_RF_28(D)
cpp_routines/kick.cpp:18: note: === vect_analyze_data_ref_accesses ===
cpp_routines/kick.cpp:18: note: === vect_analyze_slp ===
cpp_routines/kick.cpp:18: note: Failed to SLP the basic block.
cpp_routines/kick.cpp:18: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:32: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:32: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:32: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:32: note: vectype: vector(2) double
cpp_routines/kick.cpp:32: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:32: note: vectype: const vector(2) double
cpp_routines/kick.cpp:32: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:32: note: vectype: vector(2) double
cpp_routines/kick.cpp:32: note: === vect_pattern_recog ===
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand _195
cpp_routines/kick.cpp:32: note: def_stmt: _195 = (long unsigned int) i_197;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand i_197
cpp_routines/kick.cpp:32: note: def_stmt: i_197 = PHI <i_15(18), i_133(20)>

cpp_routines/kick.cpp:32: note: type of def: 2.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand 8
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand _190
cpp_routines/kick.cpp:32: note: def_stmt: _190 = *_191;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand x_187
cpp_routines/kick.cpp:32: note: def_stmt: x_187 = ABS_EXPR <_188>;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand y_182
cpp_routines/kick.cpp:32: note: def_stmt: y_182 = (const double) j_183;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand y_182
cpp_routines/kick.cpp:32: note: def_stmt: y_182 = (const double) j_183;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand y_182
cpp_routines/kick.cpp:32: note: def_stmt: y_182 = (const double) j_183;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand j_173
cpp_routines/kick.cpp:32: note: def_stmt: j_173 = j_183 + -2;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand _176
cpp_routines/kick.cpp:32: note: def_stmt: _176 = _178 - _177;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_170
cpp_routines/kick.cpp:32: note: def_stmt: powmult_170 = _176 * _176;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_170
cpp_routines/kick.cpp:32: note: def_stmt: powmult_170 = _176 * _176;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_170
cpp_routines/kick.cpp:32: note: def_stmt: powmult_170 = _176 * _176;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_170
cpp_routines/kick.cpp:32: note: def_stmt: powmult_170 = _176 * _176;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_170
cpp_routines/kick.cpp:32: note: def_stmt: powmult_170 = _176 * _176;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_170
cpp_routines/kick.cpp:32: note: def_stmt: powmult_170 = _176 * _176;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_170
cpp_routines/kick.cpp:32: note: def_stmt: powmult_170 = _176 * _176;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_167
cpp_routines/kick.cpp:32: note: def_stmt: powmult_167 = powmult_170 * powmult_170;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand powmult_170
cpp_routines/kick.cpp:32: note: def_stmt: powmult_170 = _176 * _176;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand px_153
cpp_routines/kick.cpp:32: note: def_stmt: px_153 = px_154 + -2.50507477628578065605381215057503863086196815856965258718e-8;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand px_151
cpp_routines/kick.cpp:32: note: def_stmt: px_151 = px_152 + 2.75573136213857224533049956882724274009888176806271076202e-6;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand px_149
cpp_routines/kick.cpp:32: note: def_stmt: px_149 = px_150 + -1.98412698295895388025597561032498106214916333556175231934e-4;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand px_147
cpp_routines/kick.cpp:32: note: def_stmt: px_147 = px_148 + 8.3333333333221182304129115436808206140995025634765625e-3;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand px_145
cpp_routines/kick.cpp:32: note: def_stmt: px_145 = px_146 + -1.666666666666662965923251249478198587894439697265625e-1;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand _144
cpp_routines/kick.cpp:32: note: def_stmt: _144 = px_145 * powmult_170;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:32: note: vectype: const vector(2) double
cpp_routines/kick.cpp:32: note: get vectype with 2 units of type const double
cpp_routines/kick.cpp:32: note: vectype: const vector(2) double
cpp_routines/kick.cpp:32: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:32: note: vectype: vector(2) double
cpp_routines/kick.cpp:32: note: vect_is_simple_use: operand s_137
cpp_routines/kick.cpp:32: note: def_stmt: s_137 = _188 < 0.0 ? s_138 : s_139;

cpp_routines/kick.cpp:32: note: type of def: 3.
cpp_routines/kick.cpp:32: note: === vect_analyze_dependences ===
cpp_routines/kick.cpp:32: note: determined dependence between *_193 and *_193
cpp_routines/kick.cpp:32: note: === vect_analyze_data_refs_alignment ===
cpp_routines/kick.cpp:32: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:32: note: SLP: step doesn't divide the vector-size.
cpp_routines/kick.cpp:32: note: Unknown alignment for access: *beam_dE_10(D)
cpp_routines/kick.cpp:32: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:32: note: SLP: step doesn't divide the vector-size.
cpp_routines/kick.cpp:32: note: Unknown alignment for access: *beam_dt_24(D)
cpp_routines/kick.cpp:32: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:32: note: SLP: step doesn't divide the vector-size.
cpp_routines/kick.cpp:32: note: Unknown alignment for access: *beam_dE_10(D)
cpp_routines/kick.cpp:32: note: === vect_analyze_data_ref_accesses ===
cpp_routines/kick.cpp:32: note: === vect_analyze_slp ===
cpp_routines/kick.cpp:32: note: Failed to SLP the basic block.
cpp_routines/kick.cpp:32: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:36: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:36: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:36: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:39: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:39: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:39: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:37: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:37: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:37: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:37: note: vectype: vector(2) double
cpp_routines/kick.cpp:37: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:37: note: vectype: vector(2) double
cpp_routines/kick.cpp:37: note: === vect_pattern_recog ===
cpp_routines/kick.cpp:37: note: vect_is_simple_use: operand _118
cpp_routines/kick.cpp:37: note: def_stmt: _118 = (long unsigned int) i_125;

cpp_routines/kick.cpp:37: note: type of def: 3.
cpp_routines/kick.cpp:37: note: vect_is_simple_use: operand i_125
cpp_routines/kick.cpp:37: note: def_stmt: i_125 = PHI <0(28)>

cpp_routines/kick.cpp:37: note: type of def: 2.
cpp_routines/kick.cpp:37: note: vect_is_simple_use: operand 8
cpp_routines/kick.cpp:37: note: === vect_analyze_dependences ===
cpp_routines/kick.cpp:37: note: determined dependence between *_16 and *_16
cpp_routines/kick.cpp:37: note: === vect_analyze_data_refs_alignment ===
cpp_routines/kick.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:37: note: can't force alignment of ref: *_16
cpp_routines/kick.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:37: note: can't force alignment of ref: *_16
cpp_routines/kick.cpp:37: note: === vect_analyze_data_ref_accesses ===
cpp_routines/kick.cpp:37: note: not consecutive access _18 = *_16;

cpp_routines/kick.cpp:37: note: not consecutive access *_16 = _124;

cpp_routines/kick.cpp:37: note: === vect_analyze_slp ===
cpp_routines/kick.cpp:37: note: Failed to SLP the basic block.
cpp_routines/kick.cpp:37: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/kick.cpp:37: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:37: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:37: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:37: note: vectype: vector(2) double
cpp_routines/kick.cpp:37: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:37: note: vectype: vector(2) double
cpp_routines/kick.cpp:37: note: === vect_pattern_recog ===
cpp_routines/kick.cpp:37: note: vect_is_simple_use: operand _40
cpp_routines/kick.cpp:37: note: def_stmt: _40 = (long unsigned int) i_323;

cpp_routines/kick.cpp:37: note: type of def: 3.
cpp_routines/kick.cpp:37: note: vect_is_simple_use: operand i_323
cpp_routines/kick.cpp:37: note: def_stmt: i_323 = PHI <i_326(29)>

cpp_routines/kick.cpp:37: note: type of def: 2.
cpp_routines/kick.cpp:37: note: vect_is_simple_use: operand 8
cpp_routines/kick.cpp:37: note: === vect_analyze_dependences ===
cpp_routines/kick.cpp:37: note: determined dependence between *_42 and *_42
cpp_routines/kick.cpp:37: note: === vect_analyze_data_refs_alignment ===
cpp_routines/kick.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:37: note: can't force alignment of ref: *_42
cpp_routines/kick.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:37: note: can't force alignment of ref: *_42
cpp_routines/kick.cpp:37: note: === vect_analyze_data_ref_accesses ===
cpp_routines/kick.cpp:37: note: not consecutive access _44 = *_42;

cpp_routines/kick.cpp:37: note: not consecutive access *_42 = _46;

cpp_routines/kick.cpp:37: note: === vect_analyze_slp ===
cpp_routines/kick.cpp:37: note: Failed to SLP the basic block.
cpp_routines/kick.cpp:37: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/kick.cpp:37: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:37: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:37: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:37: note: vectype: vector(2) double
cpp_routines/kick.cpp:37: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:37: note: vectype: vector(2) double
cpp_routines/kick.cpp:37: note: === vect_pattern_recog ===
cpp_routines/kick.cpp:37: note: vect_is_simple_use: operand _263
cpp_routines/kick.cpp:37: note: def_stmt: _263 = (long unsigned int) i_74;

cpp_routines/kick.cpp:37: note: type of def: 3.
cpp_routines/kick.cpp:37: note: vect_is_simple_use: operand i_74
cpp_routines/kick.cpp:37: note: def_stmt: i_74 = PHI <i_12(30)>

cpp_routines/kick.cpp:37: note: type of def: 2.
cpp_routines/kick.cpp:37: note: vect_is_simple_use: operand 8
cpp_routines/kick.cpp:37: note: === vect_analyze_dependences ===
cpp_routines/kick.cpp:37: note: determined dependence between *_261 and *_261
cpp_routines/kick.cpp:37: note: === vect_analyze_data_refs_alignment ===
cpp_routines/kick.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:37: note: can't force alignment of ref: *_261
cpp_routines/kick.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:37: note: can't force alignment of ref: *_261
cpp_routines/kick.cpp:37: note: === vect_analyze_data_ref_accesses ===
cpp_routines/kick.cpp:37: note: not consecutive access _260 = *_261;

cpp_routines/kick.cpp:37: note: not consecutive access *_261 = _259;

cpp_routines/kick.cpp:37: note: === vect_analyze_slp ===
cpp_routines/kick.cpp:37: note: Failed to SLP the basic block.
cpp_routines/kick.cpp:37: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:37: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:37: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:37: note: not vectorized: no vectype for stmt: vect_var_.26_219 = MEM[(double *)vect_pbeam_dE.22_221];
 scalar_type: vector(2) double
cpp_routines/kick.cpp:37: note: === vect_pattern_recog ===
cpp_routines/kick.cpp:37: note: === vect_analyze_dependences ===
cpp_routines/kick.cpp:37: note: === vect_analyze_data_refs_alignment ===
cpp_routines/kick.cpp:37: note: === vect_analyze_data_ref_accesses ===
cpp_routines/kick.cpp:37: note: === vect_analyze_slp ===
cpp_routines/kick.cpp:37: note: Failed to SLP the basic block.
cpp_routines/kick.cpp:37: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:37: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:37: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:37: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:37: note: vectype: vector(2) double
cpp_routines/kick.cpp:37: note: get vectype with 2 units of type double
cpp_routines/kick.cpp:37: note: vectype: vector(2) double
cpp_routines/kick.cpp:37: note: === vect_pattern_recog ===
cpp_routines/kick.cpp:37: note: vect_is_simple_use: operand _238
cpp_routines/kick.cpp:37: note: def_stmt: _238 = (long unsigned int) i_231;

cpp_routines/kick.cpp:37: note: type of def: 3.
cpp_routines/kick.cpp:37: note: vect_is_simple_use: operand i_231
cpp_routines/kick.cpp:37: note: def_stmt: i_231 = PHI <tmp.21_225(36), i_253(33)>

cpp_routines/kick.cpp:37: note: type of def: 2.
cpp_routines/kick.cpp:37: note: vect_is_simple_use: operand 8
cpp_routines/kick.cpp:37: note: === vect_analyze_dependences ===
cpp_routines/kick.cpp:37: note: determined dependence between *_236 and *_236
cpp_routines/kick.cpp:37: note: === vect_analyze_data_refs_alignment ===
cpp_routines/kick.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:37: note: can't force alignment of ref: *_236
cpp_routines/kick.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/kick.cpp:37: note: can't force alignment of ref: *_236
cpp_routines/kick.cpp:37: note: === vect_analyze_data_ref_accesses ===
cpp_routines/kick.cpp:37: note: not consecutive access _235 = *_236;

cpp_routines/kick.cpp:37: note: not consecutive access *_236 = _234;

cpp_routines/kick.cpp:37: note: === vect_analyze_slp ===
cpp_routines/kick.cpp:37: note: Failed to SLP the basic block.
cpp_routines/kick.cpp:37: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

cpp_routines/kick.cpp:18: note: ===vect_slp_analyze_bb===

cpp_routines/kick.cpp:18: note: === vect_analyze_data_refs ===

cpp_routines/kick.cpp:18: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at cpp_routines/drift.cpp:36

cpp_routines/drift.cpp:36: note: ===== analyze_loop_nest =====
cpp_routines/drift.cpp:36: note: === vect_analyze_loop_form ===
cpp_routines/drift.cpp:36: note: === get_loop_niters ===
cpp_routines/drift.cpp:36: note: ==> get_loop_niters:(unsigned int) n_macroparticles_22(D)
cpp_routines/drift.cpp:36: note: Symbolic number of iterations is (unsigned int) n_macroparticles_22(D)
cpp_routines/drift.cpp:36: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:36: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:36: note: vectype: vector(2) double
cpp_routines/drift.cpp:36: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:36: note: vectype: const vector(2) double
cpp_routines/drift.cpp:36: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:36: note: vectype: vector(2) double
cpp_routines/drift.cpp:36: note: === vect_analyze_scalar_cycles ===
cpp_routines/drift.cpp:36: note: Analyze phi: i_116 = PHI <i_35(8), 0(5)>

cpp_routines/drift.cpp:36: note: Access function of PHI: {0, +, 1}_4
cpp_routines/drift.cpp:36: note: step: 1,  init: 0
cpp_routines/drift.cpp:36: note: Detected induction.
cpp_routines/drift.cpp:36: note: Analyze phi: .MEM_120 = PHI <.MEM_34(8), .MEM_13(D)(5)>

cpp_routines/drift.cpp:36: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _24
cpp_routines/drift.cpp:36: note: def_stmt: _24 = (long unsigned int) i_116;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand i_116
cpp_routines/drift.cpp:36: note: def_stmt: i_116 = PHI <i_35(8), 0(5)>

cpp_routines/drift.cpp:36: note: type of def: 4.
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _31
cpp_routines/drift.cpp:36: note: def_stmt: _31 = *_30;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: === vect_mark_stmts_to_be_vectorized ===
cpp_routines/drift.cpp:36: note: init: phi relevant? i_116 = PHI <i_35(8), 0(5)>

cpp_routines/drift.cpp:36: note: init: phi relevant? .MEM_120 = PHI <.MEM_34(8), .MEM_13(D)(5)>

cpp_routines/drift.cpp:36: note: init: stmt relevant? _24 = (long unsigned int) i_116;

cpp_routines/drift.cpp:36: note: init: stmt relevant? _25 = _24 * 8;

cpp_routines/drift.cpp:36: note: init: stmt relevant? _26 = beam_dt_23(D) + _25;

cpp_routines/drift.cpp:36: note: init: stmt relevant? _27 = *_26;

cpp_routines/drift.cpp:36: note: init: stmt relevant? _30 = beam_dE_29(D) + _25;

cpp_routines/drift.cpp:36: note: init: stmt relevant? _31 = *_30;

cpp_routines/drift.cpp:36: note: init: stmt relevant? _32 = _31 * pretmp_224;

cpp_routines/drift.cpp:36: note: init: stmt relevant? _33 = _32 + _27;

cpp_routines/drift.cpp:36: note: init: stmt relevant? *_26 = _33;

cpp_routines/drift.cpp:36: note: vec_stmt_relevant_p: stmt has vdefs.
cpp_routines/drift.cpp:36: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:36: note: init: stmt relevant? i_35 = i_116 + 1;

cpp_routines/drift.cpp:36: note: init: stmt relevant? if (n_macroparticles_22(D) > i_35)

cpp_routines/drift.cpp:36: note: worklist: examine stmt: *_26 = _33;

cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _33
cpp_routines/drift.cpp:36: note: def_stmt: _33 = _32 + _27;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:36: note: worklist: examine stmt: _33 = _32 + _27;

cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _32
cpp_routines/drift.cpp:36: note: def_stmt: _32 = _31 * pretmp_224;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _27
cpp_routines/drift.cpp:36: note: def_stmt: _27 = *_26;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:36: note: worklist: examine stmt: _27 = *_26;

cpp_routines/drift.cpp:36: note: worklist: examine stmt: _32 = _31 * pretmp_224;

cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _31
cpp_routines/drift.cpp:36: note: def_stmt: _31 = *_30;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand pretmp_224
cpp_routines/drift.cpp:36: note: def_stmt: pretmp_224 = T_12 * coeff_21;

cpp_routines/drift.cpp:36: note: type of def: 2.
cpp_routines/drift.cpp:36: note: def_stmt is out of loop.
cpp_routines/drift.cpp:36: note: worklist: examine stmt: _31 = *_30;

cpp_routines/drift.cpp:36: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:36: note: dependence distance  = 0.
cpp_routines/drift.cpp:36: note: dependence distance == 0 between *_26 and *_26
cpp_routines/drift.cpp:36: note: === vect_determine_vectorization_factor ===
cpp_routines/drift.cpp:36: note: ==> examining phi: i_116 = PHI <i_35(8), 0(5)>

cpp_routines/drift.cpp:36: note: ==> examining phi: .MEM_120 = PHI <.MEM_34(8), .MEM_13(D)(5)>

cpp_routines/drift.cpp:36: note: ==> examining statement: _24 = (long unsigned int) i_116;

cpp_routines/drift.cpp:36: note: skip.
cpp_routines/drift.cpp:36: note: ==> examining statement: _25 = _24 * 8;

cpp_routines/drift.cpp:36: note: skip.
cpp_routines/drift.cpp:36: note: ==> examining statement: _26 = beam_dt_23(D) + _25;

cpp_routines/drift.cpp:36: note: skip.
cpp_routines/drift.cpp:36: note: ==> examining statement: _27 = *_26;

cpp_routines/drift.cpp:36: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:36: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:36: note: vectype: vector(2) double
cpp_routines/drift.cpp:36: note: vectype: vector(2) double
cpp_routines/drift.cpp:36: note: nunits = 2
cpp_routines/drift.cpp:36: note: ==> examining statement: _30 = beam_dE_29(D) + _25;

cpp_routines/drift.cpp:36: note: skip.
cpp_routines/drift.cpp:36: note: ==> examining statement: _31 = *_30;

cpp_routines/drift.cpp:36: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:36: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:36: note: vectype: vector(2) double
cpp_routines/drift.cpp:36: note: vectype: vector(2) double
cpp_routines/drift.cpp:36: note: nunits = 2
cpp_routines/drift.cpp:36: note: ==> examining statement: _32 = _31 * pretmp_224;

cpp_routines/drift.cpp:36: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:36: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:36: note: vectype: vector(2) double
cpp_routines/drift.cpp:36: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:36: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:36: note: vectype: vector(2) double
cpp_routines/drift.cpp:36: note: vectype: vector(2) double
cpp_routines/drift.cpp:36: note: nunits = 2
cpp_routines/drift.cpp:36: note: ==> examining statement: _33 = _32 + _27;

cpp_routines/drift.cpp:36: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:36: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:36: note: vectype: vector(2) double
cpp_routines/drift.cpp:36: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:36: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:36: note: vectype: vector(2) double
cpp_routines/drift.cpp:36: note: vectype: vector(2) double
cpp_routines/drift.cpp:36: note: nunits = 2
cpp_routines/drift.cpp:36: note: ==> examining statement: *_26 = _33;

cpp_routines/drift.cpp:36: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:36: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:36: note: vectype: vector(2) double
cpp_routines/drift.cpp:36: note: vectype: vector(2) double
cpp_routines/drift.cpp:36: note: nunits = 2
cpp_routines/drift.cpp:36: note: ==> examining statement: i_35 = i_116 + 1;

cpp_routines/drift.cpp:36: note: skip.
cpp_routines/drift.cpp:36: note: ==> examining statement: if (n_macroparticles_22(D) > i_35)

cpp_routines/drift.cpp:36: note: skip.
cpp_routines/drift.cpp:36: note: vectorization factor = 2
cpp_routines/drift.cpp:36: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:36: note: dependence distance  = 0.
cpp_routines/drift.cpp:36: note: accesses have the same alignment.dependence distance modulo vf == 0 between *_26 and *_26
cpp_routines/drift.cpp:36: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:36: note: can't force alignment of ref: *_26
cpp_routines/drift.cpp:36: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:36: note: can't force alignment of ref: *_30
cpp_routines/drift.cpp:36: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:36: note: can't force alignment of ref: *_26
cpp_routines/drift.cpp:36: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:36: note: === vect_prune_runtime_alias_test_list ===
cpp_routines/drift.cpp:36: note: === vect_enhance_data_refs_alignment ===
cpp_routines/drift.cpp:36: note: Unknown misalignment, is_packed = 0
cpp_routines/drift.cpp:36: note: Unknown misalignment, is_packed = 0
cpp_routines/drift.cpp:36: note: Unknown misalignment, is_packed = 0
cpp_routines/drift.cpp:36: note: vect_can_advance_ivs_p:
cpp_routines/drift.cpp:36: note: Analyze phi: i_116 = PHI <i_35(8), 0(5)>

cpp_routines/drift.cpp:36: note: Access function of PHI: {0, +, 1}_4
cpp_routines/drift.cpp:36: note: Analyze phi: .MEM_120 = PHI <.MEM_34(8), .MEM_13(D)(5)>

cpp_routines/drift.cpp:36: note: virtual phi. skip.
cpp_routines/drift.cpp:36: note: vect_model_load_cost: unaligned supported by hardware.
cpp_routines/drift.cpp:36: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
cpp_routines/drift.cpp:36: note: vect_model_store_cost: unaligned supported by hardware.
cpp_routines/drift.cpp:36: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
cpp_routines/drift.cpp:36: note: Setting misalignment to -1.
cpp_routines/drift.cpp:36: note: Setting misalignment to -1.
cpp_routines/drift.cpp:36: note: Alignment of access forced using peeling.
cpp_routines/drift.cpp:36: note: Peeling for alignment will be applied.
cpp_routines/drift.cpp:36: note: Vectorizing an unaligned access.
cpp_routines/drift.cpp:36: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:36: note: === vect_make_slp_decision ===
cpp_routines/drift.cpp:36: note: === vect_detect_hybrid_slp ===
cpp_routines/drift.cpp:36: note: === vect_analyze_loop_operations ===
cpp_routines/drift.cpp:36: note: examining phi: i_116 = PHI <i_35(8), 0(5)>

cpp_routines/drift.cpp:36: note: examining phi: .MEM_120 = PHI <.MEM_34(8), .MEM_13(D)(5)>

cpp_routines/drift.cpp:36: note: ==> examining statement: _24 = (long unsigned int) i_116;

cpp_routines/drift.cpp:36: note: irrelevant.
cpp_routines/drift.cpp:36: note: ==> examining statement: _25 = _24 * 8;

cpp_routines/drift.cpp:36: note: irrelevant.
cpp_routines/drift.cpp:36: note: ==> examining statement: _26 = beam_dt_23(D) + _25;

cpp_routines/drift.cpp:36: note: irrelevant.
cpp_routines/drift.cpp:36: note: ==> examining statement: _27 = *_26;

cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand *_26
cpp_routines/drift.cpp:36: note: not ssa-name.
cpp_routines/drift.cpp:36: note: use not simple.
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand *_26
cpp_routines/drift.cpp:36: note: not ssa-name.
cpp_routines/drift.cpp:36: note: use not simple.
cpp_routines/drift.cpp:36: note: vect_model_load_cost: aligned.
cpp_routines/drift.cpp:36: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:36: note: ==> examining statement: _30 = beam_dE_29(D) + _25;

cpp_routines/drift.cpp:36: note: irrelevant.
cpp_routines/drift.cpp:36: note: ==> examining statement: _31 = *_30;

cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand *_30
cpp_routines/drift.cpp:36: note: not ssa-name.
cpp_routines/drift.cpp:36: note: use not simple.
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand *_30
cpp_routines/drift.cpp:36: note: not ssa-name.
cpp_routines/drift.cpp:36: note: use not simple.
cpp_routines/drift.cpp:36: note: vect_model_load_cost: unaligned supported by hardware.
cpp_routines/drift.cpp:36: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/drift.cpp:36: note: ==> examining statement: _32 = _31 * pretmp_224;

cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _31
cpp_routines/drift.cpp:36: note: def_stmt: _31 = *_30;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand pretmp_224
cpp_routines/drift.cpp:36: note: def_stmt: pretmp_224 = T_12 * coeff_21;

cpp_routines/drift.cpp:36: note: type of def: 2.
cpp_routines/drift.cpp:36: note: === vectorizable_operation ===
cpp_routines/drift.cpp:36: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:36: note: ==> examining statement: _33 = _32 + _27;

cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _32
cpp_routines/drift.cpp:36: note: def_stmt: _32 = _31 * pretmp_224;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _27
cpp_routines/drift.cpp:36: note: def_stmt: _27 = *_26;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: === vectorizable_operation ===
cpp_routines/drift.cpp:36: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:36: note: ==> examining statement: *_26 = _33;

cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _33
cpp_routines/drift.cpp:36: note: def_stmt: _33 = _32 + _27;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: vect_model_store_cost: aligned.
cpp_routines/drift.cpp:36: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:36: note: ==> examining statement: i_35 = i_116 + 1;

cpp_routines/drift.cpp:36: note: irrelevant.
cpp_routines/drift.cpp:36: note: ==> examining statement: if (n_macroparticles_22(D) > i_35)

cpp_routines/drift.cpp:36: note: irrelevant.
cpp_routines/drift.cpp:36: note: === vect_update_slp_costs_according_to_vf ===cost model: prologue peel iters set to vf/2.cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
cpp_routines/drift.cpp:36: note: Cost model analysis: 
  Vector inside of loop cost: 6
  Vector prologue cost: 14
  Vector epilogue cost: 5
  Scalar iteration cost: 5
  Scalar outside cost: 7
  Vector outside cost: 19
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 4

cpp_routines/drift.cpp:36: note:   Runtime profitability threshold = 3

cpp_routines/drift.cpp:36: note:   Static estimate profitability threshold = 3

cpp_routines/drift.cpp:36: note: epilog loop required.
cpp_routines/drift.cpp:36: note: vect_can_advance_ivs_p:
cpp_routines/drift.cpp:36: note: Analyze phi: i_116 = PHI <i_35(8), 0(5)>

cpp_routines/drift.cpp:36: note: Access function of PHI: {0, +, 1}_4
cpp_routines/drift.cpp:36: note: Analyze phi: .MEM_120 = PHI <.MEM_34(8), .MEM_13(D)(5)>

cpp_routines/drift.cpp:36: note: virtual phi. skip.

Vectorizing loop at cpp_routines/drift.cpp:36

cpp_routines/drift.cpp:36: note: === vec_transform_loop ===
cpp_routines/drift.cpp:36: note: Profitability threshold is 3 loop iterations.
cpp_routines/drift.cpp:36: note: === vect_do_peeling_for_alignment ===
cpp_routines/drift.cpp:36: note: created vect_pbeam_dt.6_70
cpp_routines/drift.cpp:36: note: niters for prolog loop: MIN_EXPR <(unsigned int) -(((unsigned long) vect_pbeam_dt.6_70 & 15) >> 3) & 1, niters.3_69>
loop at cpp_routines/drift.cpp:37: if (ivtmp_197 < prologue_after_cost_adjust.8_205)
Setting upper bound of nb iterations for prologue loop to 2

cpp_routines/drift.cpp:36: note: === vect_update_inits_of_dr ===
cpp_routines/drift.cpp:36: note: === vect_do_peeling_for_loop_bound ===
cpp_routines/drift.cpp:36: note: vect_update_ivs_after_vectorizer: phi: i_116 = PHI <i_35(8), i_204(40)>

cpp_routines/drift.cpp:36: note: vect_update_ivs_after_vectorizer: phi: .MEM_120 = PHI <.MEM_34(8), .MEM_202(40)>

cpp_routines/drift.cpp:36: note: virtual phi. skip.Setting upper bound of nb iterations for epilogue loop to 0

cpp_routines/drift.cpp:36: note: ------>vectorizing phi: i_116 = PHI <i_35(8), i_204(44)>

cpp_routines/drift.cpp:36: note: ------>vectorizing phi: .MEM_120 = PHI <.MEM_34(8), .MEM_202(44)>

cpp_routines/drift.cpp:36: note: ------>vectorizing statement: _24 = (long unsigned int) i_116;

cpp_routines/drift.cpp:36: note: ------>vectorizing statement: _25 = _24 * 8;

cpp_routines/drift.cpp:36: note: ------>vectorizing statement: _26 = beam_dt_23(D) + _25;

cpp_routines/drift.cpp:36: note: ------>vectorizing statement: _27 = *_26;

cpp_routines/drift.cpp:36: note: transform statement.
cpp_routines/drift.cpp:36: note: transform load. ncopies = 1
cpp_routines/drift.cpp:36: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *beam_dt_23(D)
cpp_routines/drift.cpp:36: note: created vect_pbeam_dt.17_164
cpp_routines/drift.cpp:36: note: add new stmt: vect_var_.18_161 = MEM[(double *)vect_pbeam_dt.14_163];

cpp_routines/drift.cpp:36: note: ------>vectorizing statement: _30 = beam_dE_29(D) + _25;

cpp_routines/drift.cpp:36: note: ------>vectorizing statement: _31 = *_30;

cpp_routines/drift.cpp:36: note: transform statement.
cpp_routines/drift.cpp:36: note: transform load. ncopies = 1
cpp_routines/drift.cpp:36: note: create vector_type-pointer variable to type: const vector(2) double  vectorizing a pointer ref: *beam_dE_29(D)
cpp_routines/drift.cpp:36: note: created vect_pbeam_dE.22_159
cpp_routines/drift.cpp:36: note: add new stmt: vect_var_.23_156 = MEM[(const double *)vect_pbeam_dE.19_158];

cpp_routines/drift.cpp:36: note: ------>vectorizing statement: _32 = _31 * pretmp_224;

cpp_routines/drift.cpp:36: note: transform statement.
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _31
cpp_routines/drift.cpp:36: note: def_stmt: _31 = *_30;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand pretmp_224
cpp_routines/drift.cpp:36: note: def_stmt: pretmp_224 = T_12 * coeff_21;

cpp_routines/drift.cpp:36: note: type of def: 2.
cpp_routines/drift.cpp:36: note: transform binary/unary operation.
cpp_routines/drift.cpp:36: note: vect_get_vec_def_for_operand: _31
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _31
cpp_routines/drift.cpp:36: note: def_stmt: _31 = *_30;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: def =  _31  def_stmt =  _31 = *_30;

cpp_routines/drift.cpp:36: note: vect_get_vec_def_for_operand: pretmp_224
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand pretmp_224
cpp_routines/drift.cpp:36: note: def_stmt: pretmp_224 = T_12 * coeff_21;

cpp_routines/drift.cpp:36: note: type of def: 2.
cpp_routines/drift.cpp:36: note: def =  pretmp_224  def_stmt =  pretmp_224 = T_12 * coeff_21;

cpp_routines/drift.cpp:36: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:36: note: vectype: vector(2) double
cpp_routines/drift.cpp:36: note: Create vector_inv.
cpp_routines/drift.cpp:36: note: created new init_stmt: vect_cst_.25_155 = {pretmp_224, pretmp_224};

cpp_routines/drift.cpp:36: note: add new stmt: vect_var_.24_154 = vect_var_.23_156 * vect_cst_.25_155;

cpp_routines/drift.cpp:36: note: ------>vectorizing statement: _33 = _32 + _27;

cpp_routines/drift.cpp:36: note: transform statement.
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _32
cpp_routines/drift.cpp:36: note: def_stmt: _32 = _31 * pretmp_224;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _27
cpp_routines/drift.cpp:36: note: def_stmt: _27 = *_26;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: transform binary/unary operation.
cpp_routines/drift.cpp:36: note: vect_get_vec_def_for_operand: _32
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _32
cpp_routines/drift.cpp:36: note: def_stmt: _32 = _31 * pretmp_224;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: def =  _32  def_stmt =  _32 = _31 * pretmp_224;

cpp_routines/drift.cpp:36: note: vect_get_vec_def_for_operand: _27
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _27
cpp_routines/drift.cpp:36: note: def_stmt: _27 = *_26;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: def =  _27  def_stmt =  _27 = *_26;

cpp_routines/drift.cpp:36: note: add new stmt: vect_var_.26_153 = vect_var_.24_154 + vect_var_.18_161;

cpp_routines/drift.cpp:36: note: ------>vectorizing statement: *_26 = _33;

cpp_routines/drift.cpp:36: note: transform statement.
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _33
cpp_routines/drift.cpp:36: note: def_stmt: _33 = _32 + _27;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: transform store. ncopies = 1
cpp_routines/drift.cpp:36: note: vect_get_vec_def_for_operand: _33
cpp_routines/drift.cpp:36: note: vect_is_simple_use: operand _33
cpp_routines/drift.cpp:36: note: def_stmt: _33 = _32 + _27;

cpp_routines/drift.cpp:36: note: type of def: 3.
cpp_routines/drift.cpp:36: note: def =  _33  def_stmt =  _33 = _32 + _27;

cpp_routines/drift.cpp:36: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *beam_dt_23(D)
cpp_routines/drift.cpp:36: note: created vect_pbeam_dt.30_151
cpp_routines/drift.cpp:36: note: add new stmt: MEM[(double *)vect_pbeam_dt.27_150] = vect_var_.26_153;

cpp_routines/drift.cpp:36: note: ------>vectorizing statement: i_35 = i_116 + 1;

cpp_routines/drift.cpp:36: note: ------>vectorizing statement: vect_pbeam_dt.14_162 = vect_pbeam_dt.14_163 + 16;

cpp_routines/drift.cpp:36: note: ------>vectorizing statement: vect_pbeam_dE.19_157 = vect_pbeam_dE.19_158 + 16;

cpp_routines/drift.cpp:36: note: ------>vectorizing statement: vect_pbeam_dt.27_149 = vect_pbeam_dt.27_150 + 16;

cpp_routines/drift.cpp:36: note: ------>vectorizing statement: if (n_macroparticles_22(D) > i_35)

loop at cpp_routines/drift.cpp:37: if (ivtmp_147 < bnd.11_190)

cpp_routines/drift.cpp:36: note: LOOP VECTORIZED.
Analyzing loop at cpp_routines/drift.cpp:48

cpp_routines/drift.cpp:48: note: ===== analyze_loop_nest =====
cpp_routines/drift.cpp:48: note: === vect_analyze_loop_form ===
cpp_routines/drift.cpp:48: note: === get_loop_niters ===
cpp_routines/drift.cpp:48: note: ==> get_loop_niters:(unsigned int) n_macroparticles_22(D)
cpp_routines/drift.cpp:48: note: Symbolic number of iterations is (unsigned int) n_macroparticles_22(D)
cpp_routines/drift.cpp:48: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:48: note: vectype: const vector(2) double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: === vect_analyze_scalar_cycles ===
cpp_routines/drift.cpp:48: note: Analyze phi: i_117 = PHI <i_61(14), 0(11)>

cpp_routines/drift.cpp:48: note: Access function of PHI: {0, +, 1}_3
cpp_routines/drift.cpp:48: note: step: 1,  init: 0
cpp_routines/drift.cpp:48: note: Detected induction.
cpp_routines/drift.cpp:48: note: Analyze phi: .MEM_121 = PHI <.MEM_60(14), .MEM_13(D)(11)>

cpp_routines/drift.cpp:48: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _48
cpp_routines/drift.cpp:48: note: def_stmt: _48 = (long unsigned int) i_117;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand i_117
cpp_routines/drift.cpp:48: note: def_stmt: i_117 = PHI <i_61(14), 0(11)>

cpp_routines/drift.cpp:48: note: type of def: 4.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _53
cpp_routines/drift.cpp:48: note: def_stmt: _53 = *_52;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _57
cpp_routines/drift.cpp:48: note: def_stmt: _57 = _56 + -1.0e+0;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: === vect_mark_stmts_to_be_vectorized ===
cpp_routines/drift.cpp:48: note: init: phi relevant? i_117 = PHI <i_61(14), 0(11)>

cpp_routines/drift.cpp:48: note: init: phi relevant? .MEM_121 = PHI <.MEM_60(14), .MEM_13(D)(11)>

cpp_routines/drift.cpp:48: note: init: stmt relevant? _48 = (long unsigned int) i_117;

cpp_routines/drift.cpp:48: note: init: stmt relevant? _49 = _48 * 8;

cpp_routines/drift.cpp:48: note: init: stmt relevant? _50 = beam_dt_23(D) + _49;

cpp_routines/drift.cpp:48: note: init: stmt relevant? _51 = *_50;

cpp_routines/drift.cpp:48: note: init: stmt relevant? _52 = beam_dE_29(D) + _49;

cpp_routines/drift.cpp:48: note: init: stmt relevant? _53 = *_52;

cpp_routines/drift.cpp:48: note: init: stmt relevant? _54 = _53 * eta0_39;

cpp_routines/drift.cpp:48: note: init: stmt relevant? _55 = 1.0e+0 - _54;

cpp_routines/drift.cpp:48: note: init: stmt relevant? _56 = 1.0e+0 / _55;

cpp_routines/drift.cpp:48: note: init: stmt relevant? _57 = _56 + -1.0e+0;

cpp_routines/drift.cpp:48: note: init: stmt relevant? _58 = _57 * T_12;

cpp_routines/drift.cpp:48: note: init: stmt relevant? _59 = _58 + _51;

cpp_routines/drift.cpp:48: note: init: stmt relevant? *_50 = _59;

cpp_routines/drift.cpp:48: note: vec_stmt_relevant_p: stmt has vdefs.
cpp_routines/drift.cpp:48: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:48: note: init: stmt relevant? i_61 = i_117 + 1;

cpp_routines/drift.cpp:48: note: init: stmt relevant? if (n_macroparticles_22(D) > i_61)

cpp_routines/drift.cpp:48: note: worklist: examine stmt: *_50 = _59;

cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _59
cpp_routines/drift.cpp:48: note: def_stmt: _59 = _58 + _51;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:48: note: worklist: examine stmt: _59 = _58 + _51;

cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _58
cpp_routines/drift.cpp:48: note: def_stmt: _58 = _57 * T_12;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _51
cpp_routines/drift.cpp:48: note: def_stmt: _51 = *_50;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:48: note: worklist: examine stmt: _51 = *_50;

cpp_routines/drift.cpp:48: note: worklist: examine stmt: _58 = _57 * T_12;

cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _57
cpp_routines/drift.cpp:48: note: def_stmt: _57 = _56 + -1.0e+0;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand T_12
cpp_routines/drift.cpp:48: note: def_stmt: T_12 = T0_10(D) * length_ratio_11(D);

cpp_routines/drift.cpp:48: note: type of def: 2.
cpp_routines/drift.cpp:48: note: def_stmt is out of loop.
cpp_routines/drift.cpp:48: note: worklist: examine stmt: _57 = _56 + -1.0e+0;

cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _56
cpp_routines/drift.cpp:48: note: def_stmt: _56 = 1.0e+0 / _55;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:48: note: worklist: examine stmt: _56 = 1.0e+0 / _55;

cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _55
cpp_routines/drift.cpp:48: note: def_stmt: _55 = 1.0e+0 - _54;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:48: note: worklist: examine stmt: _55 = 1.0e+0 - _54;

cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _54
cpp_routines/drift.cpp:48: note: def_stmt: _54 = _53 * eta0_39;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:48: note: worklist: examine stmt: _54 = _53 * eta0_39;

cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _53
cpp_routines/drift.cpp:48: note: def_stmt: _53 = *_52;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand eta0_39
cpp_routines/drift.cpp:48: note: def_stmt: eta0_39 = coeff_38 * eta_zero_20(D);

cpp_routines/drift.cpp:48: note: type of def: 2.
cpp_routines/drift.cpp:48: note: def_stmt is out of loop.
cpp_routines/drift.cpp:48: note: worklist: examine stmt: _53 = *_52;

cpp_routines/drift.cpp:48: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:48: note: dependence distance  = 0.
cpp_routines/drift.cpp:48: note: dependence distance == 0 between *_50 and *_50
cpp_routines/drift.cpp:48: note: === vect_determine_vectorization_factor ===
cpp_routines/drift.cpp:48: note: ==> examining phi: i_117 = PHI <i_61(14), 0(11)>

cpp_routines/drift.cpp:48: note: ==> examining phi: .MEM_121 = PHI <.MEM_60(14), .MEM_13(D)(11)>

cpp_routines/drift.cpp:48: note: ==> examining statement: _48 = (long unsigned int) i_117;

cpp_routines/drift.cpp:48: note: skip.
cpp_routines/drift.cpp:48: note: ==> examining statement: _49 = _48 * 8;

cpp_routines/drift.cpp:48: note: skip.
cpp_routines/drift.cpp:48: note: ==> examining statement: _50 = beam_dt_23(D) + _49;

cpp_routines/drift.cpp:48: note: skip.
cpp_routines/drift.cpp:48: note: ==> examining statement: _51 = *_50;

cpp_routines/drift.cpp:48: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: nunits = 2
cpp_routines/drift.cpp:48: note: ==> examining statement: _52 = beam_dE_29(D) + _49;

cpp_routines/drift.cpp:48: note: skip.
cpp_routines/drift.cpp:48: note: ==> examining statement: _53 = *_52;

cpp_routines/drift.cpp:48: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: nunits = 2
cpp_routines/drift.cpp:48: note: ==> examining statement: _54 = _53 * eta0_39;

cpp_routines/drift.cpp:48: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: nunits = 2
cpp_routines/drift.cpp:48: note: ==> examining statement: _55 = 1.0e+0 - _54;

cpp_routines/drift.cpp:48: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: nunits = 2
cpp_routines/drift.cpp:48: note: ==> examining statement: _56 = 1.0e+0 / _55;

cpp_routines/drift.cpp:48: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: nunits = 2
cpp_routines/drift.cpp:48: note: ==> examining statement: _57 = _56 + -1.0e+0;

cpp_routines/drift.cpp:48: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: nunits = 2
cpp_routines/drift.cpp:48: note: ==> examining statement: _58 = _57 * T_12;

cpp_routines/drift.cpp:48: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: nunits = 2
cpp_routines/drift.cpp:48: note: ==> examining statement: _59 = _58 + _51;

cpp_routines/drift.cpp:48: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: nunits = 2
cpp_routines/drift.cpp:48: note: ==> examining statement: *_50 = _59;

cpp_routines/drift.cpp:48: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: nunits = 2
cpp_routines/drift.cpp:48: note: ==> examining statement: i_61 = i_117 + 1;

cpp_routines/drift.cpp:48: note: skip.
cpp_routines/drift.cpp:48: note: ==> examining statement: if (n_macroparticles_22(D) > i_61)

cpp_routines/drift.cpp:48: note: skip.
cpp_routines/drift.cpp:48: note: vectorization factor = 2
cpp_routines/drift.cpp:48: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:48: note: dependence distance  = 0.
cpp_routines/drift.cpp:48: note: accesses have the same alignment.dependence distance modulo vf == 0 between *_50 and *_50
cpp_routines/drift.cpp:48: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:48: note: can't force alignment of ref: *_50
cpp_routines/drift.cpp:48: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:48: note: can't force alignment of ref: *_52
cpp_routines/drift.cpp:48: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:48: note: can't force alignment of ref: *_50
cpp_routines/drift.cpp:48: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:48: note: === vect_prune_runtime_alias_test_list ===
cpp_routines/drift.cpp:48: note: === vect_enhance_data_refs_alignment ===
cpp_routines/drift.cpp:48: note: Unknown misalignment, is_packed = 0
cpp_routines/drift.cpp:48: note: Unknown misalignment, is_packed = 0
cpp_routines/drift.cpp:48: note: Unknown misalignment, is_packed = 0
cpp_routines/drift.cpp:48: note: vect_can_advance_ivs_p:
cpp_routines/drift.cpp:48: note: Analyze phi: i_117 = PHI <i_61(14), 0(11)>

cpp_routines/drift.cpp:48: note: Access function of PHI: {0, +, 1}_3
cpp_routines/drift.cpp:48: note: Analyze phi: .MEM_121 = PHI <.MEM_60(14), .MEM_13(D)(11)>

cpp_routines/drift.cpp:48: note: virtual phi. skip.
cpp_routines/drift.cpp:48: note: vect_model_load_cost: unaligned supported by hardware.
cpp_routines/drift.cpp:48: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
cpp_routines/drift.cpp:48: note: vect_model_store_cost: unaligned supported by hardware.
cpp_routines/drift.cpp:48: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
cpp_routines/drift.cpp:48: note: Setting misalignment to -1.
cpp_routines/drift.cpp:48: note: Setting misalignment to -1.
cpp_routines/drift.cpp:48: note: Alignment of access forced using peeling.
cpp_routines/drift.cpp:48: note: Peeling for alignment will be applied.
cpp_routines/drift.cpp:48: note: Vectorizing an unaligned access.
cpp_routines/drift.cpp:48: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:48: note: === vect_make_slp_decision ===
cpp_routines/drift.cpp:48: note: === vect_detect_hybrid_slp ===
cpp_routines/drift.cpp:48: note: === vect_analyze_loop_operations ===
cpp_routines/drift.cpp:48: note: examining phi: i_117 = PHI <i_61(14), 0(11)>

cpp_routines/drift.cpp:48: note: examining phi: .MEM_121 = PHI <.MEM_60(14), .MEM_13(D)(11)>

cpp_routines/drift.cpp:48: note: ==> examining statement: _48 = (long unsigned int) i_117;

cpp_routines/drift.cpp:48: note: irrelevant.
cpp_routines/drift.cpp:48: note: ==> examining statement: _49 = _48 * 8;

cpp_routines/drift.cpp:48: note: irrelevant.
cpp_routines/drift.cpp:48: note: ==> examining statement: _50 = beam_dt_23(D) + _49;

cpp_routines/drift.cpp:48: note: irrelevant.
cpp_routines/drift.cpp:48: note: ==> examining statement: _51 = *_50;

cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand *_50
cpp_routines/drift.cpp:48: note: not ssa-name.
cpp_routines/drift.cpp:48: note: use not simple.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand *_50
cpp_routines/drift.cpp:48: note: not ssa-name.
cpp_routines/drift.cpp:48: note: use not simple.
cpp_routines/drift.cpp:48: note: vect_model_load_cost: aligned.
cpp_routines/drift.cpp:48: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:48: note: ==> examining statement: _52 = beam_dE_29(D) + _49;

cpp_routines/drift.cpp:48: note: irrelevant.
cpp_routines/drift.cpp:48: note: ==> examining statement: _53 = *_52;

cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand *_52
cpp_routines/drift.cpp:48: note: not ssa-name.
cpp_routines/drift.cpp:48: note: use not simple.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand *_52
cpp_routines/drift.cpp:48: note: not ssa-name.
cpp_routines/drift.cpp:48: note: use not simple.
cpp_routines/drift.cpp:48: note: vect_model_load_cost: unaligned supported by hardware.
cpp_routines/drift.cpp:48: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/drift.cpp:48: note: ==> examining statement: _54 = _53 * eta0_39;

cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _53
cpp_routines/drift.cpp:48: note: def_stmt: _53 = *_52;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand eta0_39
cpp_routines/drift.cpp:48: note: def_stmt: eta0_39 = coeff_38 * eta_zero_20(D);

cpp_routines/drift.cpp:48: note: type of def: 2.
cpp_routines/drift.cpp:48: note: === vectorizable_operation ===
cpp_routines/drift.cpp:48: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:48: note: ==> examining statement: _55 = 1.0e+0 - _54;

cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _54
cpp_routines/drift.cpp:48: note: def_stmt: _54 = _53 * eta0_39;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: === vectorizable_operation ===
cpp_routines/drift.cpp:48: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:48: note: ==> examining statement: _56 = 1.0e+0 / _55;

cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _55
cpp_routines/drift.cpp:48: note: def_stmt: _55 = 1.0e+0 - _54;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: === vectorizable_operation ===
cpp_routines/drift.cpp:48: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:48: note: ==> examining statement: _57 = _56 + -1.0e+0;

cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _56
cpp_routines/drift.cpp:48: note: def_stmt: _56 = 1.0e+0 / _55;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand -1.0e+0
cpp_routines/drift.cpp:48: note: === vectorizable_operation ===
cpp_routines/drift.cpp:48: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:48: note: ==> examining statement: _58 = _57 * T_12;

cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _57
cpp_routines/drift.cpp:48: note: def_stmt: _57 = _56 + -1.0e+0;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand T_12
cpp_routines/drift.cpp:48: note: def_stmt: T_12 = T0_10(D) * length_ratio_11(D);

cpp_routines/drift.cpp:48: note: type of def: 2.
cpp_routines/drift.cpp:48: note: === vectorizable_operation ===
cpp_routines/drift.cpp:48: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:48: note: ==> examining statement: _59 = _58 + _51;

cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _58
cpp_routines/drift.cpp:48: note: def_stmt: _58 = _57 * T_12;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _51
cpp_routines/drift.cpp:48: note: def_stmt: _51 = *_50;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: === vectorizable_operation ===
cpp_routines/drift.cpp:48: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:48: note: ==> examining statement: *_50 = _59;

cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _59
cpp_routines/drift.cpp:48: note: def_stmt: _59 = _58 + _51;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: vect_model_store_cost: aligned.
cpp_routines/drift.cpp:48: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:48: note: ==> examining statement: i_61 = i_117 + 1;

cpp_routines/drift.cpp:48: note: irrelevant.
cpp_routines/drift.cpp:48: note: ==> examining statement: if (n_macroparticles_22(D) > i_61)

cpp_routines/drift.cpp:48: note: irrelevant.
cpp_routines/drift.cpp:48: note: === vect_update_slp_costs_according_to_vf ===cost model: prologue peel iters set to vf/2.cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
cpp_routines/drift.cpp:48: note: Cost model analysis: 
  Vector inside of loop cost: 10
  Vector prologue cost: 22
  Vector epilogue cost: 9
  Scalar iteration cost: 9
  Scalar outside cost: 7
  Vector outside cost: 31
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 4

cpp_routines/drift.cpp:48: note:   Runtime profitability threshold = 3

cpp_routines/drift.cpp:48: note:   Static estimate profitability threshold = 3

cpp_routines/drift.cpp:48: note: epilog loop required.
cpp_routines/drift.cpp:48: note: vect_can_advance_ivs_p:
cpp_routines/drift.cpp:48: note: Analyze phi: i_117 = PHI <i_61(14), 0(11)>

cpp_routines/drift.cpp:48: note: Access function of PHI: {0, +, 1}_3
cpp_routines/drift.cpp:48: note: Analyze phi: .MEM_121 = PHI <.MEM_60(14), .MEM_13(D)(11)>

cpp_routines/drift.cpp:48: note: virtual phi. skip.

Vectorizing loop at cpp_routines/drift.cpp:48

cpp_routines/drift.cpp:48: note: === vec_transform_loop ===
cpp_routines/drift.cpp:48: note: Profitability threshold is 3 loop iterations.
cpp_routines/drift.cpp:48: note: === vect_do_peeling_for_alignment ===
cpp_routines/drift.cpp:48: note: created vect_pbeam_dt.34_145
cpp_routines/drift.cpp:48: note: niters for prolog loop: MIN_EXPR <(unsigned int) -(((unsigned long) vect_pbeam_dt.34_145 & 15) >> 3) & 1, niters.31_146>
loop at cpp_routines/drift.cpp:49: if (ivtmp_5 < prologue_after_cost_adjust.36_111)
Setting upper bound of nb iterations for prologue loop to 2

cpp_routines/drift.cpp:48: note: === vect_update_inits_of_dr ===
cpp_routines/drift.cpp:48: note: === vect_do_peeling_for_loop_bound ===
cpp_routines/drift.cpp:48: note: vect_update_ivs_after_vectorizer: phi: i_117 = PHI <i_61(14), i_110(59)>

cpp_routines/drift.cpp:48: note: vect_update_ivs_after_vectorizer: phi: .MEM_121 = PHI <.MEM_60(14), .MEM_108(59)>

cpp_routines/drift.cpp:48: note: virtual phi. skip.Setting upper bound of nb iterations for epilogue loop to 0

cpp_routines/drift.cpp:48: note: ------>vectorizing phi: i_117 = PHI <i_61(14), i_110(63)>

cpp_routines/drift.cpp:48: note: ------>vectorizing phi: .MEM_121 = PHI <.MEM_60(14), .MEM_108(63)>

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: _48 = (long unsigned int) i_117;

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: _49 = _48 * 8;

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: _50 = beam_dt_23(D) + _49;

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: _51 = *_50;

cpp_routines/drift.cpp:48: note: transform statement.
cpp_routines/drift.cpp:48: note: transform load. ncopies = 1
cpp_routines/drift.cpp:48: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *beam_dt_23(D)
cpp_routines/drift.cpp:48: note: created vect_pbeam_dt.45_244
cpp_routines/drift.cpp:48: note: add new stmt: vect_var_.46_247 = MEM[(double *)vect_pbeam_dt.42_245];

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: _52 = beam_dE_29(D) + _49;

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: _53 = *_52;

cpp_routines/drift.cpp:48: note: transform statement.
cpp_routines/drift.cpp:48: note: transform load. ncopies = 1
cpp_routines/drift.cpp:48: note: create vector_type-pointer variable to type: const vector(2) double  vectorizing a pointer ref: *beam_dE_29(D)
cpp_routines/drift.cpp:48: note: created vect_pbeam_dE.50_249
cpp_routines/drift.cpp:48: note: add new stmt: vect_var_.51_252 = MEM[(const double *)vect_pbeam_dE.47_250];

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: _54 = _53 * eta0_39;

cpp_routines/drift.cpp:48: note: transform statement.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _53
cpp_routines/drift.cpp:48: note: def_stmt: _53 = *_52;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand eta0_39
cpp_routines/drift.cpp:48: note: def_stmt: eta0_39 = coeff_38 * eta_zero_20(D);

cpp_routines/drift.cpp:48: note: type of def: 2.
cpp_routines/drift.cpp:48: note: transform binary/unary operation.
cpp_routines/drift.cpp:48: note: vect_get_vec_def_for_operand: _53
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _53
cpp_routines/drift.cpp:48: note: def_stmt: _53 = *_52;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: def =  _53  def_stmt =  _53 = *_52;

cpp_routines/drift.cpp:48: note: vect_get_vec_def_for_operand: eta0_39
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand eta0_39
cpp_routines/drift.cpp:48: note: def_stmt: eta0_39 = coeff_38 * eta_zero_20(D);

cpp_routines/drift.cpp:48: note: type of def: 2.
cpp_routines/drift.cpp:48: note: def =  eta0_39  def_stmt =  eta0_39 = coeff_38 * eta_zero_20(D);

cpp_routines/drift.cpp:48: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:48: note: vectype: const vector(2) double
cpp_routines/drift.cpp:48: note: Create vector_inv.
cpp_routines/drift.cpp:48: note: created new init_stmt: vect_cst_.53_253 = {eta0_39, eta0_39};

cpp_routines/drift.cpp:48: note: add new stmt: vect_var_.52_254 = vect_var_.51_252 * vect_cst_.53_253;

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: _55 = 1.0e+0 - _54;

cpp_routines/drift.cpp:48: note: transform statement.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _54
cpp_routines/drift.cpp:48: note: def_stmt: _54 = _53 * eta0_39;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: transform binary/unary operation.
cpp_routines/drift.cpp:48: note: vect_get_vec_def_for_operand: 1.0e+0
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: Create vector_cst. nunits = 2
cpp_routines/drift.cpp:48: note: created new init_stmt: vect_cst_.55_255 = { 1.0e+0, 1.0e+0 };

cpp_routines/drift.cpp:48: note: vect_get_vec_def_for_operand: _54
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _54
cpp_routines/drift.cpp:48: note: def_stmt: _54 = _53 * eta0_39;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: def =  _54  def_stmt =  _54 = _53 * eta0_39;

cpp_routines/drift.cpp:48: note: add new stmt: vect_var_.54_256 = vect_cst_.55_255 - vect_var_.52_254;

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: _56 = 1.0e+0 / _55;

cpp_routines/drift.cpp:48: note: transform statement.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _55
cpp_routines/drift.cpp:48: note: def_stmt: _55 = 1.0e+0 - _54;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: transform binary/unary operation.
cpp_routines/drift.cpp:48: note: vect_get_vec_def_for_operand: 1.0e+0
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: Create vector_cst. nunits = 2
cpp_routines/drift.cpp:48: note: created new init_stmt: vect_cst_.57_257 = { 1.0e+0, 1.0e+0 };

cpp_routines/drift.cpp:48: note: vect_get_vec_def_for_operand: _55
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _55
cpp_routines/drift.cpp:48: note: def_stmt: _55 = 1.0e+0 - _54;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: def =  _55  def_stmt =  _55 = 1.0e+0 - _54;

cpp_routines/drift.cpp:48: note: add new stmt: vect_var_.56_258 = vect_cst_.57_257 / vect_var_.54_256;

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: _57 = _56 + -1.0e+0;

cpp_routines/drift.cpp:48: note: transform statement.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _56
cpp_routines/drift.cpp:48: note: def_stmt: _56 = 1.0e+0 / _55;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand -1.0e+0
cpp_routines/drift.cpp:48: note: transform binary/unary operation.
cpp_routines/drift.cpp:48: note: vect_get_vec_def_for_operand: _56
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _56
cpp_routines/drift.cpp:48: note: def_stmt: _56 = 1.0e+0 / _55;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: def =  _56  def_stmt =  _56 = 1.0e+0 / _55;

cpp_routines/drift.cpp:48: note: vect_get_vec_def_for_operand: -1.0e+0
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand -1.0e+0
cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: Create vector_cst. nunits = 2
cpp_routines/drift.cpp:48: note: created new init_stmt: vect_cst_.59_259 = { -1.0e+0, -1.0e+0 };

cpp_routines/drift.cpp:48: note: add new stmt: vect_var_.58_260 = vect_var_.56_258 + vect_cst_.59_259;

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: _58 = _57 * T_12;

cpp_routines/drift.cpp:48: note: transform statement.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _57
cpp_routines/drift.cpp:48: note: def_stmt: _57 = _56 + -1.0e+0;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand T_12
cpp_routines/drift.cpp:48: note: def_stmt: T_12 = T0_10(D) * length_ratio_11(D);

cpp_routines/drift.cpp:48: note: type of def: 2.
cpp_routines/drift.cpp:48: note: transform binary/unary operation.
cpp_routines/drift.cpp:48: note: vect_get_vec_def_for_operand: _57
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _57
cpp_routines/drift.cpp:48: note: def_stmt: _57 = _56 + -1.0e+0;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: def =  _57  def_stmt =  _57 = _56 + -1.0e+0;

cpp_routines/drift.cpp:48: note: vect_get_vec_def_for_operand: T_12
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand T_12
cpp_routines/drift.cpp:48: note: def_stmt: T_12 = T0_10(D) * length_ratio_11(D);

cpp_routines/drift.cpp:48: note: type of def: 2.
cpp_routines/drift.cpp:48: note: def =  T_12  def_stmt =  T_12 = T0_10(D) * length_ratio_11(D);

cpp_routines/drift.cpp:48: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:48: note: vectype: vector(2) double
cpp_routines/drift.cpp:48: note: Create vector_inv.
cpp_routines/drift.cpp:48: note: created new init_stmt: vect_cst_.61_261 = {T_12, T_12};

cpp_routines/drift.cpp:48: note: add new stmt: vect_var_.60_262 = vect_var_.58_260 * vect_cst_.61_261;

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: _59 = _58 + _51;

cpp_routines/drift.cpp:48: note: transform statement.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _58
cpp_routines/drift.cpp:48: note: def_stmt: _58 = _57 * T_12;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _51
cpp_routines/drift.cpp:48: note: def_stmt: _51 = *_50;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: transform binary/unary operation.
cpp_routines/drift.cpp:48: note: vect_get_vec_def_for_operand: _58
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _58
cpp_routines/drift.cpp:48: note: def_stmt: _58 = _57 * T_12;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: def =  _58  def_stmt =  _58 = _57 * T_12;

cpp_routines/drift.cpp:48: note: vect_get_vec_def_for_operand: _51
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _51
cpp_routines/drift.cpp:48: note: def_stmt: _51 = *_50;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: def =  _51  def_stmt =  _51 = *_50;

cpp_routines/drift.cpp:48: note: add new stmt: vect_var_.62_263 = vect_var_.60_262 + vect_var_.46_247;

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: *_50 = _59;

cpp_routines/drift.cpp:48: note: transform statement.
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _59
cpp_routines/drift.cpp:48: note: def_stmt: _59 = _58 + _51;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: transform store. ncopies = 1
cpp_routines/drift.cpp:48: note: vect_get_vec_def_for_operand: _59
cpp_routines/drift.cpp:48: note: vect_is_simple_use: operand _59
cpp_routines/drift.cpp:48: note: def_stmt: _59 = _58 + _51;

cpp_routines/drift.cpp:48: note: type of def: 3.
cpp_routines/drift.cpp:48: note: def =  _59  def_stmt =  _59 = _58 + _51;

cpp_routines/drift.cpp:48: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *beam_dt_23(D)
cpp_routines/drift.cpp:48: note: created vect_pbeam_dt.66_265
cpp_routines/drift.cpp:48: note: add new stmt: MEM[(double *)vect_pbeam_dt.63_266] = vect_var_.62_263;

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: i_61 = i_117 + 1;

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: vect_pbeam_dt.42_246 = vect_pbeam_dt.42_245 + 16;

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: vect_pbeam_dE.47_251 = vect_pbeam_dE.47_250 + 16;

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: vect_pbeam_dt.63_267 = vect_pbeam_dt.63_266 + 16;

cpp_routines/drift.cpp:48: note: ------>vectorizing statement: if (n_macroparticles_22(D) > i_61)

loop at cpp_routines/drift.cpp:49: if (ivtmp_269 < bnd.39_1)

cpp_routines/drift.cpp:48: note: LOOP VECTORIZED.
Analyzing loop at cpp_routines/drift.cpp:51

cpp_routines/drift.cpp:51: note: ===== analyze_loop_nest =====
cpp_routines/drift.cpp:51: note: === vect_analyze_loop_form ===
cpp_routines/drift.cpp:51: note: === get_loop_niters ===
cpp_routines/drift.cpp:51: note: ==> get_loop_niters:(unsigned int) n_macroparticles_22(D)
cpp_routines/drift.cpp:51: note: Symbolic number of iterations is (unsigned int) n_macroparticles_22(D)
cpp_routines/drift.cpp:51: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:51: note: vectype: const vector(2) double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: === vect_analyze_scalar_cycles ===
cpp_routines/drift.cpp:51: note: Analyze phi: i_118 = PHI <i_79(21), 0(18)>

cpp_routines/drift.cpp:51: note: Access function of PHI: {0, +, 1}_2
cpp_routines/drift.cpp:51: note: step: 1,  init: 0
cpp_routines/drift.cpp:51: note: Detected induction.
cpp_routines/drift.cpp:51: note: Analyze phi: .MEM_122 = PHI <.MEM_78(21), .MEM_13(D)(18)>

cpp_routines/drift.cpp:51: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _62
cpp_routines/drift.cpp:51: note: def_stmt: _62 = (long unsigned int) i_118;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand i_118
cpp_routines/drift.cpp:51: note: def_stmt: i_118 = PHI <i_79(21), 0(18)>

cpp_routines/drift.cpp:51: note: type of def: 4.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _67
cpp_routines/drift.cpp:51: note: def_stmt: _67 = *_66;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _67
cpp_routines/drift.cpp:51: note: def_stmt: _67 = *_66;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:51: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:51: note: type of def: 2.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _75
cpp_routines/drift.cpp:51: note: def_stmt: _75 = _74 + -1.0e+0;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: === vect_mark_stmts_to_be_vectorized ===
cpp_routines/drift.cpp:51: note: init: phi relevant? i_118 = PHI <i_79(21), 0(18)>

cpp_routines/drift.cpp:51: note: init: phi relevant? .MEM_122 = PHI <.MEM_78(21), .MEM_13(D)(18)>

cpp_routines/drift.cpp:51: note: init: stmt relevant? _62 = (long unsigned int) i_118;

cpp_routines/drift.cpp:51: note: init: stmt relevant? _63 = _62 * 8;

cpp_routines/drift.cpp:51: note: init: stmt relevant? _64 = beam_dt_23(D) + _63;

cpp_routines/drift.cpp:51: note: init: stmt relevant? _65 = *_64;

cpp_routines/drift.cpp:51: note: init: stmt relevant? _66 = beam_dE_29(D) + _63;

cpp_routines/drift.cpp:51: note: init: stmt relevant? _67 = *_66;

cpp_routines/drift.cpp:51: note: init: stmt relevant? _68 = _67 * eta0_39;

cpp_routines/drift.cpp:51: note: init: stmt relevant? powmult_90 = _67 * _67;

cpp_routines/drift.cpp:51: note: init: stmt relevant? _71 = eta1_42 * powmult_90;

cpp_routines/drift.cpp:51: note: init: stmt relevant? _72 = 1.0e+0 - _68;

cpp_routines/drift.cpp:51: note: init: stmt relevant? _73 = _72 - _71;

cpp_routines/drift.cpp:51: note: init: stmt relevant? _74 = 1.0e+0 / _73;

cpp_routines/drift.cpp:51: note: init: stmt relevant? _75 = _74 + -1.0e+0;

cpp_routines/drift.cpp:51: note: init: stmt relevant? _76 = _75 * T_12;

cpp_routines/drift.cpp:51: note: init: stmt relevant? _77 = _76 + _65;

cpp_routines/drift.cpp:51: note: init: stmt relevant? *_64 = _77;

cpp_routines/drift.cpp:51: note: vec_stmt_relevant_p: stmt has vdefs.
cpp_routines/drift.cpp:51: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:51: note: init: stmt relevant? i_79 = i_118 + 1;

cpp_routines/drift.cpp:51: note: init: stmt relevant? if (n_macroparticles_22(D) > i_79)

cpp_routines/drift.cpp:51: note: worklist: examine stmt: *_64 = _77;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _77
cpp_routines/drift.cpp:51: note: def_stmt: _77 = _76 + _65;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:51: note: worklist: examine stmt: _77 = _76 + _65;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _76
cpp_routines/drift.cpp:51: note: def_stmt: _76 = _75 * T_12;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _65
cpp_routines/drift.cpp:51: note: def_stmt: _65 = *_64;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:51: note: worklist: examine stmt: _65 = *_64;

cpp_routines/drift.cpp:51: note: worklist: examine stmt: _76 = _75 * T_12;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _75
cpp_routines/drift.cpp:51: note: def_stmt: _75 = _74 + -1.0e+0;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand T_12
cpp_routines/drift.cpp:51: note: def_stmt: T_12 = T0_10(D) * length_ratio_11(D);

cpp_routines/drift.cpp:51: note: type of def: 2.
cpp_routines/drift.cpp:51: note: def_stmt is out of loop.
cpp_routines/drift.cpp:51: note: worklist: examine stmt: _75 = _74 + -1.0e+0;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _74
cpp_routines/drift.cpp:51: note: def_stmt: _74 = 1.0e+0 / _73;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:51: note: worklist: examine stmt: _74 = 1.0e+0 / _73;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _73
cpp_routines/drift.cpp:51: note: def_stmt: _73 = _72 - _71;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:51: note: worklist: examine stmt: _73 = _72 - _71;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _72
cpp_routines/drift.cpp:51: note: def_stmt: _72 = 1.0e+0 - _68;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _71
cpp_routines/drift.cpp:51: note: def_stmt: _71 = eta1_42 * powmult_90;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:51: note: worklist: examine stmt: _71 = eta1_42 * powmult_90;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:51: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:51: note: type of def: 2.
cpp_routines/drift.cpp:51: note: def_stmt is out of loop.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand powmult_90
cpp_routines/drift.cpp:51: note: def_stmt: powmult_90 = _67 * _67;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:51: note: worklist: examine stmt: powmult_90 = _67 * _67;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _67
cpp_routines/drift.cpp:51: note: def_stmt: _67 = *_66;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _67
cpp_routines/drift.cpp:51: note: def_stmt: _67 = *_66;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:51: note: already marked relevant/live.
cpp_routines/drift.cpp:51: note: worklist: examine stmt: _67 = *_66;

cpp_routines/drift.cpp:51: note: worklist: examine stmt: _72 = 1.0e+0 - _68;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _68
cpp_routines/drift.cpp:51: note: def_stmt: _68 = _67 * eta0_39;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:51: note: worklist: examine stmt: _68 = _67 * eta0_39;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _67
cpp_routines/drift.cpp:51: note: def_stmt: _67 = *_66;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:51: note: already marked relevant/live.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand eta0_39
cpp_routines/drift.cpp:51: note: def_stmt: eta0_39 = coeff_38 * eta_zero_20(D);

cpp_routines/drift.cpp:51: note: type of def: 2.
cpp_routines/drift.cpp:51: note: def_stmt is out of loop.
cpp_routines/drift.cpp:51: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:51: note: dependence distance  = 0.
cpp_routines/drift.cpp:51: note: dependence distance == 0 between *_64 and *_64
cpp_routines/drift.cpp:51: note: === vect_determine_vectorization_factor ===
cpp_routines/drift.cpp:51: note: ==> examining phi: i_118 = PHI <i_79(21), 0(18)>

cpp_routines/drift.cpp:51: note: ==> examining phi: .MEM_122 = PHI <.MEM_78(21), .MEM_13(D)(18)>

cpp_routines/drift.cpp:51: note: ==> examining statement: _62 = (long unsigned int) i_118;

cpp_routines/drift.cpp:51: note: skip.
cpp_routines/drift.cpp:51: note: ==> examining statement: _63 = _62 * 8;

cpp_routines/drift.cpp:51: note: skip.
cpp_routines/drift.cpp:51: note: ==> examining statement: _64 = beam_dt_23(D) + _63;

cpp_routines/drift.cpp:51: note: skip.
cpp_routines/drift.cpp:51: note: ==> examining statement: _65 = *_64;

cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: nunits = 2
cpp_routines/drift.cpp:51: note: ==> examining statement: _66 = beam_dE_29(D) + _63;

cpp_routines/drift.cpp:51: note: skip.
cpp_routines/drift.cpp:51: note: ==> examining statement: _67 = *_66;

cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: nunits = 2
cpp_routines/drift.cpp:51: note: ==> examining statement: _68 = _67 * eta0_39;

cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: nunits = 2
cpp_routines/drift.cpp:51: note: ==> examining statement: powmult_90 = _67 * _67;

cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: nunits = 2
cpp_routines/drift.cpp:51: note: ==> examining statement: _71 = eta1_42 * powmult_90;

cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: nunits = 2
cpp_routines/drift.cpp:51: note: ==> examining statement: _72 = 1.0e+0 - _68;

cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: nunits = 2
cpp_routines/drift.cpp:51: note: ==> examining statement: _73 = _72 - _71;

cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: nunits = 2
cpp_routines/drift.cpp:51: note: ==> examining statement: _74 = 1.0e+0 / _73;

cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: nunits = 2
cpp_routines/drift.cpp:51: note: ==> examining statement: _75 = _74 + -1.0e+0;

cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: nunits = 2
cpp_routines/drift.cpp:51: note: ==> examining statement: _76 = _75 * T_12;

cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: nunits = 2
cpp_routines/drift.cpp:51: note: ==> examining statement: _77 = _76 + _65;

cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: nunits = 2
cpp_routines/drift.cpp:51: note: ==> examining statement: *_64 = _77;

cpp_routines/drift.cpp:51: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: nunits = 2
cpp_routines/drift.cpp:51: note: ==> examining statement: i_79 = i_118 + 1;

cpp_routines/drift.cpp:51: note: skip.
cpp_routines/drift.cpp:51: note: ==> examining statement: if (n_macroparticles_22(D) > i_79)

cpp_routines/drift.cpp:51: note: skip.
cpp_routines/drift.cpp:51: note: vectorization factor = 2
cpp_routines/drift.cpp:51: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:51: note: dependence distance  = 0.
cpp_routines/drift.cpp:51: note: accesses have the same alignment.dependence distance modulo vf == 0 between *_64 and *_64
cpp_routines/drift.cpp:51: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:51: note: can't force alignment of ref: *_64
cpp_routines/drift.cpp:51: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:51: note: can't force alignment of ref: *_66
cpp_routines/drift.cpp:51: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:51: note: can't force alignment of ref: *_64
cpp_routines/drift.cpp:51: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:51: note: === vect_prune_runtime_alias_test_list ===
cpp_routines/drift.cpp:51: note: === vect_enhance_data_refs_alignment ===
cpp_routines/drift.cpp:51: note: Unknown misalignment, is_packed = 0
cpp_routines/drift.cpp:51: note: Unknown misalignment, is_packed = 0
cpp_routines/drift.cpp:51: note: Unknown misalignment, is_packed = 0
cpp_routines/drift.cpp:51: note: vect_can_advance_ivs_p:
cpp_routines/drift.cpp:51: note: Analyze phi: i_118 = PHI <i_79(21), 0(18)>

cpp_routines/drift.cpp:51: note: Access function of PHI: {0, +, 1}_2
cpp_routines/drift.cpp:51: note: Analyze phi: .MEM_122 = PHI <.MEM_78(21), .MEM_13(D)(18)>

cpp_routines/drift.cpp:51: note: virtual phi. skip.
cpp_routines/drift.cpp:51: note: vect_model_load_cost: unaligned supported by hardware.
cpp_routines/drift.cpp:51: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
cpp_routines/drift.cpp:51: note: vect_model_store_cost: unaligned supported by hardware.
cpp_routines/drift.cpp:51: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
cpp_routines/drift.cpp:51: note: Setting misalignment to -1.
cpp_routines/drift.cpp:51: note: Setting misalignment to -1.
cpp_routines/drift.cpp:51: note: Alignment of access forced using peeling.
cpp_routines/drift.cpp:51: note: Peeling for alignment will be applied.
cpp_routines/drift.cpp:51: note: Vectorizing an unaligned access.
cpp_routines/drift.cpp:51: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:51: note: === vect_make_slp_decision ===
cpp_routines/drift.cpp:51: note: === vect_detect_hybrid_slp ===
cpp_routines/drift.cpp:51: note: === vect_analyze_loop_operations ===
cpp_routines/drift.cpp:51: note: examining phi: i_118 = PHI <i_79(21), 0(18)>

cpp_routines/drift.cpp:51: note: examining phi: .MEM_122 = PHI <.MEM_78(21), .MEM_13(D)(18)>

cpp_routines/drift.cpp:51: note: ==> examining statement: _62 = (long unsigned int) i_118;

cpp_routines/drift.cpp:51: note: irrelevant.
cpp_routines/drift.cpp:51: note: ==> examining statement: _63 = _62 * 8;

cpp_routines/drift.cpp:51: note: irrelevant.
cpp_routines/drift.cpp:51: note: ==> examining statement: _64 = beam_dt_23(D) + _63;

cpp_routines/drift.cpp:51: note: irrelevant.
cpp_routines/drift.cpp:51: note: ==> examining statement: _65 = *_64;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand *_64
cpp_routines/drift.cpp:51: note: not ssa-name.
cpp_routines/drift.cpp:51: note: use not simple.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand *_64
cpp_routines/drift.cpp:51: note: not ssa-name.
cpp_routines/drift.cpp:51: note: use not simple.
cpp_routines/drift.cpp:51: note: vect_model_load_cost: aligned.
cpp_routines/drift.cpp:51: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:51: note: ==> examining statement: _66 = beam_dE_29(D) + _63;

cpp_routines/drift.cpp:51: note: irrelevant.
cpp_routines/drift.cpp:51: note: ==> examining statement: _67 = *_66;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand *_66
cpp_routines/drift.cpp:51: note: not ssa-name.
cpp_routines/drift.cpp:51: note: use not simple.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand *_66
cpp_routines/drift.cpp:51: note: not ssa-name.
cpp_routines/drift.cpp:51: note: use not simple.
cpp_routines/drift.cpp:51: note: vect_model_load_cost: unaligned supported by hardware.
cpp_routines/drift.cpp:51: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/drift.cpp:51: note: ==> examining statement: _68 = _67 * eta0_39;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _67
cpp_routines/drift.cpp:51: note: def_stmt: _67 = *_66;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand eta0_39
cpp_routines/drift.cpp:51: note: def_stmt: eta0_39 = coeff_38 * eta_zero_20(D);

cpp_routines/drift.cpp:51: note: type of def: 2.
cpp_routines/drift.cpp:51: note: === vectorizable_operation ===
cpp_routines/drift.cpp:51: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:51: note: ==> examining statement: powmult_90 = _67 * _67;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _67
cpp_routines/drift.cpp:51: note: def_stmt: _67 = *_66;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _67
cpp_routines/drift.cpp:51: note: def_stmt: _67 = *_66;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: === vectorizable_operation ===
cpp_routines/drift.cpp:51: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:51: note: ==> examining statement: _71 = eta1_42 * powmult_90;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:51: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:51: note: type of def: 2.
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:51: note: vectype: const vector(2) double
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand powmult_90
cpp_routines/drift.cpp:51: note: def_stmt: powmult_90 = _67 * _67;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: === vectorizable_operation ===
cpp_routines/drift.cpp:51: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:51: note: ==> examining statement: _72 = 1.0e+0 - _68;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _68
cpp_routines/drift.cpp:51: note: def_stmt: _68 = _67 * eta0_39;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: === vectorizable_operation ===
cpp_routines/drift.cpp:51: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:51: note: ==> examining statement: _73 = _72 - _71;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _72
cpp_routines/drift.cpp:51: note: def_stmt: _72 = 1.0e+0 - _68;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _71
cpp_routines/drift.cpp:51: note: def_stmt: _71 = eta1_42 * powmult_90;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: === vectorizable_operation ===
cpp_routines/drift.cpp:51: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:51: note: ==> examining statement: _74 = 1.0e+0 / _73;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _73
cpp_routines/drift.cpp:51: note: def_stmt: _73 = _72 - _71;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: === vectorizable_operation ===
cpp_routines/drift.cpp:51: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:51: note: ==> examining statement: _75 = _74 + -1.0e+0;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _74
cpp_routines/drift.cpp:51: note: def_stmt: _74 = 1.0e+0 / _73;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand -1.0e+0
cpp_routines/drift.cpp:51: note: === vectorizable_operation ===
cpp_routines/drift.cpp:51: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:51: note: ==> examining statement: _76 = _75 * T_12;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _75
cpp_routines/drift.cpp:51: note: def_stmt: _75 = _74 + -1.0e+0;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand T_12
cpp_routines/drift.cpp:51: note: def_stmt: T_12 = T0_10(D) * length_ratio_11(D);

cpp_routines/drift.cpp:51: note: type of def: 2.
cpp_routines/drift.cpp:51: note: === vectorizable_operation ===
cpp_routines/drift.cpp:51: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:51: note: ==> examining statement: _77 = _76 + _65;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _76
cpp_routines/drift.cpp:51: note: def_stmt: _76 = _75 * T_12;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _65
cpp_routines/drift.cpp:51: note: def_stmt: _65 = *_64;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: === vectorizable_operation ===
cpp_routines/drift.cpp:51: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:51: note: ==> examining statement: *_64 = _77;

cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _77
cpp_routines/drift.cpp:51: note: def_stmt: _77 = _76 + _65;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: vect_model_store_cost: aligned.
cpp_routines/drift.cpp:51: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:51: note: ==> examining statement: i_79 = i_118 + 1;

cpp_routines/drift.cpp:51: note: irrelevant.
cpp_routines/drift.cpp:51: note: ==> examining statement: if (n_macroparticles_22(D) > i_79)

cpp_routines/drift.cpp:51: note: irrelevant.
cpp_routines/drift.cpp:51: note: === vect_update_slp_costs_according_to_vf ===cost model: prologue peel iters set to vf/2.cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
cpp_routines/drift.cpp:51: note: Cost model analysis: 
  Vector inside of loop cost: 13
  Vector prologue cost: 26
  Vector epilogue cost: 12
  Scalar iteration cost: 12
  Scalar outside cost: 7
  Vector outside cost: 38
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 4

cpp_routines/drift.cpp:51: note:   Runtime profitability threshold = 3

cpp_routines/drift.cpp:51: note:   Static estimate profitability threshold = 3

cpp_routines/drift.cpp:51: note: epilog loop required.
cpp_routines/drift.cpp:51: note: vect_can_advance_ivs_p:
cpp_routines/drift.cpp:51: note: Analyze phi: i_118 = PHI <i_79(21), 0(18)>

cpp_routines/drift.cpp:51: note: Access function of PHI: {0, +, 1}_2
cpp_routines/drift.cpp:51: note: Analyze phi: .MEM_122 = PHI <.MEM_78(21), .MEM_13(D)(18)>

cpp_routines/drift.cpp:51: note: virtual phi. skip.

Vectorizing loop at cpp_routines/drift.cpp:51

cpp_routines/drift.cpp:51: note: === vec_transform_loop ===
cpp_routines/drift.cpp:51: note: Profitability threshold is 3 loop iterations.
cpp_routines/drift.cpp:51: note: === vect_do_peeling_for_alignment ===
cpp_routines/drift.cpp:51: note: created vect_pbeam_dt.70_271
cpp_routines/drift.cpp:51: note: niters for prolog loop: MIN_EXPR <(unsigned int) -(((unsigned long) vect_pbeam_dt.70_271 & 15) >> 3) & 1, niters.67_270>
loop at cpp_routines/drift.cpp:53: if (ivtmp_308 < prologue_after_cost_adjust.72_300)
Setting upper bound of nb iterations for prologue loop to 2

cpp_routines/drift.cpp:51: note: === vect_update_inits_of_dr ===
cpp_routines/drift.cpp:51: note: === vect_do_peeling_for_loop_bound ===
cpp_routines/drift.cpp:51: note: vect_update_ivs_after_vectorizer: phi: i_118 = PHI <i_79(21), i_301(78)>

cpp_routines/drift.cpp:51: note: vect_update_ivs_after_vectorizer: phi: .MEM_122 = PHI <.MEM_78(21), .MEM_303(78)>

cpp_routines/drift.cpp:51: note: virtual phi. skip.Setting upper bound of nb iterations for epilogue loop to 0

cpp_routines/drift.cpp:51: note: ------>vectorizing phi: i_118 = PHI <i_79(21), i_301(82)>

cpp_routines/drift.cpp:51: note: ------>vectorizing phi: .MEM_122 = PHI <.MEM_78(21), .MEM_303(82)>

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: _62 = (long unsigned int) i_118;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: _63 = _62 * 8;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: _64 = beam_dt_23(D) + _63;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: _65 = *_64;

cpp_routines/drift.cpp:51: note: transform statement.
cpp_routines/drift.cpp:51: note: transform load. ncopies = 1
cpp_routines/drift.cpp:51: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *beam_dt_23(D)
cpp_routines/drift.cpp:51: note: created vect_pbeam_dt.81_342
cpp_routines/drift.cpp:51: note: add new stmt: vect_var_.82_345 = MEM[(double *)vect_pbeam_dt.78_343];

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: _66 = beam_dE_29(D) + _63;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: _67 = *_66;

cpp_routines/drift.cpp:51: note: transform statement.
cpp_routines/drift.cpp:51: note: transform load. ncopies = 1
cpp_routines/drift.cpp:51: note: create vector_type-pointer variable to type: const vector(2) double  vectorizing a pointer ref: *beam_dE_29(D)
cpp_routines/drift.cpp:51: note: created vect_pbeam_dE.86_347
cpp_routines/drift.cpp:51: note: add new stmt: vect_var_.87_350 = MEM[(const double *)vect_pbeam_dE.83_348];

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: _68 = _67 * eta0_39;

cpp_routines/drift.cpp:51: note: transform statement.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _67
cpp_routines/drift.cpp:51: note: def_stmt: _67 = *_66;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand eta0_39
cpp_routines/drift.cpp:51: note: def_stmt: eta0_39 = coeff_38 * eta_zero_20(D);

cpp_routines/drift.cpp:51: note: type of def: 2.
cpp_routines/drift.cpp:51: note: transform binary/unary operation.
cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: _67
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _67
cpp_routines/drift.cpp:51: note: def_stmt: _67 = *_66;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: def =  _67  def_stmt =  _67 = *_66;

cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: eta0_39
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand eta0_39
cpp_routines/drift.cpp:51: note: def_stmt: eta0_39 = coeff_38 * eta_zero_20(D);

cpp_routines/drift.cpp:51: note: type of def: 2.
cpp_routines/drift.cpp:51: note: def =  eta0_39  def_stmt =  eta0_39 = coeff_38 * eta_zero_20(D);

cpp_routines/drift.cpp:51: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:51: note: vectype: const vector(2) double
cpp_routines/drift.cpp:51: note: Create vector_inv.
cpp_routines/drift.cpp:51: note: created new init_stmt: vect_cst_.89_351 = {eta0_39, eta0_39};

cpp_routines/drift.cpp:51: note: add new stmt: vect_var_.88_352 = vect_var_.87_350 * vect_cst_.89_351;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: powmult_90 = _67 * _67;

cpp_routines/drift.cpp:51: note: transform statement.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _67
cpp_routines/drift.cpp:51: note: def_stmt: _67 = *_66;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _67
cpp_routines/drift.cpp:51: note: def_stmt: _67 = *_66;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: transform binary/unary operation.
cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: _67
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _67
cpp_routines/drift.cpp:51: note: def_stmt: _67 = *_66;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: def =  _67  def_stmt =  _67 = *_66;

cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: _67
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _67
cpp_routines/drift.cpp:51: note: def_stmt: _67 = *_66;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: def =  _67  def_stmt =  _67 = *_66;

cpp_routines/drift.cpp:51: note: add new stmt: vect_powmult.90_353 = vect_var_.87_350 * vect_var_.87_350;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: _71 = eta1_42 * powmult_90;

cpp_routines/drift.cpp:51: note: transform statement.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:51: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:51: note: type of def: 2.
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:51: note: vectype: const vector(2) double
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand powmult_90
cpp_routines/drift.cpp:51: note: def_stmt: powmult_90 = _67 * _67;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: transform binary/unary operation.
cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: eta1_42
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:51: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:51: note: type of def: 2.
cpp_routines/drift.cpp:51: note: def =  eta1_42  def_stmt =  eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:51: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:51: note: vectype: const vector(2) double
cpp_routines/drift.cpp:51: note: Create vector_inv.
cpp_routines/drift.cpp:51: note: created new init_stmt: vect_cst_.92_354 = {eta1_42, eta1_42};

cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: powmult_90
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand powmult_90
cpp_routines/drift.cpp:51: note: def_stmt: powmult_90 = _67 * _67;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: def =  powmult_90  def_stmt =  powmult_90 = _67 * _67;

cpp_routines/drift.cpp:51: note: add new stmt: vect_var_.91_355 = vect_cst_.92_354 * vect_powmult.90_353;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: _72 = 1.0e+0 - _68;

cpp_routines/drift.cpp:51: note: transform statement.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _68
cpp_routines/drift.cpp:51: note: def_stmt: _68 = _67 * eta0_39;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: transform binary/unary operation.
cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: 1.0e+0
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: Create vector_cst. nunits = 2
cpp_routines/drift.cpp:51: note: created new init_stmt: vect_cst_.94_356 = { 1.0e+0, 1.0e+0 };

cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: _68
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _68
cpp_routines/drift.cpp:51: note: def_stmt: _68 = _67 * eta0_39;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: def =  _68  def_stmt =  _68 = _67 * eta0_39;

cpp_routines/drift.cpp:51: note: add new stmt: vect_var_.93_357 = vect_cst_.94_356 - vect_var_.88_352;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: _73 = _72 - _71;

cpp_routines/drift.cpp:51: note: transform statement.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _72
cpp_routines/drift.cpp:51: note: def_stmt: _72 = 1.0e+0 - _68;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _71
cpp_routines/drift.cpp:51: note: def_stmt: _71 = eta1_42 * powmult_90;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: transform binary/unary operation.
cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: _72
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _72
cpp_routines/drift.cpp:51: note: def_stmt: _72 = 1.0e+0 - _68;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: def =  _72  def_stmt =  _72 = 1.0e+0 - _68;

cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: _71
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _71
cpp_routines/drift.cpp:51: note: def_stmt: _71 = eta1_42 * powmult_90;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: def =  _71  def_stmt =  _71 = eta1_42 * powmult_90;

cpp_routines/drift.cpp:51: note: add new stmt: vect_var_.95_358 = vect_var_.93_357 - vect_var_.91_355;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: _74 = 1.0e+0 / _73;

cpp_routines/drift.cpp:51: note: transform statement.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _73
cpp_routines/drift.cpp:51: note: def_stmt: _73 = _72 - _71;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: transform binary/unary operation.
cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: 1.0e+0
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: Create vector_cst. nunits = 2
cpp_routines/drift.cpp:51: note: created new init_stmt: vect_cst_.97_359 = { 1.0e+0, 1.0e+0 };

cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: _73
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _73
cpp_routines/drift.cpp:51: note: def_stmt: _73 = _72 - _71;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: def =  _73  def_stmt =  _73 = _72 - _71;

cpp_routines/drift.cpp:51: note: add new stmt: vect_var_.96_360 = vect_cst_.97_359 / vect_var_.95_358;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: _75 = _74 + -1.0e+0;

cpp_routines/drift.cpp:51: note: transform statement.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _74
cpp_routines/drift.cpp:51: note: def_stmt: _74 = 1.0e+0 / _73;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand -1.0e+0
cpp_routines/drift.cpp:51: note: transform binary/unary operation.
cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: _74
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _74
cpp_routines/drift.cpp:51: note: def_stmt: _74 = 1.0e+0 / _73;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: def =  _74  def_stmt =  _74 = 1.0e+0 / _73;

cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: -1.0e+0
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand -1.0e+0
cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: Create vector_cst. nunits = 2
cpp_routines/drift.cpp:51: note: created new init_stmt: vect_cst_.99_361 = { -1.0e+0, -1.0e+0 };

cpp_routines/drift.cpp:51: note: add new stmt: vect_var_.98_362 = vect_var_.96_360 + vect_cst_.99_361;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: _76 = _75 * T_12;

cpp_routines/drift.cpp:51: note: transform statement.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _75
cpp_routines/drift.cpp:51: note: def_stmt: _75 = _74 + -1.0e+0;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand T_12
cpp_routines/drift.cpp:51: note: def_stmt: T_12 = T0_10(D) * length_ratio_11(D);

cpp_routines/drift.cpp:51: note: type of def: 2.
cpp_routines/drift.cpp:51: note: transform binary/unary operation.
cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: _75
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _75
cpp_routines/drift.cpp:51: note: def_stmt: _75 = _74 + -1.0e+0;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: def =  _75  def_stmt =  _75 = _74 + -1.0e+0;

cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: T_12
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand T_12
cpp_routines/drift.cpp:51: note: def_stmt: T_12 = T0_10(D) * length_ratio_11(D);

cpp_routines/drift.cpp:51: note: type of def: 2.
cpp_routines/drift.cpp:51: note: def =  T_12  def_stmt =  T_12 = T0_10(D) * length_ratio_11(D);

cpp_routines/drift.cpp:51: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:51: note: vectype: vector(2) double
cpp_routines/drift.cpp:51: note: Create vector_inv.
cpp_routines/drift.cpp:51: note: created new init_stmt: vect_cst_.101_363 = {T_12, T_12};

cpp_routines/drift.cpp:51: note: add new stmt: vect_var_.100_364 = vect_var_.98_362 * vect_cst_.101_363;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: _77 = _76 + _65;

cpp_routines/drift.cpp:51: note: transform statement.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _76
cpp_routines/drift.cpp:51: note: def_stmt: _76 = _75 * T_12;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _65
cpp_routines/drift.cpp:51: note: def_stmt: _65 = *_64;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: transform binary/unary operation.
cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: _76
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _76
cpp_routines/drift.cpp:51: note: def_stmt: _76 = _75 * T_12;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: def =  _76  def_stmt =  _76 = _75 * T_12;

cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: _65
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _65
cpp_routines/drift.cpp:51: note: def_stmt: _65 = *_64;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: def =  _65  def_stmt =  _65 = *_64;

cpp_routines/drift.cpp:51: note: add new stmt: vect_var_.102_365 = vect_var_.100_364 + vect_var_.82_345;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: *_64 = _77;

cpp_routines/drift.cpp:51: note: transform statement.
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _77
cpp_routines/drift.cpp:51: note: def_stmt: _77 = _76 + _65;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: transform store. ncopies = 1
cpp_routines/drift.cpp:51: note: vect_get_vec_def_for_operand: _77
cpp_routines/drift.cpp:51: note: vect_is_simple_use: operand _77
cpp_routines/drift.cpp:51: note: def_stmt: _77 = _76 + _65;

cpp_routines/drift.cpp:51: note: type of def: 3.
cpp_routines/drift.cpp:51: note: def =  _77  def_stmt =  _77 = _76 + _65;

cpp_routines/drift.cpp:51: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *beam_dt_23(D)
cpp_routines/drift.cpp:51: note: created vect_pbeam_dt.106_367
cpp_routines/drift.cpp:51: note: add new stmt: MEM[(double *)vect_pbeam_dt.103_368] = vect_var_.102_365;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: i_79 = i_118 + 1;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: vect_pbeam_dt.78_344 = vect_pbeam_dt.78_343 + 16;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: vect_pbeam_dE.83_349 = vect_pbeam_dE.83_348 + 16;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: vect_pbeam_dt.103_369 = vect_pbeam_dt.103_368 + 16;

cpp_routines/drift.cpp:51: note: ------>vectorizing statement: if (n_macroparticles_22(D) > i_79)

loop at cpp_routines/drift.cpp:53: if (ivtmp_371 < bnd.75_312)

cpp_routines/drift.cpp:51: note: LOOP VECTORIZED.
Analyzing loop at cpp_routines/drift.cpp:55

cpp_routines/drift.cpp:55: note: ===== analyze_loop_nest =====
cpp_routines/drift.cpp:55: note: === vect_analyze_loop_form ===
cpp_routines/drift.cpp:55: note: === get_loop_niters ===
cpp_routines/drift.cpp:55: note: ==> get_loop_niters:(unsigned int) n_macroparticles_22(D)
cpp_routines/drift.cpp:55: note: Symbolic number of iterations is (unsigned int) n_macroparticles_22(D)
cpp_routines/drift.cpp:55: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:55: note: vectype: const vector(2) double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: === vect_analyze_scalar_cycles ===
cpp_routines/drift.cpp:55: note: Analyze phi: i_119 = PHI <i_104(25), 0(22)>

cpp_routines/drift.cpp:55: note: Access function of PHI: {0, +, 1}_1
cpp_routines/drift.cpp:55: note: step: 1,  init: 0
cpp_routines/drift.cpp:55: note: Detected induction.
cpp_routines/drift.cpp:55: note: Analyze phi: .MEM_123 = PHI <.MEM_103(25), .MEM_13(D)(22)>

cpp_routines/drift.cpp:55: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _80
cpp_routines/drift.cpp:55: note: def_stmt: _80 = (long unsigned int) i_119;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand i_119
cpp_routines/drift.cpp:55: note: def_stmt: i_119 = PHI <i_104(25), 0(22)>

cpp_routines/drift.cpp:55: note: type of def: 4.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:55: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand eta2_46
cpp_routines/drift.cpp:55: note: def_stmt: eta2_46 = eta_two_43(D) * powmult_89;

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _100
cpp_routines/drift.cpp:55: note: def_stmt: _100 = _99 + -1.0e+0;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: === vect_mark_stmts_to_be_vectorized ===
cpp_routines/drift.cpp:55: note: init: phi relevant? i_119 = PHI <i_104(25), 0(22)>

cpp_routines/drift.cpp:55: note: init: phi relevant? .MEM_123 = PHI <.MEM_103(25), .MEM_13(D)(22)>

cpp_routines/drift.cpp:55: note: init: stmt relevant? _80 = (long unsigned int) i_119;

cpp_routines/drift.cpp:55: note: init: stmt relevant? _81 = _80 * 8;

cpp_routines/drift.cpp:55: note: init: stmt relevant? _82 = beam_dt_23(D) + _81;

cpp_routines/drift.cpp:55: note: init: stmt relevant? _83 = *_82;

cpp_routines/drift.cpp:55: note: init: stmt relevant? _85 = beam_dE_29(D) + _81;

cpp_routines/drift.cpp:55: note: init: stmt relevant? _86 = *_85;

cpp_routines/drift.cpp:55: note: init: stmt relevant? _87 = _86 * eta0_39;

cpp_routines/drift.cpp:55: note: init: stmt relevant? powmult_95 = _86 * _86;

cpp_routines/drift.cpp:55: note: init: stmt relevant? _92 = eta1_42 * powmult_95;

cpp_routines/drift.cpp:55: note: init: stmt relevant? _88 = _87 + _92;

cpp_routines/drift.cpp:55: note: init: stmt relevant? powmult_106 = _86 * powmult_95;

cpp_routines/drift.cpp:55: note: init: stmt relevant? _96 = eta2_46 * powmult_106;

cpp_routines/drift.cpp:55: note: init: stmt relevant? _97 = 1.0e+0 - _88;

cpp_routines/drift.cpp:55: note: init: stmt relevant? _98 = _97 - _96;

cpp_routines/drift.cpp:55: note: init: stmt relevant? _99 = 1.0e+0 / _98;

cpp_routines/drift.cpp:55: note: init: stmt relevant? _100 = _99 + -1.0e+0;

cpp_routines/drift.cpp:55: note: init: stmt relevant? _101 = _100 * T_12;

cpp_routines/drift.cpp:55: note: init: stmt relevant? _102 = _101 + _83;

cpp_routines/drift.cpp:55: note: init: stmt relevant? *_82 = _102;

cpp_routines/drift.cpp:55: note: vec_stmt_relevant_p: stmt has vdefs.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: init: stmt relevant? i_104 = i_119 + 1;

cpp_routines/drift.cpp:55: note: init: stmt relevant? if (n_macroparticles_22(D) > i_104)

cpp_routines/drift.cpp:55: note: worklist: examine stmt: *_82 = _102;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _102
cpp_routines/drift.cpp:55: note: def_stmt: _102 = _101 + _83;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: worklist: examine stmt: _102 = _101 + _83;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _101
cpp_routines/drift.cpp:55: note: def_stmt: _101 = _100 * T_12;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _83
cpp_routines/drift.cpp:55: note: def_stmt: _83 = *_82;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: worklist: examine stmt: _83 = *_82;

cpp_routines/drift.cpp:55: note: worklist: examine stmt: _101 = _100 * T_12;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _100
cpp_routines/drift.cpp:55: note: def_stmt: _100 = _99 + -1.0e+0;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand T_12
cpp_routines/drift.cpp:55: note: def_stmt: T_12 = T0_10(D) * length_ratio_11(D);

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: def_stmt is out of loop.
cpp_routines/drift.cpp:55: note: worklist: examine stmt: _100 = _99 + -1.0e+0;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _99
cpp_routines/drift.cpp:55: note: def_stmt: _99 = 1.0e+0 / _98;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: worklist: examine stmt: _99 = 1.0e+0 / _98;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _98
cpp_routines/drift.cpp:55: note: def_stmt: _98 = _97 - _96;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: worklist: examine stmt: _98 = _97 - _96;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _97
cpp_routines/drift.cpp:55: note: def_stmt: _97 = 1.0e+0 - _88;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _96
cpp_routines/drift.cpp:55: note: def_stmt: _96 = eta2_46 * powmult_106;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: worklist: examine stmt: _96 = eta2_46 * powmult_106;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand eta2_46
cpp_routines/drift.cpp:55: note: def_stmt: eta2_46 = eta_two_43(D) * powmult_89;

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: def_stmt is out of loop.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand powmult_106
cpp_routines/drift.cpp:55: note: def_stmt: powmult_106 = _86 * powmult_95;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: worklist: examine stmt: powmult_106 = _86 * powmult_95;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand powmult_95
cpp_routines/drift.cpp:55: note: def_stmt: powmult_95 = _86 * _86;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: worklist: examine stmt: powmult_95 = _86 * _86;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: already marked relevant/live.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: already marked relevant/live.
cpp_routines/drift.cpp:55: note: worklist: examine stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: worklist: examine stmt: _97 = 1.0e+0 - _88;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _88
cpp_routines/drift.cpp:55: note: def_stmt: _88 = _87 + _92;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: worklist: examine stmt: _88 = _87 + _92;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _87
cpp_routines/drift.cpp:55: note: def_stmt: _87 = _86 * eta0_39;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _92
cpp_routines/drift.cpp:55: note: def_stmt: _92 = eta1_42 * powmult_95;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: worklist: examine stmt: _92 = eta1_42 * powmult_95;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:55: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: def_stmt is out of loop.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand powmult_95
cpp_routines/drift.cpp:55: note: def_stmt: powmult_95 = _86 * _86;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: already marked relevant/live.
cpp_routines/drift.cpp:55: note: worklist: examine stmt: _87 = _86 * eta0_39;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: mark relevant 4, live 0.
cpp_routines/drift.cpp:55: note: already marked relevant/live.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand eta0_39
cpp_routines/drift.cpp:55: note: def_stmt: eta0_39 = coeff_38 * eta_zero_20(D);

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: def_stmt is out of loop.
cpp_routines/drift.cpp:55: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:55: note: dependence distance  = 0.
cpp_routines/drift.cpp:55: note: dependence distance == 0 between *_82 and *_82
cpp_routines/drift.cpp:55: note: === vect_determine_vectorization_factor ===
cpp_routines/drift.cpp:55: note: ==> examining phi: i_119 = PHI <i_104(25), 0(22)>

cpp_routines/drift.cpp:55: note: ==> examining phi: .MEM_123 = PHI <.MEM_103(25), .MEM_13(D)(22)>

cpp_routines/drift.cpp:55: note: ==> examining statement: _80 = (long unsigned int) i_119;

cpp_routines/drift.cpp:55: note: skip.
cpp_routines/drift.cpp:55: note: ==> examining statement: _81 = _80 * 8;

cpp_routines/drift.cpp:55: note: skip.
cpp_routines/drift.cpp:55: note: ==> examining statement: _82 = beam_dt_23(D) + _81;

cpp_routines/drift.cpp:55: note: skip.
cpp_routines/drift.cpp:55: note: ==> examining statement: _83 = *_82;

cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: nunits = 2
cpp_routines/drift.cpp:55: note: ==> examining statement: _85 = beam_dE_29(D) + _81;

cpp_routines/drift.cpp:55: note: skip.
cpp_routines/drift.cpp:55: note: ==> examining statement: _86 = *_85;

cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: nunits = 2
cpp_routines/drift.cpp:55: note: ==> examining statement: _87 = _86 * eta0_39;

cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: nunits = 2
cpp_routines/drift.cpp:55: note: ==> examining statement: powmult_95 = _86 * _86;

cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: nunits = 2
cpp_routines/drift.cpp:55: note: ==> examining statement: _92 = eta1_42 * powmult_95;

cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: nunits = 2
cpp_routines/drift.cpp:55: note: ==> examining statement: _88 = _87 + _92;

cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: nunits = 2
cpp_routines/drift.cpp:55: note: ==> examining statement: powmult_106 = _86 * powmult_95;

cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: nunits = 2
cpp_routines/drift.cpp:55: note: ==> examining statement: _96 = eta2_46 * powmult_106;

cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: nunits = 2
cpp_routines/drift.cpp:55: note: ==> examining statement: _97 = 1.0e+0 - _88;

cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: nunits = 2
cpp_routines/drift.cpp:55: note: ==> examining statement: _98 = _97 - _96;

cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: nunits = 2
cpp_routines/drift.cpp:55: note: ==> examining statement: _99 = 1.0e+0 / _98;

cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: nunits = 2
cpp_routines/drift.cpp:55: note: ==> examining statement: _100 = _99 + -1.0e+0;

cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: nunits = 2
cpp_routines/drift.cpp:55: note: ==> examining statement: _101 = _100 * T_12;

cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: nunits = 2
cpp_routines/drift.cpp:55: note: ==> examining statement: _102 = _101 + _83;

cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: nunits = 2
cpp_routines/drift.cpp:55: note: ==> examining statement: *_82 = _102;

cpp_routines/drift.cpp:55: note: get vectype for scalar type:  double
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: nunits = 2
cpp_routines/drift.cpp:55: note: ==> examining statement: i_104 = i_119 + 1;

cpp_routines/drift.cpp:55: note: skip.
cpp_routines/drift.cpp:55: note: ==> examining statement: if (n_macroparticles_22(D) > i_104)

cpp_routines/drift.cpp:55: note: skip.
cpp_routines/drift.cpp:55: note: vectorization factor = 2
cpp_routines/drift.cpp:55: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:55: note: dependence distance  = 0.
cpp_routines/drift.cpp:55: note: accesses have the same alignment.dependence distance modulo vf == 0 between *_82 and *_82
cpp_routines/drift.cpp:55: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:55: note: can't force alignment of ref: *_82
cpp_routines/drift.cpp:55: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:55: note: can't force alignment of ref: *_85
cpp_routines/drift.cpp:55: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:55: note: can't force alignment of ref: *_82
cpp_routines/drift.cpp:55: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:55: note: === vect_prune_runtime_alias_test_list ===
cpp_routines/drift.cpp:55: note: === vect_enhance_data_refs_alignment ===
cpp_routines/drift.cpp:55: note: Unknown misalignment, is_packed = 0
cpp_routines/drift.cpp:55: note: Unknown misalignment, is_packed = 0
cpp_routines/drift.cpp:55: note: Unknown misalignment, is_packed = 0
cpp_routines/drift.cpp:55: note: vect_can_advance_ivs_p:
cpp_routines/drift.cpp:55: note: Analyze phi: i_119 = PHI <i_104(25), 0(22)>

cpp_routines/drift.cpp:55: note: Access function of PHI: {0, +, 1}_1
cpp_routines/drift.cpp:55: note: Analyze phi: .MEM_123 = PHI <.MEM_103(25), .MEM_13(D)(22)>

cpp_routines/drift.cpp:55: note: virtual phi. skip.
cpp_routines/drift.cpp:55: note: vect_model_load_cost: unaligned supported by hardware.
cpp_routines/drift.cpp:55: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
cpp_routines/drift.cpp:55: note: vect_model_store_cost: unaligned supported by hardware.
cpp_routines/drift.cpp:55: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
cpp_routines/drift.cpp:55: note: Setting misalignment to -1.
cpp_routines/drift.cpp:55: note: Setting misalignment to -1.
cpp_routines/drift.cpp:55: note: Alignment of access forced using peeling.
cpp_routines/drift.cpp:55: note: Peeling for alignment will be applied.
cpp_routines/drift.cpp:55: note: Vectorizing an unaligned access.
cpp_routines/drift.cpp:55: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:55: note: === vect_make_slp_decision ===
cpp_routines/drift.cpp:55: note: === vect_detect_hybrid_slp ===
cpp_routines/drift.cpp:55: note: === vect_analyze_loop_operations ===
cpp_routines/drift.cpp:55: note: examining phi: i_119 = PHI <i_104(25), 0(22)>

cpp_routines/drift.cpp:55: note: examining phi: .MEM_123 = PHI <.MEM_103(25), .MEM_13(D)(22)>

cpp_routines/drift.cpp:55: note: ==> examining statement: _80 = (long unsigned int) i_119;

cpp_routines/drift.cpp:55: note: irrelevant.
cpp_routines/drift.cpp:55: note: ==> examining statement: _81 = _80 * 8;

cpp_routines/drift.cpp:55: note: irrelevant.
cpp_routines/drift.cpp:55: note: ==> examining statement: _82 = beam_dt_23(D) + _81;

cpp_routines/drift.cpp:55: note: irrelevant.
cpp_routines/drift.cpp:55: note: ==> examining statement: _83 = *_82;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand *_82
cpp_routines/drift.cpp:55: note: not ssa-name.
cpp_routines/drift.cpp:55: note: use not simple.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand *_82
cpp_routines/drift.cpp:55: note: not ssa-name.
cpp_routines/drift.cpp:55: note: use not simple.
cpp_routines/drift.cpp:55: note: vect_model_load_cost: aligned.
cpp_routines/drift.cpp:55: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:55: note: ==> examining statement: _85 = beam_dE_29(D) + _81;

cpp_routines/drift.cpp:55: note: irrelevant.
cpp_routines/drift.cpp:55: note: ==> examining statement: _86 = *_85;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand *_85
cpp_routines/drift.cpp:55: note: not ssa-name.
cpp_routines/drift.cpp:55: note: use not simple.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand *_85
cpp_routines/drift.cpp:55: note: not ssa-name.
cpp_routines/drift.cpp:55: note: use not simple.
cpp_routines/drift.cpp:55: note: vect_model_load_cost: unaligned supported by hardware.
cpp_routines/drift.cpp:55: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
cpp_routines/drift.cpp:55: note: ==> examining statement: _87 = _86 * eta0_39;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand eta0_39
cpp_routines/drift.cpp:55: note: def_stmt: eta0_39 = coeff_38 * eta_zero_20(D);

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: === vectorizable_operation ===
cpp_routines/drift.cpp:55: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:55: note: ==> examining statement: powmult_95 = _86 * _86;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: === vectorizable_operation ===
cpp_routines/drift.cpp:55: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:55: note: ==> examining statement: _92 = eta1_42 * powmult_95;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:55: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:55: note: vectype: const vector(2) double
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand powmult_95
cpp_routines/drift.cpp:55: note: def_stmt: powmult_95 = _86 * _86;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: === vectorizable_operation ===
cpp_routines/drift.cpp:55: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:55: note: ==> examining statement: _88 = _87 + _92;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _87
cpp_routines/drift.cpp:55: note: def_stmt: _87 = _86 * eta0_39;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _92
cpp_routines/drift.cpp:55: note: def_stmt: _92 = eta1_42 * powmult_95;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: === vectorizable_operation ===
cpp_routines/drift.cpp:55: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:55: note: ==> examining statement: powmult_106 = _86 * powmult_95;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand powmult_95
cpp_routines/drift.cpp:55: note: def_stmt: powmult_95 = _86 * _86;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: === vectorizable_operation ===
cpp_routines/drift.cpp:55: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:55: note: ==> examining statement: _96 = eta2_46 * powmult_106;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand eta2_46
cpp_routines/drift.cpp:55: note: def_stmt: eta2_46 = eta_two_43(D) * powmult_89;

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:55: note: vectype: const vector(2) double
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand powmult_106
cpp_routines/drift.cpp:55: note: def_stmt: powmult_106 = _86 * powmult_95;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: === vectorizable_operation ===
cpp_routines/drift.cpp:55: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:55: note: ==> examining statement: _97 = 1.0e+0 - _88;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _88
cpp_routines/drift.cpp:55: note: def_stmt: _88 = _87 + _92;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: === vectorizable_operation ===
cpp_routines/drift.cpp:55: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:55: note: ==> examining statement: _98 = _97 - _96;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _97
cpp_routines/drift.cpp:55: note: def_stmt: _97 = 1.0e+0 - _88;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _96
cpp_routines/drift.cpp:55: note: def_stmt: _96 = eta2_46 * powmult_106;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: === vectorizable_operation ===
cpp_routines/drift.cpp:55: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:55: note: ==> examining statement: _99 = 1.0e+0 / _98;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _98
cpp_routines/drift.cpp:55: note: def_stmt: _98 = _97 - _96;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: === vectorizable_operation ===
cpp_routines/drift.cpp:55: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:55: note: ==> examining statement: _100 = _99 + -1.0e+0;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _99
cpp_routines/drift.cpp:55: note: def_stmt: _99 = 1.0e+0 / _98;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand -1.0e+0
cpp_routines/drift.cpp:55: note: === vectorizable_operation ===
cpp_routines/drift.cpp:55: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:55: note: ==> examining statement: _101 = _100 * T_12;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _100
cpp_routines/drift.cpp:55: note: def_stmt: _100 = _99 + -1.0e+0;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand T_12
cpp_routines/drift.cpp:55: note: def_stmt: T_12 = T0_10(D) * length_ratio_11(D);

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: === vectorizable_operation ===
cpp_routines/drift.cpp:55: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
cpp_routines/drift.cpp:55: note: ==> examining statement: _102 = _101 + _83;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _101
cpp_routines/drift.cpp:55: note: def_stmt: _101 = _100 * T_12;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _83
cpp_routines/drift.cpp:55: note: def_stmt: _83 = *_82;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: === vectorizable_operation ===
cpp_routines/drift.cpp:55: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:55: note: ==> examining statement: *_82 = _102;

cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _102
cpp_routines/drift.cpp:55: note: def_stmt: _102 = _101 + _83;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_model_store_cost: aligned.
cpp_routines/drift.cpp:55: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
cpp_routines/drift.cpp:55: note: ==> examining statement: i_104 = i_119 + 1;

cpp_routines/drift.cpp:55: note: irrelevant.
cpp_routines/drift.cpp:55: note: ==> examining statement: if (n_macroparticles_22(D) > i_104)

cpp_routines/drift.cpp:55: note: irrelevant.
cpp_routines/drift.cpp:55: note: === vect_update_slp_costs_according_to_vf ===cost model: prologue peel iters set to vf/2.cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
cpp_routines/drift.cpp:55: note: Cost model analysis: 
  Vector inside of loop cost: 16
  Vector prologue cost: 30
  Vector epilogue cost: 15
  Scalar iteration cost: 15
  Scalar outside cost: 7
  Vector outside cost: 45
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 4

cpp_routines/drift.cpp:55: note:   Runtime profitability threshold = 3

cpp_routines/drift.cpp:55: note:   Static estimate profitability threshold = 3

cpp_routines/drift.cpp:55: note: epilog loop required.
cpp_routines/drift.cpp:55: note: vect_can_advance_ivs_p:
cpp_routines/drift.cpp:55: note: Analyze phi: i_119 = PHI <i_104(25), 0(22)>

cpp_routines/drift.cpp:55: note: Access function of PHI: {0, +, 1}_1
cpp_routines/drift.cpp:55: note: Analyze phi: .MEM_123 = PHI <.MEM_103(25), .MEM_13(D)(22)>

cpp_routines/drift.cpp:55: note: virtual phi. skip.

Vectorizing loop at cpp_routines/drift.cpp:55

cpp_routines/drift.cpp:55: note: === vec_transform_loop ===
cpp_routines/drift.cpp:55: note: Profitability threshold is 3 loop iterations.
cpp_routines/drift.cpp:55: note: === vect_do_peeling_for_alignment ===
cpp_routines/drift.cpp:55: note: created vect_pbeam_dt.110_373
cpp_routines/drift.cpp:55: note: niters for prolog loop: MIN_EXPR <(unsigned int) -(((unsigned long) vect_pbeam_dt.110_373 & 15) >> 3) & 1, niters.107_372>
loop at cpp_routines/drift.cpp:58: if (ivtmp_413 < prologue_after_cost_adjust.112_405)
Setting upper bound of nb iterations for prologue loop to 2

cpp_routines/drift.cpp:55: note: === vect_update_inits_of_dr ===
cpp_routines/drift.cpp:55: note: === vect_do_peeling_for_loop_bound ===
cpp_routines/drift.cpp:55: note: vect_update_ivs_after_vectorizer: phi: i_119 = PHI <i_104(25), i_406(97)>

cpp_routines/drift.cpp:55: note: vect_update_ivs_after_vectorizer: phi: .MEM_123 = PHI <.MEM_103(25), .MEM_408(97)>

cpp_routines/drift.cpp:55: note: virtual phi. skip.Setting upper bound of nb iterations for epilogue loop to 0

cpp_routines/drift.cpp:55: note: ------>vectorizing phi: i_119 = PHI <i_104(25), i_406(101)>

cpp_routines/drift.cpp:55: note: ------>vectorizing phi: .MEM_123 = PHI <.MEM_103(25), .MEM_408(101)>

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: _80 = (long unsigned int) i_119;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: _81 = _80 * 8;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: _82 = beam_dt_23(D) + _81;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: _83 = *_82;

cpp_routines/drift.cpp:55: note: transform statement.
cpp_routines/drift.cpp:55: note: transform load. ncopies = 1
cpp_routines/drift.cpp:55: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *beam_dt_23(D)
cpp_routines/drift.cpp:55: note: created vect_pbeam_dt.121_450
cpp_routines/drift.cpp:55: note: add new stmt: vect_var_.122_453 = MEM[(double *)vect_pbeam_dt.118_451];

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: _85 = beam_dE_29(D) + _81;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: _86 = *_85;

cpp_routines/drift.cpp:55: note: transform statement.
cpp_routines/drift.cpp:55: note: transform load. ncopies = 1
cpp_routines/drift.cpp:55: note: create vector_type-pointer variable to type: const vector(2) double  vectorizing a pointer ref: *beam_dE_29(D)
cpp_routines/drift.cpp:55: note: created vect_pbeam_dE.126_455
cpp_routines/drift.cpp:55: note: add new stmt: vect_var_.127_458 = MEM[(const double *)vect_pbeam_dE.123_456];

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: _87 = _86 * eta0_39;

cpp_routines/drift.cpp:55: note: transform statement.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand eta0_39
cpp_routines/drift.cpp:55: note: def_stmt: eta0_39 = coeff_38 * eta_zero_20(D);

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: transform binary/unary operation.
cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: _86
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  _86  def_stmt =  _86 = *_85;

cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: eta0_39
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand eta0_39
cpp_routines/drift.cpp:55: note: def_stmt: eta0_39 = coeff_38 * eta_zero_20(D);

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: def =  eta0_39  def_stmt =  eta0_39 = coeff_38 * eta_zero_20(D);

cpp_routines/drift.cpp:55: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:55: note: vectype: const vector(2) double
cpp_routines/drift.cpp:55: note: Create vector_inv.
cpp_routines/drift.cpp:55: note: created new init_stmt: vect_cst_.129_459 = {eta0_39, eta0_39};

cpp_routines/drift.cpp:55: note: add new stmt: vect_var_.128_460 = vect_var_.127_458 * vect_cst_.129_459;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: powmult_95 = _86 * _86;

cpp_routines/drift.cpp:55: note: transform statement.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: transform binary/unary operation.
cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: _86
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  _86  def_stmt =  _86 = *_85;

cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: _86
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  _86  def_stmt =  _86 = *_85;

cpp_routines/drift.cpp:55: note: add new stmt: vect_powmult.130_461 = vect_var_.127_458 * vect_var_.127_458;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: _92 = eta1_42 * powmult_95;

cpp_routines/drift.cpp:55: note: transform statement.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:55: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:55: note: vectype: const vector(2) double
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand powmult_95
cpp_routines/drift.cpp:55: note: def_stmt: powmult_95 = _86 * _86;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: transform binary/unary operation.
cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: eta1_42
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:55: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: def =  eta1_42  def_stmt =  eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:55: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:55: note: vectype: const vector(2) double
cpp_routines/drift.cpp:55: note: Create vector_inv.
cpp_routines/drift.cpp:55: note: created new init_stmt: vect_cst_.132_462 = {eta1_42, eta1_42};

cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: powmult_95
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand powmult_95
cpp_routines/drift.cpp:55: note: def_stmt: powmult_95 = _86 * _86;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  powmult_95  def_stmt =  powmult_95 = _86 * _86;

cpp_routines/drift.cpp:55: note: add new stmt: vect_var_.131_463 = vect_cst_.132_462 * vect_powmult.130_461;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: _88 = _87 + _92;

cpp_routines/drift.cpp:55: note: transform statement.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _87
cpp_routines/drift.cpp:55: note: def_stmt: _87 = _86 * eta0_39;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _92
cpp_routines/drift.cpp:55: note: def_stmt: _92 = eta1_42 * powmult_95;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: transform binary/unary operation.
cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: _87
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _87
cpp_routines/drift.cpp:55: note: def_stmt: _87 = _86 * eta0_39;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  _87  def_stmt =  _87 = _86 * eta0_39;

cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: _92
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _92
cpp_routines/drift.cpp:55: note: def_stmt: _92 = eta1_42 * powmult_95;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  _92  def_stmt =  _92 = eta1_42 * powmult_95;

cpp_routines/drift.cpp:55: note: add new stmt: vect_var_.133_464 = vect_var_.128_460 + vect_var_.131_463;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: powmult_106 = _86 * powmult_95;

cpp_routines/drift.cpp:55: note: transform statement.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand powmult_95
cpp_routines/drift.cpp:55: note: def_stmt: powmult_95 = _86 * _86;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: transform binary/unary operation.
cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: _86
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:55: note: def_stmt: _86 = *_85;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  _86  def_stmt =  _86 = *_85;

cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: powmult_95
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand powmult_95
cpp_routines/drift.cpp:55: note: def_stmt: powmult_95 = _86 * _86;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  powmult_95  def_stmt =  powmult_95 = _86 * _86;

cpp_routines/drift.cpp:55: note: add new stmt: vect_powmult.134_465 = vect_var_.127_458 * vect_powmult.130_461;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: _96 = eta2_46 * powmult_106;

cpp_routines/drift.cpp:55: note: transform statement.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand eta2_46
cpp_routines/drift.cpp:55: note: def_stmt: eta2_46 = eta_two_43(D) * powmult_89;

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:55: note: vectype: const vector(2) double
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand powmult_106
cpp_routines/drift.cpp:55: note: def_stmt: powmult_106 = _86 * powmult_95;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: transform binary/unary operation.
cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: eta2_46
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand eta2_46
cpp_routines/drift.cpp:55: note: def_stmt: eta2_46 = eta_two_43(D) * powmult_89;

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: def =  eta2_46  def_stmt =  eta2_46 = eta_two_43(D) * powmult_89;

cpp_routines/drift.cpp:55: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:55: note: vectype: const vector(2) double
cpp_routines/drift.cpp:55: note: Create vector_inv.
cpp_routines/drift.cpp:55: note: created new init_stmt: vect_cst_.136_466 = {eta2_46, eta2_46};

cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: powmult_106
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand powmult_106
cpp_routines/drift.cpp:55: note: def_stmt: powmult_106 = _86 * powmult_95;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  powmult_106  def_stmt =  powmult_106 = _86 * powmult_95;

cpp_routines/drift.cpp:55: note: add new stmt: vect_var_.135_467 = vect_cst_.136_466 * vect_powmult.134_465;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: _97 = 1.0e+0 - _88;

cpp_routines/drift.cpp:55: note: transform statement.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _88
cpp_routines/drift.cpp:55: note: def_stmt: _88 = _87 + _92;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: transform binary/unary operation.
cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: 1.0e+0
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: Create vector_cst. nunits = 2
cpp_routines/drift.cpp:55: note: created new init_stmt: vect_cst_.138_468 = { 1.0e+0, 1.0e+0 };

cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: _88
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _88
cpp_routines/drift.cpp:55: note: def_stmt: _88 = _87 + _92;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  _88  def_stmt =  _88 = _87 + _92;

cpp_routines/drift.cpp:55: note: add new stmt: vect_var_.137_469 = vect_cst_.138_468 - vect_var_.133_464;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: _98 = _97 - _96;

cpp_routines/drift.cpp:55: note: transform statement.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _97
cpp_routines/drift.cpp:55: note: def_stmt: _97 = 1.0e+0 - _88;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _96
cpp_routines/drift.cpp:55: note: def_stmt: _96 = eta2_46 * powmult_106;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: transform binary/unary operation.
cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: _97
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _97
cpp_routines/drift.cpp:55: note: def_stmt: _97 = 1.0e+0 - _88;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  _97  def_stmt =  _97 = 1.0e+0 - _88;

cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: _96
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _96
cpp_routines/drift.cpp:55: note: def_stmt: _96 = eta2_46 * powmult_106;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  _96  def_stmt =  _96 = eta2_46 * powmult_106;

cpp_routines/drift.cpp:55: note: add new stmt: vect_var_.139_470 = vect_var_.137_469 - vect_var_.135_467;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: _99 = 1.0e+0 / _98;

cpp_routines/drift.cpp:55: note: transform statement.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _98
cpp_routines/drift.cpp:55: note: def_stmt: _98 = _97 - _96;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: transform binary/unary operation.
cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: 1.0e+0
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand 1.0e+0
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: Create vector_cst. nunits = 2
cpp_routines/drift.cpp:55: note: created new init_stmt: vect_cst_.141_471 = { 1.0e+0, 1.0e+0 };

cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: _98
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _98
cpp_routines/drift.cpp:55: note: def_stmt: _98 = _97 - _96;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  _98  def_stmt =  _98 = _97 - _96;

cpp_routines/drift.cpp:55: note: add new stmt: vect_var_.140_472 = vect_cst_.141_471 / vect_var_.139_470;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: _100 = _99 + -1.0e+0;

cpp_routines/drift.cpp:55: note: transform statement.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _99
cpp_routines/drift.cpp:55: note: def_stmt: _99 = 1.0e+0 / _98;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand -1.0e+0
cpp_routines/drift.cpp:55: note: transform binary/unary operation.
cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: _99
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _99
cpp_routines/drift.cpp:55: note: def_stmt: _99 = 1.0e+0 / _98;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  _99  def_stmt =  _99 = 1.0e+0 / _98;

cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: -1.0e+0
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand -1.0e+0
cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: Create vector_cst. nunits = 2
cpp_routines/drift.cpp:55: note: created new init_stmt: vect_cst_.143_473 = { -1.0e+0, -1.0e+0 };

cpp_routines/drift.cpp:55: note: add new stmt: vect_var_.142_474 = vect_var_.140_472 + vect_cst_.143_473;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: _101 = _100 * T_12;

cpp_routines/drift.cpp:55: note: transform statement.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _100
cpp_routines/drift.cpp:55: note: def_stmt: _100 = _99 + -1.0e+0;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand T_12
cpp_routines/drift.cpp:55: note: def_stmt: T_12 = T0_10(D) * length_ratio_11(D);

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: transform binary/unary operation.
cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: _100
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _100
cpp_routines/drift.cpp:55: note: def_stmt: _100 = _99 + -1.0e+0;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  _100  def_stmt =  _100 = _99 + -1.0e+0;

cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: T_12
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand T_12
cpp_routines/drift.cpp:55: note: def_stmt: T_12 = T0_10(D) * length_ratio_11(D);

cpp_routines/drift.cpp:55: note: type of def: 2.
cpp_routines/drift.cpp:55: note: def =  T_12  def_stmt =  T_12 = T0_10(D) * length_ratio_11(D);

cpp_routines/drift.cpp:55: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:55: note: vectype: vector(2) double
cpp_routines/drift.cpp:55: note: Create vector_inv.
cpp_routines/drift.cpp:55: note: created new init_stmt: vect_cst_.145_475 = {T_12, T_12};

cpp_routines/drift.cpp:55: note: add new stmt: vect_var_.144_476 = vect_var_.142_474 * vect_cst_.145_475;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: _102 = _101 + _83;

cpp_routines/drift.cpp:55: note: transform statement.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _101
cpp_routines/drift.cpp:55: note: def_stmt: _101 = _100 * T_12;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _83
cpp_routines/drift.cpp:55: note: def_stmt: _83 = *_82;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: transform binary/unary operation.
cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: _101
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _101
cpp_routines/drift.cpp:55: note: def_stmt: _101 = _100 * T_12;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  _101  def_stmt =  _101 = _100 * T_12;

cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: _83
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _83
cpp_routines/drift.cpp:55: note: def_stmt: _83 = *_82;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  _83  def_stmt =  _83 = *_82;

cpp_routines/drift.cpp:55: note: add new stmt: vect_var_.146_477 = vect_var_.144_476 + vect_var_.122_453;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: *_82 = _102;

cpp_routines/drift.cpp:55: note: transform statement.
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _102
cpp_routines/drift.cpp:55: note: def_stmt: _102 = _101 + _83;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: transform store. ncopies = 1
cpp_routines/drift.cpp:55: note: vect_get_vec_def_for_operand: _102
cpp_routines/drift.cpp:55: note: vect_is_simple_use: operand _102
cpp_routines/drift.cpp:55: note: def_stmt: _102 = _101 + _83;

cpp_routines/drift.cpp:55: note: type of def: 3.
cpp_routines/drift.cpp:55: note: def =  _102  def_stmt =  _102 = _101 + _83;

cpp_routines/drift.cpp:55: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *beam_dt_23(D)
cpp_routines/drift.cpp:55: note: created vect_pbeam_dt.150_479
cpp_routines/drift.cpp:55: note: add new stmt: MEM[(double *)vect_pbeam_dt.147_480] = vect_var_.146_477;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: i_104 = i_119 + 1;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: vect_pbeam_dt.118_452 = vect_pbeam_dt.118_451 + 16;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: vect_pbeam_dE.123_457 = vect_pbeam_dE.123_456 + 16;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: vect_pbeam_dt.147_481 = vect_pbeam_dt.147_480 + 16;

cpp_routines/drift.cpp:55: note: ------>vectorizing statement: if (n_macroparticles_22(D) > i_104)

loop at cpp_routines/drift.cpp:58: if (ivtmp_483 < bnd.115_417)

cpp_routines/drift.cpp:55: note: LOOP VECTORIZED.
cpp_routines/drift.cpp:20: note: vectorized 4 loops in function.

cpp_routines/drift.cpp:30: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:30: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:30: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:34: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:34: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:34: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:61: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:61: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:61: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:37: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:37: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:37: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:37: note: vectype: vector(2) double
cpp_routines/drift.cpp:37: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:37: note: vectype: const vector(2) double
cpp_routines/drift.cpp:37: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:37: note: vectype: vector(2) double
cpp_routines/drift.cpp:37: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand _119
cpp_routines/drift.cpp:37: note: def_stmt: _119 = (long unsigned int) i_410;

cpp_routines/drift.cpp:37: note: type of def: 3.
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand i_410
cpp_routines/drift.cpp:37: note: def_stmt: i_410 = PHI <0(7)>

cpp_routines/drift.cpp:37: note: type of def: 2.
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand _334
cpp_routines/drift.cpp:37: note: def_stmt: _334 = *_338;

cpp_routines/drift.cpp:37: note: type of def: 3.
cpp_routines/drift.cpp:37: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:37: note: determined dependence between *_486 and *_486
cpp_routines/drift.cpp:37: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:37: note: can't force alignment of ref: *_486
cpp_routines/drift.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:37: note: can't force alignment of ref: *_338
cpp_routines/drift.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:37: note: can't force alignment of ref: *_486
cpp_routines/drift.cpp:37: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:37: note: not consecutive access _337 = *_486;

cpp_routines/drift.cpp:37: note: not consecutive access _334 = *_338;

cpp_routines/drift.cpp:37: note: not consecutive access *_486 = _306;

cpp_routines/drift.cpp:37: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:37: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:37: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:37: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:37: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:37: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:37: note: vectype: vector(2) double
cpp_routines/drift.cpp:37: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:37: note: vectype: const vector(2) double
cpp_routines/drift.cpp:37: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:37: note: vectype: vector(2) double
cpp_routines/drift.cpp:37: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand _8
cpp_routines/drift.cpp:37: note: def_stmt: _8 = (long unsigned int) i_236;

cpp_routines/drift.cpp:37: note: type of def: 3.
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand i_236
cpp_routines/drift.cpp:37: note: def_stmt: i_236 = PHI <i_239(8)>

cpp_routines/drift.cpp:37: note: type of def: 2.
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand _199
cpp_routines/drift.cpp:37: note: def_stmt: _199 = *_116;

cpp_routines/drift.cpp:37: note: type of def: 3.
cpp_routines/drift.cpp:37: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:37: note: determined dependence between *_168 and *_168
cpp_routines/drift.cpp:37: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:37: note: can't force alignment of ref: *_168
cpp_routines/drift.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:37: note: can't force alignment of ref: *_116
cpp_routines/drift.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:37: note: can't force alignment of ref: *_168
cpp_routines/drift.cpp:37: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:37: note: not consecutive access _172 = *_168;

cpp_routines/drift.cpp:37: note: not consecutive access _199 = *_116;

cpp_routines/drift.cpp:37: note: not consecutive access *_168 = _24;

cpp_routines/drift.cpp:37: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:37: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:37: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:37: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:37: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:37: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:37: note: vectype: vector(2) double
cpp_routines/drift.cpp:37: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:37: note: vectype: const vector(2) double
cpp_routines/drift.cpp:37: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:37: note: vectype: vector(2) double
cpp_routines/drift.cpp:37: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand _220
cpp_routines/drift.cpp:37: note: def_stmt: _220 = (long unsigned int) i_226;

cpp_routines/drift.cpp:37: note: type of def: 3.
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand i_226
cpp_routines/drift.cpp:37: note: def_stmt: i_226 = PHI <i_26(9)>

cpp_routines/drift.cpp:37: note: type of def: 2.
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand _215
cpp_routines/drift.cpp:37: note: def_stmt: _215 = *_216;

cpp_routines/drift.cpp:37: note: type of def: 3.
cpp_routines/drift.cpp:37: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:37: note: determined dependence between *_218 and *_218
cpp_routines/drift.cpp:37: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:37: note: can't force alignment of ref: *_218
cpp_routines/drift.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:37: note: can't force alignment of ref: *_216
cpp_routines/drift.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:37: note: can't force alignment of ref: *_218
cpp_routines/drift.cpp:37: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:37: note: not consecutive access _217 = *_218;

cpp_routines/drift.cpp:37: note: not consecutive access _215 = *_216;

cpp_routines/drift.cpp:37: note: not consecutive access *_218 = _210;

cpp_routines/drift.cpp:37: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:37: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:37: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:37: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:37: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:37: note: not vectorized: no vectype for stmt: vect_var_.18_161 = MEM[(double *)vect_pbeam_dt.14_163];
 scalar_type: vector(2) double
cpp_routines/drift.cpp:37: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand vect_var_.23_156
cpp_routines/drift.cpp:37: note: def_stmt: vect_var_.23_156 = MEM[(const double *)vect_pbeam_dE.19_158];

cpp_routines/drift.cpp:37: note: type of def: 3.
cpp_routines/drift.cpp:37: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:37: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:37: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:37: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:37: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:37: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:37: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:37: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:37: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:37: note: vectype: vector(2) double
cpp_routines/drift.cpp:37: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:37: note: vectype: const vector(2) double
cpp_routines/drift.cpp:37: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:37: note: vectype: vector(2) double
cpp_routines/drift.cpp:37: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand _186
cpp_routines/drift.cpp:37: note: def_stmt: _186 = (long unsigned int) i_173;

cpp_routines/drift.cpp:37: note: type of def: 3.
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand i_173
cpp_routines/drift.cpp:37: note: def_stmt: i_173 = PHI <tmp.13_167(15), i_204(12)>

cpp_routines/drift.cpp:37: note: type of def: 2.
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:37: note: vect_is_simple_use: operand _178
cpp_routines/drift.cpp:37: note: def_stmt: _178 = *_179;

cpp_routines/drift.cpp:37: note: type of def: 3.
cpp_routines/drift.cpp:37: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:37: note: determined dependence between *_184 and *_184
cpp_routines/drift.cpp:37: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:37: note: can't force alignment of ref: *_184
cpp_routines/drift.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:37: note: can't force alignment of ref: *_179
cpp_routines/drift.cpp:37: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:37: note: can't force alignment of ref: *_184
cpp_routines/drift.cpp:37: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:37: note: not consecutive access _183 = *_184;

cpp_routines/drift.cpp:37: note: not consecutive access _178 = *_179;

cpp_routines/drift.cpp:37: note: not consecutive access *_184 = _176;

cpp_routines/drift.cpp:37: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:37: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:37: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:42: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:42: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:42: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:48: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:48: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:48: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:49: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:49: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:49: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:49: note: vectype: vector(2) double
cpp_routines/drift.cpp:49: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:49: note: vectype: const vector(2) double
cpp_routines/drift.cpp:49: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:49: note: vectype: vector(2) double
cpp_routines/drift.cpp:49: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand _33
cpp_routines/drift.cpp:49: note: def_stmt: _33 = (long unsigned int) i_44;

cpp_routines/drift.cpp:49: note: type of def: 3.
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand i_44
cpp_routines/drift.cpp:49: note: def_stmt: i_44 = PHI <0(24)>

cpp_routines/drift.cpp:49: note: type of def: 2.
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand _51
cpp_routines/drift.cpp:49: note: def_stmt: _51 = *_50;

cpp_routines/drift.cpp:49: note: type of def: 3.
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand _55
cpp_routines/drift.cpp:49: note: def_stmt: _55 = _54 + -1.0e+0;

cpp_routines/drift.cpp:49: note: type of def: 3.
cpp_routines/drift.cpp:49: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:49: note: determined dependence between *_48 and *_48
cpp_routines/drift.cpp:49: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:49: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:49: note: can't force alignment of ref: *_48
cpp_routines/drift.cpp:49: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:49: note: can't force alignment of ref: *_50
cpp_routines/drift.cpp:49: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:49: note: can't force alignment of ref: *_48
cpp_routines/drift.cpp:49: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:49: note: not consecutive access _49 = *_48;

cpp_routines/drift.cpp:49: note: not consecutive access _51 = *_50;

cpp_routines/drift.cpp:49: note: not consecutive access *_48 = _57;

cpp_routines/drift.cpp:49: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:49: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:49: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:49: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:49: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:49: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:49: note: vectype: vector(2) double
cpp_routines/drift.cpp:49: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:49: note: vectype: const vector(2) double
cpp_routines/drift.cpp:49: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:49: note: vectype: vector(2) double
cpp_routines/drift.cpp:49: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand _65
cpp_routines/drift.cpp:49: note: def_stmt: _65 = (long unsigned int) i_62;

cpp_routines/drift.cpp:49: note: type of def: 3.
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand i_62
cpp_routines/drift.cpp:49: note: def_stmt: i_62 = PHI <i_59(25)>

cpp_routines/drift.cpp:49: note: type of def: 2.
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand _71
cpp_routines/drift.cpp:49: note: def_stmt: _71 = *_90;

cpp_routines/drift.cpp:49: note: type of def: 3.
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand _75
cpp_routines/drift.cpp:49: note: def_stmt: _75 = _74 + -1.0e+0;

cpp_routines/drift.cpp:49: note: type of def: 3.
cpp_routines/drift.cpp:49: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:49: note: determined dependence between *_67 and *_67
cpp_routines/drift.cpp:49: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:49: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:49: note: can't force alignment of ref: *_67
cpp_routines/drift.cpp:49: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:49: note: can't force alignment of ref: *_90
cpp_routines/drift.cpp:49: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:49: note: can't force alignment of ref: *_67
cpp_routines/drift.cpp:49: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:49: note: not consecutive access _68 = *_67;

cpp_routines/drift.cpp:49: note: not consecutive access _71 = *_90;

cpp_routines/drift.cpp:49: note: not consecutive access *_67 = _77;

cpp_routines/drift.cpp:49: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:49: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:49: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:49: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:49: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:49: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:49: note: vectype: vector(2) double
cpp_routines/drift.cpp:49: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:49: note: vectype: const vector(2) double
cpp_routines/drift.cpp:49: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:49: note: vectype: vector(2) double
cpp_routines/drift.cpp:49: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand _135
cpp_routines/drift.cpp:49: note: def_stmt: _135 = (long unsigned int) i_137;

cpp_routines/drift.cpp:49: note: type of def: 3.
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand i_137
cpp_routines/drift.cpp:49: note: def_stmt: i_137 = PHI <i_80(26)>

cpp_routines/drift.cpp:49: note: type of def: 2.
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand _130
cpp_routines/drift.cpp:49: note: def_stmt: _130 = *_131;

cpp_routines/drift.cpp:49: note: type of def: 3.
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand _126
cpp_routines/drift.cpp:49: note: def_stmt: _126 = _127 + -1.0e+0;

cpp_routines/drift.cpp:49: note: type of def: 3.
cpp_routines/drift.cpp:49: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:49: note: determined dependence between *_133 and *_133
cpp_routines/drift.cpp:49: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:49: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:49: note: can't force alignment of ref: *_133
cpp_routines/drift.cpp:49: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:49: note: can't force alignment of ref: *_131
cpp_routines/drift.cpp:49: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:49: note: can't force alignment of ref: *_133
cpp_routines/drift.cpp:49: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:49: note: not consecutive access _132 = *_133;

cpp_routines/drift.cpp:49: note: not consecutive access _130 = *_131;

cpp_routines/drift.cpp:49: note: not consecutive access *_133 = _124;

cpp_routines/drift.cpp:49: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:49: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:49: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:49: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:49: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:49: note: not vectorized: no vectype for stmt: vect_var_.46_247 = MEM[(double *)vect_pbeam_dt.42_245];
 scalar_type: vector(2) double
cpp_routines/drift.cpp:49: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand vect_var_.51_252
cpp_routines/drift.cpp:49: note: def_stmt: vect_var_.51_252 = MEM[(const double *)vect_pbeam_dE.47_250];

cpp_routines/drift.cpp:49: note: type of def: 3.
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand vect_var_.58_260
cpp_routines/drift.cpp:49: note: def_stmt: vect_var_.58_260 = vect_var_.56_258 + vect_cst_.59_259;

cpp_routines/drift.cpp:49: note: type of def: 3.
cpp_routines/drift.cpp:49: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:49: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:49: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:49: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:49: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:49: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:49: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:49: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:49: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:49: note: vectype: vector(2) double
cpp_routines/drift.cpp:49: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:49: note: vectype: const vector(2) double
cpp_routines/drift.cpp:49: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:49: note: vectype: vector(2) double
cpp_routines/drift.cpp:49: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand _213
cpp_routines/drift.cpp:49: note: def_stmt: _213 = (long unsigned int) i_235;

cpp_routines/drift.cpp:49: note: type of def: 3.
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand i_235
cpp_routines/drift.cpp:49: note: def_stmt: i_235 = PHI <tmp.41_241(32), i_110(29)>

cpp_routines/drift.cpp:49: note: type of def: 2.
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand _194
cpp_routines/drift.cpp:49: note: def_stmt: _194 = *_195;

cpp_routines/drift.cpp:49: note: type of def: 3.
cpp_routines/drift.cpp:49: note: vect_is_simple_use: operand _230
cpp_routines/drift.cpp:49: note: def_stmt: _230 = _180 + -1.0e+0;

cpp_routines/drift.cpp:49: note: type of def: 3.
cpp_routines/drift.cpp:49: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:49: note: determined dependence between *_211 and *_211
cpp_routines/drift.cpp:49: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:49: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:49: note: can't force alignment of ref: *_211
cpp_routines/drift.cpp:49: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:49: note: can't force alignment of ref: *_195
cpp_routines/drift.cpp:49: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:49: note: can't force alignment of ref: *_211
cpp_routines/drift.cpp:49: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:49: note: not consecutive access _196 = *_211;

cpp_routines/drift.cpp:49: note: not consecutive access _194 = *_195;

cpp_routines/drift.cpp:49: note: not consecutive access *_211 = _232;

cpp_routines/drift.cpp:49: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:49: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:49: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:44: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:44: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:44: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:55: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:55: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:55: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:51: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:51: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:51: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:53: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:53: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:53: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:53: note: vectype: vector(2) double
cpp_routines/drift.cpp:53: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:53: note: vectype: const vector(2) double
cpp_routines/drift.cpp:53: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:53: note: vectype: vector(2) double
cpp_routines/drift.cpp:53: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand _86
cpp_routines/drift.cpp:53: note: def_stmt: _86 = (long unsigned int) i_200;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand i_200
cpp_routines/drift.cpp:53: note: def_stmt: i_200 = PHI <0(42)>

cpp_routines/drift.cpp:53: note: type of def: 2.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand _106
cpp_routines/drift.cpp:53: note: def_stmt: _106 = *_88;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand _106
cpp_routines/drift.cpp:53: note: def_stmt: _106 = *_88;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:53: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:53: note: type of def: 2.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand _102
cpp_routines/drift.cpp:53: note: def_stmt: _102 = _101 + -1.0e+0;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:53: note: determined dependence between *_95 and *_95
cpp_routines/drift.cpp:53: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:53: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:53: note: can't force alignment of ref: *_95
cpp_routines/drift.cpp:53: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:53: note: can't force alignment of ref: *_88
cpp_routines/drift.cpp:53: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:53: note: can't force alignment of ref: *_95
cpp_routines/drift.cpp:53: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:53: note: not consecutive access _92 = *_95;

cpp_routines/drift.cpp:53: note: not consecutive access _106 = *_88;

cpp_routines/drift.cpp:53: note: not consecutive access *_95 = _488;

cpp_routines/drift.cpp:53: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:53: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:53: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:53: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:53: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:53: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:53: note: vectype: vector(2) double
cpp_routines/drift.cpp:53: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:53: note: vectype: const vector(2) double
cpp_routines/drift.cpp:53: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:53: note: vectype: vector(2) double
cpp_routines/drift.cpp:53: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand _495
cpp_routines/drift.cpp:53: note: def_stmt: _495 = (long unsigned int) i_492;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand i_492
cpp_routines/drift.cpp:53: note: def_stmt: i_492 = PHI <i_490(43)>

cpp_routines/drift.cpp:53: note: type of def: 2.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand _500
cpp_routines/drift.cpp:53: note: def_stmt: _500 = *_499;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand _500
cpp_routines/drift.cpp:53: note: def_stmt: _500 = *_499;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:53: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:53: note: type of def: 2.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand _507
cpp_routines/drift.cpp:53: note: def_stmt: _507 = _506 + -1.0e+0;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:53: note: determined dependence between *_497 and *_497
cpp_routines/drift.cpp:53: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:53: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:53: note: can't force alignment of ref: *_497
cpp_routines/drift.cpp:53: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:53: note: can't force alignment of ref: *_499
cpp_routines/drift.cpp:53: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:53: note: can't force alignment of ref: *_497
cpp_routines/drift.cpp:53: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:53: note: not consecutive access _498 = *_497;

cpp_routines/drift.cpp:53: note: not consecutive access _500 = *_499;

cpp_routines/drift.cpp:53: note: not consecutive access *_497 = _509;

cpp_routines/drift.cpp:53: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:53: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:53: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:53: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:53: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:53: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:53: note: vectype: vector(2) double
cpp_routines/drift.cpp:53: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:53: note: vectype: const vector(2) double
cpp_routines/drift.cpp:53: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:53: note: vectype: vector(2) double
cpp_routines/drift.cpp:53: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand _281
cpp_routines/drift.cpp:53: note: def_stmt: _281 = (long unsigned int) i_279;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand i_279
cpp_routines/drift.cpp:53: note: def_stmt: i_279 = PHI <i_511(44)>

cpp_routines/drift.cpp:53: note: type of def: 2.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand _286
cpp_routines/drift.cpp:53: note: def_stmt: _286 = *_285;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand _286
cpp_routines/drift.cpp:53: note: def_stmt: _286 = *_285;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:53: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:53: note: type of def: 2.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand _293
cpp_routines/drift.cpp:53: note: def_stmt: _293 = _292 + -1.0e+0;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:53: note: determined dependence between *_283 and *_283
cpp_routines/drift.cpp:53: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:53: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:53: note: can't force alignment of ref: *_283
cpp_routines/drift.cpp:53: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:53: note: can't force alignment of ref: *_285
cpp_routines/drift.cpp:53: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:53: note: can't force alignment of ref: *_283
cpp_routines/drift.cpp:53: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:53: note: not consecutive access _284 = *_283;

cpp_routines/drift.cpp:53: note: not consecutive access _286 = *_285;

cpp_routines/drift.cpp:53: note: not consecutive access *_283 = _295;

cpp_routines/drift.cpp:53: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:53: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:53: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:53: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:53: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:53: note: not vectorized: no vectype for stmt: vect_var_.82_345 = MEM[(double *)vect_pbeam_dt.78_343];
 scalar_type: vector(2) double
cpp_routines/drift.cpp:53: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand vect_var_.87_350
cpp_routines/drift.cpp:53: note: def_stmt: vect_var_.87_350 = MEM[(const double *)vect_pbeam_dE.83_348];

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand vect_var_.87_350
cpp_routines/drift.cpp:53: note: def_stmt: vect_var_.87_350 = MEM[(const double *)vect_pbeam_dE.83_348];

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand vect_cst_.92_354
cpp_routines/drift.cpp:53: note: def_stmt: vect_cst_.92_354 = {eta1_42, eta1_42};

cpp_routines/drift.cpp:53: note: type of def: 2.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand vect_var_.98_362
cpp_routines/drift.cpp:53: note: def_stmt: vect_var_.98_362 = vect_var_.96_360 + vect_cst_.99_361;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:53: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:53: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:53: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:53: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:53: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:53: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:53: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:53: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:53: note: vectype: vector(2) double
cpp_routines/drift.cpp:53: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:53: note: vectype: const vector(2) double
cpp_routines/drift.cpp:53: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:53: note: vectype: vector(2) double
cpp_routines/drift.cpp:53: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand _316
cpp_routines/drift.cpp:53: note: def_stmt: _316 = (long unsigned int) i_333;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand i_333
cpp_routines/drift.cpp:53: note: def_stmt: i_333 = PHI <tmp.77_339(50), i_301(47)>

cpp_routines/drift.cpp:53: note: type of def: 2.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand _321
cpp_routines/drift.cpp:53: note: def_stmt: _321 = *_320;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand _321
cpp_routines/drift.cpp:53: note: def_stmt: _321 = *_320;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:53: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:53: note: type of def: 2.
cpp_routines/drift.cpp:53: note: vect_is_simple_use: operand _328
cpp_routines/drift.cpp:53: note: def_stmt: _328 = _327 + -1.0e+0;

cpp_routines/drift.cpp:53: note: type of def: 3.
cpp_routines/drift.cpp:53: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:53: note: determined dependence between *_318 and *_318
cpp_routines/drift.cpp:53: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:53: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:53: note: can't force alignment of ref: *_318
cpp_routines/drift.cpp:53: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:53: note: can't force alignment of ref: *_320
cpp_routines/drift.cpp:53: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:53: note: can't force alignment of ref: *_318
cpp_routines/drift.cpp:53: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:53: note: not consecutive access _319 = *_318;

cpp_routines/drift.cpp:53: note: not consecutive access _321 = *_320;

cpp_routines/drift.cpp:53: note: not consecutive access *_318 = _330;

cpp_routines/drift.cpp:53: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:53: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:53: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:45: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:45: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:45: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:58: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:58: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:58: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:58: note: vectype: vector(2) double
cpp_routines/drift.cpp:58: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:58: note: vectype: const vector(2) double
cpp_routines/drift.cpp:58: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:58: note: vectype: vector(2) double
cpp_routines/drift.cpp:58: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _516
cpp_routines/drift.cpp:58: note: def_stmt: _516 = (long unsigned int) i_485;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand i_485
cpp_routines/drift.cpp:58: note: def_stmt: i_485 = PHI <0(57)>

cpp_routines/drift.cpp:58: note: type of def: 2.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _521
cpp_routines/drift.cpp:58: note: def_stmt: _521 = *_520;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _521
cpp_routines/drift.cpp:58: note: def_stmt: _521 = *_520;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:58: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:58: note: type of def: 2.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _521
cpp_routines/drift.cpp:58: note: def_stmt: _521 = *_520;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand eta2_46
cpp_routines/drift.cpp:58: note: def_stmt: eta2_46 = eta_two_43(D) * powmult_89;

cpp_routines/drift.cpp:58: note: type of def: 2.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _531
cpp_routines/drift.cpp:58: note: def_stmt: _531 = _530 + -1.0e+0;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:58: note: determined dependence between *_518 and *_518
cpp_routines/drift.cpp:58: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:58: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:58: note: can't force alignment of ref: *_518
cpp_routines/drift.cpp:58: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:58: note: can't force alignment of ref: *_520
cpp_routines/drift.cpp:58: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:58: note: can't force alignment of ref: *_518
cpp_routines/drift.cpp:58: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:58: note: not consecutive access _519 = *_518;

cpp_routines/drift.cpp:58: note: not consecutive access _521 = *_520;

cpp_routines/drift.cpp:58: note: not consecutive access *_518 = _533;

cpp_routines/drift.cpp:58: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:58: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:58: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:58: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:58: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:58: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:58: note: vectype: vector(2) double
cpp_routines/drift.cpp:58: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:58: note: vectype: const vector(2) double
cpp_routines/drift.cpp:58: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:58: note: vectype: vector(2) double
cpp_routines/drift.cpp:58: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _540
cpp_routines/drift.cpp:58: note: def_stmt: _540 = (long unsigned int) i_537;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand i_537
cpp_routines/drift.cpp:58: note: def_stmt: i_537 = PHI <i_535(58)>

cpp_routines/drift.cpp:58: note: type of def: 2.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _545
cpp_routines/drift.cpp:58: note: def_stmt: _545 = *_544;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _545
cpp_routines/drift.cpp:58: note: def_stmt: _545 = *_544;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:58: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:58: note: type of def: 2.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _545
cpp_routines/drift.cpp:58: note: def_stmt: _545 = *_544;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand eta2_46
cpp_routines/drift.cpp:58: note: def_stmt: eta2_46 = eta_two_43(D) * powmult_89;

cpp_routines/drift.cpp:58: note: type of def: 2.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _555
cpp_routines/drift.cpp:58: note: def_stmt: _555 = _554 + -1.0e+0;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:58: note: determined dependence between *_542 and *_542
cpp_routines/drift.cpp:58: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:58: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:58: note: can't force alignment of ref: *_542
cpp_routines/drift.cpp:58: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:58: note: can't force alignment of ref: *_544
cpp_routines/drift.cpp:58: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:58: note: can't force alignment of ref: *_542
cpp_routines/drift.cpp:58: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:58: note: not consecutive access _543 = *_542;

cpp_routines/drift.cpp:58: note: not consecutive access _545 = *_544;

cpp_routines/drift.cpp:58: note: not consecutive access *_542 = _557;

cpp_routines/drift.cpp:58: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:58: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:58: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:58: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:58: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:58: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:58: note: vectype: vector(2) double
cpp_routines/drift.cpp:58: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:58: note: vectype: const vector(2) double
cpp_routines/drift.cpp:58: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:58: note: vectype: vector(2) double
cpp_routines/drift.cpp:58: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _383
cpp_routines/drift.cpp:58: note: def_stmt: _383 = (long unsigned int) i_381;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand i_381
cpp_routines/drift.cpp:58: note: def_stmt: i_381 = PHI <i_559(59)>

cpp_routines/drift.cpp:58: note: type of def: 2.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _388
cpp_routines/drift.cpp:58: note: def_stmt: _388 = *_387;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _388
cpp_routines/drift.cpp:58: note: def_stmt: _388 = *_387;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:58: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:58: note: type of def: 2.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _388
cpp_routines/drift.cpp:58: note: def_stmt: _388 = *_387;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand eta2_46
cpp_routines/drift.cpp:58: note: def_stmt: eta2_46 = eta_two_43(D) * powmult_89;

cpp_routines/drift.cpp:58: note: type of def: 2.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _398
cpp_routines/drift.cpp:58: note: def_stmt: _398 = _397 + -1.0e+0;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:58: note: determined dependence between *_385 and *_385
cpp_routines/drift.cpp:58: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:58: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:58: note: can't force alignment of ref: *_385
cpp_routines/drift.cpp:58: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:58: note: can't force alignment of ref: *_387
cpp_routines/drift.cpp:58: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:58: note: can't force alignment of ref: *_385
cpp_routines/drift.cpp:58: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:58: note: not consecutive access _386 = *_385;

cpp_routines/drift.cpp:58: note: not consecutive access _388 = *_387;

cpp_routines/drift.cpp:58: note: not consecutive access *_385 = _400;

cpp_routines/drift.cpp:58: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:58: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:58: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:58: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:58: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:58: note: not vectorized: no vectype for stmt: vect_var_.122_453 = MEM[(double *)vect_pbeam_dt.118_451];
 scalar_type: vector(2) double
cpp_routines/drift.cpp:58: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand vect_var_.127_458
cpp_routines/drift.cpp:58: note: def_stmt: vect_var_.127_458 = MEM[(const double *)vect_pbeam_dE.123_456];

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand vect_var_.127_458
cpp_routines/drift.cpp:58: note: def_stmt: vect_var_.127_458 = MEM[(const double *)vect_pbeam_dE.123_456];

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand vect_cst_.132_462
cpp_routines/drift.cpp:58: note: def_stmt: vect_cst_.132_462 = {eta1_42, eta1_42};

cpp_routines/drift.cpp:58: note: type of def: 2.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand vect_var_.127_458
cpp_routines/drift.cpp:58: note: def_stmt: vect_var_.127_458 = MEM[(const double *)vect_pbeam_dE.123_456];

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand vect_cst_.136_466
cpp_routines/drift.cpp:58: note: def_stmt: vect_cst_.136_466 = {eta2_46, eta2_46};

cpp_routines/drift.cpp:58: note: type of def: 2.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand vect_var_.142_474
cpp_routines/drift.cpp:58: note: def_stmt: vect_var_.142_474 = vect_var_.140_472 + vect_cst_.143_473;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:58: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:58: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:58: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:58: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:58: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:58: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:58: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:58: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:58: note: vectype: vector(2) double
cpp_routines/drift.cpp:58: note: get vectype with 2 units of type const double
cpp_routines/drift.cpp:58: note: vectype: const vector(2) double
cpp_routines/drift.cpp:58: note: get vectype with 2 units of type double
cpp_routines/drift.cpp:58: note: vectype: vector(2) double
cpp_routines/drift.cpp:58: note: === vect_pattern_recog ===
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _421
cpp_routines/drift.cpp:58: note: def_stmt: _421 = (long unsigned int) i_441;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand i_441
cpp_routines/drift.cpp:58: note: def_stmt: i_441 = PHI <tmp.117_447(65), i_406(62)>

cpp_routines/drift.cpp:58: note: type of def: 2.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand 8
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _426
cpp_routines/drift.cpp:58: note: def_stmt: _426 = *_425;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _426
cpp_routines/drift.cpp:58: note: def_stmt: _426 = *_425;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand eta1_42
cpp_routines/drift.cpp:58: note: def_stmt: eta1_42 = eta_one_40(D) * powmult_93;

cpp_routines/drift.cpp:58: note: type of def: 2.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _426
cpp_routines/drift.cpp:58: note: def_stmt: _426 = *_425;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand eta2_46
cpp_routines/drift.cpp:58: note: def_stmt: eta2_46 = eta_two_43(D) * powmult_89;

cpp_routines/drift.cpp:58: note: type of def: 2.
cpp_routines/drift.cpp:58: note: vect_is_simple_use: operand _436
cpp_routines/drift.cpp:58: note: def_stmt: _436 = _435 + -1.0e+0;

cpp_routines/drift.cpp:58: note: type of def: 3.
cpp_routines/drift.cpp:58: note: === vect_analyze_dependences ===
cpp_routines/drift.cpp:58: note: determined dependence between *_423 and *_423
cpp_routines/drift.cpp:58: note: === vect_analyze_data_refs_alignment ===
cpp_routines/drift.cpp:58: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:58: note: can't force alignment of ref: *_423
cpp_routines/drift.cpp:58: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:58: note: can't force alignment of ref: *_425
cpp_routines/drift.cpp:58: note: vect_compute_data_ref_alignment:
cpp_routines/drift.cpp:58: note: can't force alignment of ref: *_423
cpp_routines/drift.cpp:58: note: === vect_analyze_data_ref_accesses ===
cpp_routines/drift.cpp:58: note: not consecutive access _424 = *_423;

cpp_routines/drift.cpp:58: note: not consecutive access _426 = *_425;

cpp_routines/drift.cpp:58: note: not consecutive access *_423 = _438;

cpp_routines/drift.cpp:58: note: === vect_analyze_slp ===
cpp_routines/drift.cpp:58: note: Failed to SLP the basic block.
cpp_routines/drift.cpp:58: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

cpp_routines/drift.cpp:20: note: ===vect_slp_analyze_bb===

cpp_routines/drift.cpp:20: note: === vect_analyze_data_refs ===

cpp_routines/drift.cpp:20: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at cpp_routines/linear_interp_kick.cpp:31

cpp_routines/linear_interp_kick.cpp:31: note: ===== analyze_loop_nest =====
cpp_routines/linear_interp_kick.cpp:31: note: === vect_analyze_loop_form ===
cpp_routines/linear_interp_kick.cpp:31: note: not vectorized: control flow in loop.
cpp_routines/linear_interp_kick.cpp:31: note: bad loop form.
cpp_routines/linear_interp_kick.cpp:15: note: vectorized 0 loops in function.

cpp_routines/linear_interp_kick.cpp:29: note: ===vect_slp_analyze_bb===

cpp_routines/linear_interp_kick.cpp:29: note: === vect_analyze_data_refs ===

cpp_routines/linear_interp_kick.cpp:29: note: get vectype with 2 units of type double
cpp_routines/linear_interp_kick.cpp:29: note: vectype: vector(2) double
cpp_routines/linear_interp_kick.cpp:29: note: get vectype with 2 units of type double
cpp_routines/linear_interp_kick.cpp:29: note: vectype: vector(2) double
cpp_routines/linear_interp_kick.cpp:29: note: === vect_pattern_recog ===
cpp_routines/linear_interp_kick.cpp:29: note: vect_is_simple_use: operand _7
cpp_routines/linear_interp_kick.cpp:29: note: def_stmt: _7 = (long unsigned int) n_slices_4(D);

cpp_routines/linear_interp_kick.cpp:29: note: type of def: 3.
cpp_routines/linear_interp_kick.cpp:29: note: vect_is_simple_use: operand n_slices_4(D)
cpp_routines/linear_interp_kick.cpp:29: note: def_stmt: GIMPLE_NOP

cpp_routines/linear_interp_kick.cpp:29: note: vect_is_simple_use: operand 8
cpp_routines/linear_interp_kick.cpp:29: note: === vect_analyze_dependences ===
cpp_routines/linear_interp_kick.cpp:29: note: === vect_analyze_data_refs_alignment ===
cpp_routines/linear_interp_kick.cpp:29: note: vect_compute_data_ref_alignment:
cpp_routines/linear_interp_kick.cpp:29: note: can't force alignment of ref: *_11
cpp_routines/linear_interp_kick.cpp:29: note: vect_compute_data_ref_alignment:
cpp_routines/linear_interp_kick.cpp:29: note: can't force alignment of ref: *bin_centers_10(D)
cpp_routines/linear_interp_kick.cpp:29: note: === vect_analyze_data_ref_accesses ===
cpp_routines/linear_interp_kick.cpp:29: note: not consecutive access _13 = *_11;

cpp_routines/linear_interp_kick.cpp:29: note: not consecutive access _14 = *bin_centers_10(D);

cpp_routines/linear_interp_kick.cpp:29: note: === vect_analyze_slp ===
cpp_routines/linear_interp_kick.cpp:29: note: Failed to SLP the basic block.
cpp_routines/linear_interp_kick.cpp:29: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/linear_interp_kick.cpp:43: note: ===vect_slp_analyze_bb===

cpp_routines/linear_interp_kick.cpp:43: note: === vect_analyze_data_refs ===

cpp_routines/linear_interp_kick.cpp:43: note: not vectorized: not enough data-refs in basic block.

cpp_routines/linear_interp_kick.cpp:15: note: ===vect_slp_analyze_bb===

cpp_routines/linear_interp_kick.cpp:15: note: === vect_analyze_data_refs ===

cpp_routines/linear_interp_kick.cpp:15: note: not vectorized: not enough data-refs in basic block.

cpp_routines/linear_interp_kick.cpp:32: note: ===vect_slp_analyze_bb===

cpp_routines/linear_interp_kick.cpp:32: note: === vect_analyze_data_refs ===

cpp_routines/linear_interp_kick.cpp:32: note: get vectype with 2 units of type double
cpp_routines/linear_interp_kick.cpp:32: note: vectype: vector(2) double
cpp_routines/linear_interp_kick.cpp:32: note: === vect_pattern_recog ===
cpp_routines/linear_interp_kick.cpp:32: note: vect_is_simple_use: operand _18
cpp_routines/linear_interp_kick.cpp:32: note: def_stmt: _18 = (long unsigned int) i_51;

cpp_routines/linear_interp_kick.cpp:32: note: type of def: 3.
cpp_routines/linear_interp_kick.cpp:32: note: vect_is_simple_use: operand i_51
cpp_routines/linear_interp_kick.cpp:32: note: def_stmt: i_51 = PHI <i_49(9), 0(4)>

cpp_routines/linear_interp_kick.cpp:32: note: type of def: 2.
cpp_routines/linear_interp_kick.cpp:32: note: vect_is_simple_use: operand 8
cpp_routines/linear_interp_kick.cpp:32: note: === vect_analyze_dependences ===
cpp_routines/linear_interp_kick.cpp:32: note: === vect_analyze_data_refs_alignment ===
cpp_routines/linear_interp_kick.cpp:32: note: vect_compute_data_ref_alignment:
cpp_routines/linear_interp_kick.cpp:32: note: SLP: step doesn't divide the vector-size.
cpp_routines/linear_interp_kick.cpp:32: note: Unknown alignment for access: *beam_dt_20(D)
cpp_routines/linear_interp_kick.cpp:32: note: === vect_analyze_data_ref_accesses ===
cpp_routines/linear_interp_kick.cpp:32: note: === vect_analyze_slp ===
cpp_routines/linear_interp_kick.cpp:32: note: Failed to SLP the basic block.
cpp_routines/linear_interp_kick.cpp:32: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/linear_interp_kick.cpp:36: note: ===vect_slp_analyze_bb===

cpp_routines/linear_interp_kick.cpp:36: note: === vect_analyze_data_refs ===

cpp_routines/linear_interp_kick.cpp:36: note: not vectorized: not enough data-refs in basic block.

cpp_routines/linear_interp_kick.cpp:33: note: ===vect_slp_analyze_bb===

cpp_routines/linear_interp_kick.cpp:33: note: === vect_analyze_data_refs ===

cpp_routines/linear_interp_kick.cpp:33: note: get vectype with 2 units of type double
cpp_routines/linear_interp_kick.cpp:33: note: vectype: vector(2) double
cpp_routines/linear_interp_kick.cpp:33: note: get vectype with 2 units of type double
cpp_routines/linear_interp_kick.cpp:33: note: vectype: vector(2) double
cpp_routines/linear_interp_kick.cpp:33: note: get vectype with 2 units of type double
cpp_routines/linear_interp_kick.cpp:33: note: vectype: vector(2) double
cpp_routines/linear_interp_kick.cpp:33: note: === vect_pattern_recog ===
cpp_routines/linear_interp_kick.cpp:33: note: vect_is_simple_use: operand _23
cpp_routines/linear_interp_kick.cpp:33: note: def_stmt: _23 = a_22 - _14;

cpp_routines/linear_interp_kick.cpp:33: note: type of def: 3.
cpp_routines/linear_interp_kick.cpp:33: note: vect_is_simple_use: operand _27
cpp_routines/linear_interp_kick.cpp:33: note: def_stmt: _27 = (long unsigned int) ffbin_25;

cpp_routines/linear_interp_kick.cpp:33: note: type of def: 3.
cpp_routines/linear_interp_kick.cpp:33: note: vect_is_simple_use: operand ffbin_25
cpp_routines/linear_interp_kick.cpp:33: note: def_stmt: ffbin_25 = (int) fbin_24;

cpp_routines/linear_interp_kick.cpp:33: note: type of def: 3.
cpp_routines/linear_interp_kick.cpp:33: note: vect_is_simple_use: operand 8
cpp_routines/linear_interp_kick.cpp:33: note: vect_is_simple_use: operand _32
cpp_routines/linear_interp_kick.cpp:33: note: def_stmt: _32 = _27 + 1;

cpp_routines/linear_interp_kick.cpp:33: note: type of def: 3.
cpp_routines/linear_interp_kick.cpp:33: note: vect_is_simple_use: operand _31
cpp_routines/linear_interp_kick.cpp:33: note: def_stmt: _31 = a_22 - _30;

cpp_routines/linear_interp_kick.cpp:33: note: type of def: 3.
cpp_routines/linear_interp_kick.cpp:33: note: vect_is_simple_use: operand _39
cpp_routines/linear_interp_kick.cpp:33: note: def_stmt: _39 = _31 * _38;

cpp_routines/linear_interp_kick.cpp:33: note: type of def: 3.
cpp_routines/linear_interp_kick.cpp:33: note: === vect_analyze_dependences ===
cpp_routines/linear_interp_kick.cpp:33: note: Detected interleaving *_34 and *_36
cpp_routines/linear_interp_kick.cpp:33: note: === vect_analyze_data_refs_alignment ===
cpp_routines/linear_interp_kick.cpp:33: note: vect_compute_data_ref_alignment:
cpp_routines/linear_interp_kick.cpp:33: note: can't force alignment of ref: *_29
cpp_routines/linear_interp_kick.cpp:33: note: vect_compute_data_ref_alignment:
cpp_routines/linear_interp_kick.cpp:33: note: can't force alignment of ref: *_34
cpp_routines/linear_interp_kick.cpp:33: note: vect_compute_data_ref_alignment:
cpp_routines/linear_interp_kick.cpp:33: note: can't force alignment of ref: *_36
cpp_routines/linear_interp_kick.cpp:33: note: === vect_analyze_data_ref_accesses ===
cpp_routines/linear_interp_kick.cpp:33: note: not consecutive access _30 = *_29;

cpp_routines/linear_interp_kick.cpp:33: note: Detected interleaving of size 2
cpp_routines/linear_interp_kick.cpp:33: note: === vect_analyze_slp ===
cpp_routines/linear_interp_kick.cpp:33: note: Failed to SLP the basic block.
cpp_routines/linear_interp_kick.cpp:33: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/linear_interp_kick.cpp:40: note: ===vect_slp_analyze_bb===

cpp_routines/linear_interp_kick.cpp:40: note: === vect_analyze_data_refs ===

cpp_routines/linear_interp_kick.cpp:40: note: get vectype with 2 units of type double
cpp_routines/linear_interp_kick.cpp:40: note: vectype: vector(2) double
cpp_routines/linear_interp_kick.cpp:40: note: get vectype with 2 units of type double
cpp_routines/linear_interp_kick.cpp:40: note: vectype: vector(2) double
cpp_routines/linear_interp_kick.cpp:40: note: === vect_pattern_recog ===
cpp_routines/linear_interp_kick.cpp:40: note: === vect_analyze_dependences ===
cpp_routines/linear_interp_kick.cpp:40: note: determined dependence between *_43 and *_43
cpp_routines/linear_interp_kick.cpp:40: note: === vect_analyze_data_refs_alignment ===
cpp_routines/linear_interp_kick.cpp:40: note: vect_compute_data_ref_alignment:
cpp_routines/linear_interp_kick.cpp:40: note: SLP: step doesn't divide the vector-size.
cpp_routines/linear_interp_kick.cpp:40: note: Unknown alignment for access: *beam_dE_42(D)
cpp_routines/linear_interp_kick.cpp:40: note: vect_compute_data_ref_alignment:
cpp_routines/linear_interp_kick.cpp:40: note: SLP: step doesn't divide the vector-size.
cpp_routines/linear_interp_kick.cpp:40: note: Unknown alignment for access: *beam_dE_42(D)
cpp_routines/linear_interp_kick.cpp:40: note: === vect_analyze_data_ref_accesses ===
cpp_routines/linear_interp_kick.cpp:40: note: === vect_analyze_slp ===
cpp_routines/linear_interp_kick.cpp:40: note: Failed to SLP the basic block.
cpp_routines/linear_interp_kick.cpp:40: note: not vectorized: failed to find SLP opportunities in basic block.

cpp_routines/linear_interp_kick.cpp:15: note: ===vect_slp_analyze_bb===

cpp_routines/linear_interp_kick.cpp:15: note: === vect_analyze_data_refs ===

cpp_routines/linear_interp_kick.cpp:15: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:19: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:19: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:19: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at toolbox/tomoscope.cpp:65

toolbox/tomoscope.cpp:65: note: ===== analyze_loop_nest =====
toolbox/tomoscope.cpp:65: note: === vect_analyze_loop_form ===
toolbox/tomoscope.cpp:65: note: not vectorized: multiple nested loops.
toolbox/tomoscope.cpp:65: note: bad loop form.
Analyzing loop at toolbox/tomoscope.cpp:65

toolbox/tomoscope.cpp:65: note: ===== analyze_loop_nest =====
toolbox/tomoscope.cpp:65: note: === vect_analyze_loop_form ===
toolbox/tomoscope.cpp:65: note: ===== analyze_loop_nest_1 =====
toolbox/tomoscope.cpp:65: note: === vect_analyze_loop_form ===
toolbox/tomoscope.cpp:65: note: not vectorized: control flow in loop.
toolbox/tomoscope.cpp:65: note: bad inner-loop form.
toolbox/tomoscope.cpp:65: note: not vectorized: Bad inner loop.
toolbox/tomoscope.cpp:65: note: bad loop form.
Analyzing loop at toolbox/tomoscope.cpp:68

toolbox/tomoscope.cpp:68: note: ===== analyze_loop_nest =====
toolbox/tomoscope.cpp:68: note: === vect_analyze_loop_form ===
toolbox/tomoscope.cpp:68: note: not vectorized: control flow in loop.
toolbox/tomoscope.cpp:68: note: bad loop form.
Analyzing loop at toolbox/tomoscope.cpp:55

toolbox/tomoscope.cpp:55: note: ===== analyze_loop_nest =====
toolbox/tomoscope.cpp:55: note: === vect_analyze_loop_form ===
toolbox/tomoscope.cpp:55: note: === get_loop_niters ===
toolbox/tomoscope.cpp:55: note: ==> get_loop_niters:_25
toolbox/tomoscope.cpp:55: note: Symbolic number of iterations is _25
toolbox/tomoscope.cpp:55: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:55: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:55: note: vectype: vector(2) double
toolbox/tomoscope.cpp:55: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:55: note: vectype: vector(2) double
toolbox/tomoscope.cpp:55: note: === vect_analyze_scalar_cycles ===
toolbox/tomoscope.cpp:55: note: Analyze phi: m_101 = PHI <m_46(7), 0(24)>

toolbox/tomoscope.cpp:55: note: Access function of PHI: {0, +, 1}_2
toolbox/tomoscope.cpp:55: note: step: 1,  init: 0
toolbox/tomoscope.cpp:55: note: Detected induction.
toolbox/tomoscope.cpp:55: note: Analyze phi: .MEM_106 = PHI <.MEM_45(7), .MEM_40(24)>

toolbox/tomoscope.cpp:55: note: === vect_pattern_recog ===
toolbox/tomoscope.cpp:55: note: vect_is_simple_use: operand _43
toolbox/tomoscope.cpp:55: note: def_stmt: _43 = *cumulDistr.0_33[m_101];

toolbox/tomoscope.cpp:55: note: type of def: 3.
toolbox/tomoscope.cpp:55: note: === vect_mark_stmts_to_be_vectorized ===
toolbox/tomoscope.cpp:55: note: init: phi relevant? m_101 = PHI <m_46(7), 0(24)>

toolbox/tomoscope.cpp:55: note: init: phi relevant? .MEM_106 = PHI <.MEM_45(7), .MEM_40(24)>

toolbox/tomoscope.cpp:55: note: init: stmt relevant? _43 = *cumulDistr.0_33[m_101];

toolbox/tomoscope.cpp:55: note: init: stmt relevant? _44 = _43 * invTotProb_7;

toolbox/tomoscope.cpp:55: note: init: stmt relevant? *cumulDistr.0_33[m_101] = _44;

toolbox/tomoscope.cpp:55: note: vec_stmt_relevant_p: stmt has vdefs.
toolbox/tomoscope.cpp:55: note: mark relevant 4, live 0.
toolbox/tomoscope.cpp:55: note: init: stmt relevant? m_46 = m_101 + 1;

toolbox/tomoscope.cpp:55: note: init: stmt relevant? if (_25 > m_46)

toolbox/tomoscope.cpp:55: note: worklist: examine stmt: *cumulDistr.0_33[m_101] = _44;

toolbox/tomoscope.cpp:55: note: vect_is_simple_use: operand _44
toolbox/tomoscope.cpp:55: note: def_stmt: _44 = _43 * invTotProb_7;

toolbox/tomoscope.cpp:55: note: type of def: 3.
toolbox/tomoscope.cpp:55: note: mark relevant 4, live 0.
toolbox/tomoscope.cpp:55: note: worklist: examine stmt: _44 = _43 * invTotProb_7;

toolbox/tomoscope.cpp:55: note: vect_is_simple_use: operand _43
toolbox/tomoscope.cpp:55: note: def_stmt: _43 = *cumulDistr.0_33[m_101];

toolbox/tomoscope.cpp:55: note: type of def: 3.
toolbox/tomoscope.cpp:55: note: mark relevant 4, live 0.
toolbox/tomoscope.cpp:55: note: vect_is_simple_use: operand invTotProb_7
toolbox/tomoscope.cpp:55: note: def_stmt: invTotProb_7 = 1.0e+0 / totProb_123;

toolbox/tomoscope.cpp:55: note: type of def: 2.
toolbox/tomoscope.cpp:55: note: def_stmt is out of loop.
toolbox/tomoscope.cpp:55: note: worklist: examine stmt: _43 = *cumulDistr.0_33[m_101];

toolbox/tomoscope.cpp:55: note: === vect_analyze_dependences ===
toolbox/tomoscope.cpp:55: note: dependence distance  = 0.
toolbox/tomoscope.cpp:55: note: dependence distance == 0 between *cumulDistr.0_33[m_101] and *cumulDistr.0_33[m_101]
toolbox/tomoscope.cpp:55: note: === vect_determine_vectorization_factor ===
toolbox/tomoscope.cpp:55: note: ==> examining phi: m_101 = PHI <m_46(7), 0(24)>

toolbox/tomoscope.cpp:55: note: ==> examining phi: .MEM_106 = PHI <.MEM_45(7), .MEM_40(24)>

toolbox/tomoscope.cpp:55: note: ==> examining statement: _43 = *cumulDistr.0_33[m_101];

toolbox/tomoscope.cpp:55: note: get vectype for scalar type:  double
toolbox/tomoscope.cpp:55: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:55: note: vectype: vector(2) double
toolbox/tomoscope.cpp:55: note: vectype: vector(2) double
toolbox/tomoscope.cpp:55: note: nunits = 2
toolbox/tomoscope.cpp:55: note: ==> examining statement: _44 = _43 * invTotProb_7;

toolbox/tomoscope.cpp:55: note: get vectype for scalar type:  double
toolbox/tomoscope.cpp:55: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:55: note: vectype: vector(2) double
toolbox/tomoscope.cpp:55: note: get vectype for scalar type:  double
toolbox/tomoscope.cpp:55: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:55: note: vectype: vector(2) double
toolbox/tomoscope.cpp:55: note: vectype: vector(2) double
toolbox/tomoscope.cpp:55: note: nunits = 2
toolbox/tomoscope.cpp:55: note: ==> examining statement: *cumulDistr.0_33[m_101] = _44;

toolbox/tomoscope.cpp:55: note: get vectype for scalar type:  double
toolbox/tomoscope.cpp:55: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:55: note: vectype: vector(2) double
toolbox/tomoscope.cpp:55: note: vectype: vector(2) double
toolbox/tomoscope.cpp:55: note: nunits = 2
toolbox/tomoscope.cpp:55: note: ==> examining statement: m_46 = m_101 + 1;

toolbox/tomoscope.cpp:55: note: skip.
toolbox/tomoscope.cpp:55: note: ==> examining statement: if (_25 > m_46)

toolbox/tomoscope.cpp:55: note: skip.
toolbox/tomoscope.cpp:55: note: vectorization factor = 2
toolbox/tomoscope.cpp:55: note: === vect_analyze_data_refs_alignment ===
toolbox/tomoscope.cpp:55: note: dependence distance  = 0.
toolbox/tomoscope.cpp:55: note: accesses have the same alignment.dependence distance modulo vf == 0 between *cumulDistr.0_33[m_101] and *cumulDistr.0_33[m_101]
toolbox/tomoscope.cpp:55: note: vect_compute_data_ref_alignment:
toolbox/tomoscope.cpp:55: note: can't force alignment of ref: *cumulDistr.0_33[m_101]
toolbox/tomoscope.cpp:55: note: vect_compute_data_ref_alignment:
toolbox/tomoscope.cpp:55: note: can't force alignment of ref: *cumulDistr.0_33[m_101]
toolbox/tomoscope.cpp:55: note: === vect_analyze_data_ref_accesses ===
toolbox/tomoscope.cpp:55: note: === vect_prune_runtime_alias_test_list ===
toolbox/tomoscope.cpp:55: note: === vect_enhance_data_refs_alignment ===
toolbox/tomoscope.cpp:55: note: Unknown misalignment, is_packed = 0
toolbox/tomoscope.cpp:55: note: Unknown misalignment, is_packed = 0
toolbox/tomoscope.cpp:55: note: vect_can_advance_ivs_p:
toolbox/tomoscope.cpp:55: note: Analyze phi: m_101 = PHI <m_46(7), 0(24)>

toolbox/tomoscope.cpp:55: note: Access function of PHI: {0, +, 1}_2
toolbox/tomoscope.cpp:55: note: Analyze phi: .MEM_106 = PHI <.MEM_45(7), .MEM_40(24)>

toolbox/tomoscope.cpp:55: note: virtual phi. skip.
toolbox/tomoscope.cpp:55: note: vect_model_load_cost: unaligned supported by hardware.
toolbox/tomoscope.cpp:55: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
toolbox/tomoscope.cpp:55: note: vect_model_store_cost: unaligned supported by hardware.
toolbox/tomoscope.cpp:55: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
toolbox/tomoscope.cpp:55: note: Alignment of access forced using peeling.
toolbox/tomoscope.cpp:55: note: Peeling for alignment will be applied.
toolbox/tomoscope.cpp:55: note: === vect_analyze_slp ===
toolbox/tomoscope.cpp:55: note: === vect_make_slp_decision ===
toolbox/tomoscope.cpp:55: note: === vect_detect_hybrid_slp ===
toolbox/tomoscope.cpp:55: note: === vect_analyze_loop_operations ===
toolbox/tomoscope.cpp:55: note: examining phi: m_101 = PHI <m_46(7), 0(24)>

toolbox/tomoscope.cpp:55: note: examining phi: .MEM_106 = PHI <.MEM_45(7), .MEM_40(24)>

toolbox/tomoscope.cpp:55: note: ==> examining statement: _43 = *cumulDistr.0_33[m_101];

toolbox/tomoscope.cpp:55: note: num. args = 4 (not unary/binary/ternary op).
toolbox/tomoscope.cpp:55: note: vect_is_simple_use: operand *cumulDistr.0_33[m_101]
toolbox/tomoscope.cpp:55: note: not ssa-name.
toolbox/tomoscope.cpp:55: note: use not simple.
toolbox/tomoscope.cpp:55: note: vect_model_load_cost: aligned.
toolbox/tomoscope.cpp:55: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
toolbox/tomoscope.cpp:55: note: ==> examining statement: _44 = _43 * invTotProb_7;

toolbox/tomoscope.cpp:55: note: vect_is_simple_use: operand _43
toolbox/tomoscope.cpp:55: note: def_stmt: _43 = *cumulDistr.0_33[m_101];

toolbox/tomoscope.cpp:55: note: type of def: 3.
toolbox/tomoscope.cpp:55: note: vect_is_simple_use: operand invTotProb_7
toolbox/tomoscope.cpp:55: note: def_stmt: invTotProb_7 = 1.0e+0 / totProb_123;

toolbox/tomoscope.cpp:55: note: type of def: 2.
toolbox/tomoscope.cpp:55: note: === vectorizable_operation ===
toolbox/tomoscope.cpp:55: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
toolbox/tomoscope.cpp:55: note: ==> examining statement: *cumulDistr.0_33[m_101] = _44;

toolbox/tomoscope.cpp:55: note: vect_is_simple_use: operand _44
toolbox/tomoscope.cpp:55: note: def_stmt: _44 = _43 * invTotProb_7;

toolbox/tomoscope.cpp:55: note: type of def: 3.
toolbox/tomoscope.cpp:55: note: vect_model_store_cost: aligned.
toolbox/tomoscope.cpp:55: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
toolbox/tomoscope.cpp:55: note: ==> examining statement: m_46 = m_101 + 1;

toolbox/tomoscope.cpp:55: note: irrelevant.
toolbox/tomoscope.cpp:55: note: ==> examining statement: if (_25 > m_46)

toolbox/tomoscope.cpp:55: note: irrelevant.
toolbox/tomoscope.cpp:55: note: === vect_update_slp_costs_according_to_vf ===cost model: prologue peel iters set to vf/2.cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
toolbox/tomoscope.cpp:55: note: Cost model analysis: 
  Vector inside of loop cost: 3
  Vector prologue cost: 12
  Vector epilogue cost: 3
  Scalar iteration cost: 3
  Scalar outside cost: 7
  Vector outside cost: 15
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 4

toolbox/tomoscope.cpp:55: note:   Runtime profitability threshold = 3

toolbox/tomoscope.cpp:55: note:   Static estimate profitability threshold = 3

toolbox/tomoscope.cpp:55: note: epilog loop required.
toolbox/tomoscope.cpp:55: note: vect_can_advance_ivs_p:
toolbox/tomoscope.cpp:55: note: Analyze phi: m_101 = PHI <m_46(7), 0(24)>

toolbox/tomoscope.cpp:55: note: Access function of PHI: {0, +, 1}_2
toolbox/tomoscope.cpp:55: note: Analyze phi: .MEM_106 = PHI <.MEM_45(7), .MEM_40(24)>

toolbox/tomoscope.cpp:55: note: virtual phi. skip.

Vectorizing loop at toolbox/tomoscope.cpp:55

toolbox/tomoscope.cpp:55: note: === vec_transform_loop ===
toolbox/tomoscope.cpp:55: note: Profitability threshold is 3 loop iterations.
toolbox/tomoscope.cpp:55: note: === vect_do_peeling_for_alignment ===
toolbox/tomoscope.cpp:55: note: created vect_pcumulDistr.13_15
toolbox/tomoscope.cpp:55: note: niters for prolog loop: MIN_EXPR <(unsigned int) -(((unsigned long) vect_pcumulDistr.13_15 & 15) >> 3) & 1, _25>
loop at toolbox/tomoscope.cpp:57: if (ivtmp_1 < prologue_after_cost_adjust.15_90)
Setting upper bound of nb iterations for prologue loop to 2

toolbox/tomoscope.cpp:55: note: === vect_update_inits_of_dr ===
toolbox/tomoscope.cpp:55: note: === vect_do_peeling_for_loop_bound ===
toolbox/tomoscope.cpp:55: note: vect_update_ivs_after_vectorizer: phi: m_101 = PHI <m_46(7), m_89(39)>

toolbox/tomoscope.cpp:55: note: vect_update_ivs_after_vectorizer: phi: .MEM_106 = PHI <.MEM_45(7), .MEM_42(39)>

toolbox/tomoscope.cpp:55: note: virtual phi. skip.Setting upper bound of nb iterations for epilogue loop to 0

toolbox/tomoscope.cpp:55: note: ------>vectorizing phi: m_101 = PHI <m_46(7), m_89(43)>

toolbox/tomoscope.cpp:55: note: ------>vectorizing phi: .MEM_106 = PHI <.MEM_45(7), .MEM_42(43)>

toolbox/tomoscope.cpp:55: note: ------>vectorizing statement: _43 = *cumulDistr.0_33[m_101];

toolbox/tomoscope.cpp:55: note: transform statement.
toolbox/tomoscope.cpp:55: note: transform load. ncopies = 1
toolbox/tomoscope.cpp:55: note: create vector_type-pointer variable to type: vector(2) double  vectorizing an array ref: *cumulDistr.0_33
toolbox/tomoscope.cpp:55: note: created vect_pcumulDistr.24_138
toolbox/tomoscope.cpp:55: note: add new stmt: vect_var_.25_141 = MEM[(double[0:D.3200] *)vect_pcumulDistr.21_139];

toolbox/tomoscope.cpp:55: note: ------>vectorizing statement: _44 = _43 * invTotProb_7;

toolbox/tomoscope.cpp:55: note: transform statement.
toolbox/tomoscope.cpp:55: note: vect_is_simple_use: operand _43
toolbox/tomoscope.cpp:55: note: def_stmt: _43 = *cumulDistr.0_33[m_101];

toolbox/tomoscope.cpp:55: note: type of def: 3.
toolbox/tomoscope.cpp:55: note: vect_is_simple_use: operand invTotProb_7
toolbox/tomoscope.cpp:55: note: def_stmt: invTotProb_7 = 1.0e+0 / totProb_123;

toolbox/tomoscope.cpp:55: note: type of def: 2.
toolbox/tomoscope.cpp:55: note: transform binary/unary operation.
toolbox/tomoscope.cpp:55: note: vect_get_vec_def_for_operand: _43
toolbox/tomoscope.cpp:55: note: vect_is_simple_use: operand _43
toolbox/tomoscope.cpp:55: note: def_stmt: _43 = *cumulDistr.0_33[m_101];

toolbox/tomoscope.cpp:55: note: type of def: 3.
toolbox/tomoscope.cpp:55: note: def =  _43  def_stmt =  _43 = *cumulDistr.0_33[m_101];

toolbox/tomoscope.cpp:55: note: vect_get_vec_def_for_operand: invTotProb_7
toolbox/tomoscope.cpp:55: note: vect_is_simple_use: operand invTotProb_7
toolbox/tomoscope.cpp:55: note: def_stmt: invTotProb_7 = 1.0e+0 / totProb_123;

toolbox/tomoscope.cpp:55: note: type of def: 2.
toolbox/tomoscope.cpp:55: note: def =  invTotProb_7  def_stmt =  invTotProb_7 = 1.0e+0 / totProb_123;

toolbox/tomoscope.cpp:55: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:55: note: vectype: vector(2) double
toolbox/tomoscope.cpp:55: note: Create vector_inv.
toolbox/tomoscope.cpp:55: note: created new init_stmt: vect_cst_.27_142 = {invTotProb_7, invTotProb_7};

toolbox/tomoscope.cpp:55: note: add new stmt: vect_var_.26_143 = vect_var_.25_141 * vect_cst_.27_142;

toolbox/tomoscope.cpp:55: note: ------>vectorizing statement: *cumulDistr.0_33[m_101] = _44;

toolbox/tomoscope.cpp:55: note: transform statement.
toolbox/tomoscope.cpp:55: note: vect_is_simple_use: operand _44
toolbox/tomoscope.cpp:55: note: def_stmt: _44 = _43 * invTotProb_7;

toolbox/tomoscope.cpp:55: note: type of def: 3.
toolbox/tomoscope.cpp:55: note: transform store. ncopies = 1
toolbox/tomoscope.cpp:55: note: vect_get_vec_def_for_operand: _44
toolbox/tomoscope.cpp:55: note: vect_is_simple_use: operand _44
toolbox/tomoscope.cpp:55: note: def_stmt: _44 = _43 * invTotProb_7;

toolbox/tomoscope.cpp:55: note: type of def: 3.
toolbox/tomoscope.cpp:55: note: def =  _44  def_stmt =  _44 = _43 * invTotProb_7;

toolbox/tomoscope.cpp:55: note: create vector_type-pointer variable to type: vector(2) double  vectorizing an array ref: *cumulDistr.0_33
toolbox/tomoscope.cpp:55: note: created vect_pcumulDistr.31_145
toolbox/tomoscope.cpp:55: note: add new stmt: MEM[(double[0:D.3200] *)vect_pcumulDistr.28_146] = vect_var_.26_143;

toolbox/tomoscope.cpp:55: note: ------>vectorizing statement: m_46 = m_101 + 1;

toolbox/tomoscope.cpp:55: note: ------>vectorizing statement: vect_pcumulDistr.21_140 = vect_pcumulDistr.21_139 + 16;

toolbox/tomoscope.cpp:55: note: ------>vectorizing statement: vect_pcumulDistr.28_147 = vect_pcumulDistr.28_146 + 16;

toolbox/tomoscope.cpp:55: note: ------>vectorizing statement: if (_25 > m_46)

loop at toolbox/tomoscope.cpp:57: if (ivtmp_149 < bnd.18_119)

toolbox/tomoscope.cpp:55: note: LOOP VECTORIZED.
Analyzing loop at toolbox/tomoscope.cpp:45

toolbox/tomoscope.cpp:45: note: ===== analyze_loop_nest =====
toolbox/tomoscope.cpp:45: note: === vect_analyze_loop_form ===
toolbox/tomoscope.cpp:45: note: === get_loop_niters ===
toolbox/tomoscope.cpp:45: note: ==> get_loop_niters:_25
toolbox/tomoscope.cpp:45: note: Symbolic number of iterations is _25
toolbox/tomoscope.cpp:45: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:45: note: get vectype with 2 units of type const double
toolbox/tomoscope.cpp:45: note: vectype: const vector(2) double
toolbox/tomoscope.cpp:45: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:45: note: vectype: vector(2) double
toolbox/tomoscope.cpp:45: note: === vect_analyze_scalar_cycles ===
toolbox/tomoscope.cpp:45: note: Analyze phi: m_100 = PHI <m_41(6), 0(4)>

toolbox/tomoscope.cpp:45: note: Access function of PHI: {0, +, 1}_1
toolbox/tomoscope.cpp:45: note: step: 1,  init: 0
toolbox/tomoscope.cpp:45: note: Detected induction.
toolbox/tomoscope.cpp:45: note: Analyze phi: totProb_103 = PHI <totProb_39(6), 0.0(4)>

toolbox/tomoscope.cpp:45: note: Access function of PHI: {0.0, +, _38}_1
toolbox/tomoscope.cpp:45: note: step: _38,  init: 0.0
toolbox/tomoscope.cpp:45: note: step unknown.
toolbox/tomoscope.cpp:45: note: Analyze phi: .MEM_104 = PHI <.MEM_40(6), .MEM_32(4)>

toolbox/tomoscope.cpp:45: note: Analyze phi: totProb_103 = PHI <totProb_39(6), 0.0(4)>

toolbox/tomoscope.cpp:45: note: reduction used in loop.
toolbox/tomoscope.cpp:45: note: Unknown def-use cycle pattern.
toolbox/tomoscope.cpp:45: note: === vect_pattern_recog ===
toolbox/tomoscope.cpp:45: note: vect_is_simple_use: operand _34
toolbox/tomoscope.cpp:45: note: def_stmt: _34 = (long unsigned int) m_100;

toolbox/tomoscope.cpp:45: note: type of def: 3.
toolbox/tomoscope.cpp:45: note: vect_is_simple_use: operand m_100
toolbox/tomoscope.cpp:45: note: def_stmt: m_100 = PHI <m_41(6), 0(4)>

toolbox/tomoscope.cpp:45: note: type of def: 4.
toolbox/tomoscope.cpp:45: note: vect_is_simple_use: operand 8
toolbox/tomoscope.cpp:45: note: vect_recog_widen_mult_pattern: detected: 
toolbox/tomoscope.cpp:45: note: get vectype with 4 units of type uint
toolbox/tomoscope.cpp:45: note: vectype: vector(4) unsigned int
toolbox/tomoscope.cpp:45: note: get vectype with 2 units of type long unsigned int
toolbox/tomoscope.cpp:45: note: vectype: vector(2) long unsigned int
toolbox/tomoscope.cpp:45: note: patt_150 = m_100 w* 8;

toolbox/tomoscope.cpp:45: note: pattern recognized: patt_150 = m_100 w* 8;

toolbox/tomoscope.cpp:45: note: === vect_mark_stmts_to_be_vectorized ===
toolbox/tomoscope.cpp:45: note: init: phi relevant? m_100 = PHI <m_41(6), 0(4)>

toolbox/tomoscope.cpp:45: note: init: phi relevant? totProb_103 = PHI <totProb_39(6), 0.0(4)>

toolbox/tomoscope.cpp:45: note: init: phi relevant? .MEM_104 = PHI <.MEM_40(6), .MEM_32(4)>

toolbox/tomoscope.cpp:45: note: init: stmt relevant? _34 = (long unsigned int) m_100;

toolbox/tomoscope.cpp:45: note: init: stmt relevant? _35 = _34 * 8;

toolbox/tomoscope.cpp:45: note: init: stmt relevant? _37 = probDistr_36(D) + _35;

toolbox/tomoscope.cpp:45: note: init: stmt relevant? _38 = *_37;

toolbox/tomoscope.cpp:45: note: init: stmt relevant? totProb_39 = totProb_103 + _38;

toolbox/tomoscope.cpp:45: note: vec_stmt_relevant_p: used out of loop.
toolbox/tomoscope.cpp:45: note: mark relevant 0, live 1.
toolbox/tomoscope.cpp:45: note: init: stmt relevant? *cumulDistr.0_33[m_100] = totProb_39;

toolbox/tomoscope.cpp:45: note: vec_stmt_relevant_p: stmt has vdefs.
toolbox/tomoscope.cpp:45: note: mark relevant 4, live 0.
toolbox/tomoscope.cpp:45: note: init: stmt relevant? m_41 = m_100 + 1;

toolbox/tomoscope.cpp:45: note: init: stmt relevant? if (_25 > m_41)

toolbox/tomoscope.cpp:45: note: worklist: examine stmt: *cumulDistr.0_33[m_100] = totProb_39;

toolbox/tomoscope.cpp:45: note: vect_is_simple_use: operand totProb_39
toolbox/tomoscope.cpp:45: note: def_stmt: totProb_39 = totProb_103 + _38;

toolbox/tomoscope.cpp:45: note: type of def: 3.
toolbox/tomoscope.cpp:45: note: mark relevant 4, live 0.
toolbox/tomoscope.cpp:45: note: worklist: examine stmt: totProb_39 = totProb_103 + _38;

toolbox/tomoscope.cpp:45: note: vect_is_simple_use: operand totProb_103
toolbox/tomoscope.cpp:45: note: def_stmt: totProb_103 = PHI <totProb_39(6), 0.0(4)>

toolbox/tomoscope.cpp:45: note: Unsupported pattern.
toolbox/tomoscope.cpp:45: note: not vectorized: unsupported use in stmt.
toolbox/tomoscope.cpp:45: note: unexpected pattern.
toolbox/tomoscope.cpp:23: note: vectorized 1 loops in function.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:47: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:47: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:47: note: get vectype with 2 units of type const double
toolbox/tomoscope.cpp:47: note: vectype: const vector(2) double
toolbox/tomoscope.cpp:47: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:47: note: vectype: vector(2) double
toolbox/tomoscope.cpp:47: note: === vect_pattern_recog ===
toolbox/tomoscope.cpp:47: note: vect_is_simple_use: operand _34
toolbox/tomoscope.cpp:47: note: def_stmt: _34 = (long unsigned int) m_100;

toolbox/tomoscope.cpp:47: note: type of def: 3.
toolbox/tomoscope.cpp:47: note: vect_is_simple_use: operand m_100
toolbox/tomoscope.cpp:47: note: def_stmt: m_100 = PHI <m_41(6), 0(4)>

toolbox/tomoscope.cpp:47: note: type of def: 2.
toolbox/tomoscope.cpp:47: note: vect_is_simple_use: operand 8
toolbox/tomoscope.cpp:47: note: vect_recog_widen_mult_pattern: detected: 
toolbox/tomoscope.cpp:47: note: get vectype with 4 units of type uint
toolbox/tomoscope.cpp:47: note: vectype: vector(4) unsigned int
toolbox/tomoscope.cpp:47: note: get vectype with 2 units of type long unsigned int
toolbox/tomoscope.cpp:47: note: vectype: vector(2) long unsigned int
toolbox/tomoscope.cpp:47: note: patt_134 = m_100 w* 8;

toolbox/tomoscope.cpp:47: note: pattern recognized: patt_134 = m_100 w* 8;

toolbox/tomoscope.cpp:47: note: === vect_analyze_dependences ===
toolbox/tomoscope.cpp:47: note: === vect_analyze_data_refs_alignment ===
toolbox/tomoscope.cpp:47: note: vect_compute_data_ref_alignment:
toolbox/tomoscope.cpp:47: note: SLP: step doesn't divide the vector-size.
toolbox/tomoscope.cpp:47: note: Unknown alignment for access: *probDistr_36(D)
toolbox/tomoscope.cpp:47: note: vect_compute_data_ref_alignment:
toolbox/tomoscope.cpp:47: note: SLP: step doesn't divide the vector-size.
toolbox/tomoscope.cpp:47: note: Unknown alignment for access: *cumulDistr.0_33
toolbox/tomoscope.cpp:47: note: === vect_analyze_data_ref_accesses ===
toolbox/tomoscope.cpp:47: note: === vect_analyze_slp ===
toolbox/tomoscope.cpp:47: note: Failed to SLP the basic block.
toolbox/tomoscope.cpp:47: note: not vectorized: failed to find SLP opportunities in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:57: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:57: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:57: note: not vectorized: no vectype for stmt: vect_var_.25_141 = MEM[(double[0:D.3200] *)vect_pcumulDistr.21_139];
 scalar_type: vector(2) double
toolbox/tomoscope.cpp:57: note: === vect_pattern_recog ===
toolbox/tomoscope.cpp:57: note: vect_is_simple_use: operand vect_var_.25_141
toolbox/tomoscope.cpp:57: note: def_stmt: vect_var_.25_141 = MEM[(double[0:D.3200] *)vect_pcumulDistr.21_139];

toolbox/tomoscope.cpp:57: note: type of def: 3.
toolbox/tomoscope.cpp:57: note: === vect_analyze_dependences ===
toolbox/tomoscope.cpp:57: note: === vect_analyze_data_refs_alignment ===
toolbox/tomoscope.cpp:57: note: === vect_analyze_data_ref_accesses ===
toolbox/tomoscope.cpp:57: note: === vect_analyze_slp ===
toolbox/tomoscope.cpp:57: note: Failed to SLP the basic block.
toolbox/tomoscope.cpp:57: note: not vectorized: failed to find SLP opportunities in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:57: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:57: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:57: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:57: note: vectype: vector(2) double
toolbox/tomoscope.cpp:57: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:57: note: vectype: vector(2) double
toolbox/tomoscope.cpp:57: note: === vect_pattern_recog ===
toolbox/tomoscope.cpp:57: note: vect_is_simple_use: operand _126
toolbox/tomoscope.cpp:57: note: def_stmt: _126 = *cumulDistr.0_33[m_130];

toolbox/tomoscope.cpp:57: note: type of def: 3.
toolbox/tomoscope.cpp:57: note: === vect_analyze_dependences ===
toolbox/tomoscope.cpp:57: note: determined dependence between *cumulDistr.0_33[m_130] and *cumulDistr.0_33[m_130]
toolbox/tomoscope.cpp:57: note: === vect_analyze_data_refs_alignment ===
toolbox/tomoscope.cpp:57: note: vect_compute_data_ref_alignment:
toolbox/tomoscope.cpp:57: note: Unknown alignment for access: *cumulDistr.0_33
toolbox/tomoscope.cpp:57: note: vect_compute_data_ref_alignment:
toolbox/tomoscope.cpp:57: note: Unknown alignment for access: *cumulDistr.0_33
toolbox/tomoscope.cpp:57: note: === vect_analyze_data_ref_accesses ===
toolbox/tomoscope.cpp:57: note: not consecutive access _126 = *cumulDistr.0_33[m_130];

toolbox/tomoscope.cpp:57: note: not consecutive access *cumulDistr.0_33[m_130] = _127;

toolbox/tomoscope.cpp:57: note: === vect_analyze_slp ===
toolbox/tomoscope.cpp:57: note: Failed to SLP the basic block.
toolbox/tomoscope.cpp:57: note: not vectorized: failed to find SLP opportunities in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:67: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:67: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:67: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:70: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:70: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:70: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:70: note: vectype: vector(2) double
toolbox/tomoscope.cpp:70: note: === vect_pattern_recog ===
toolbox/tomoscope.cpp:70: note: === vect_analyze_dependences ===
toolbox/tomoscope.cpp:70: note: === vect_analyze_data_refs_alignment ===
toolbox/tomoscope.cpp:70: note: vect_compute_data_ref_alignment:
toolbox/tomoscope.cpp:70: note: can't force alignment of ref: *cumulDistr.0_33[0]
toolbox/tomoscope.cpp:70: note: === vect_analyze_data_ref_accesses ===
toolbox/tomoscope.cpp:70: note: not consecutive access _95 = *cumulDistr.0_33[0];

toolbox/tomoscope.cpp:70: note: === vect_analyze_slp ===
toolbox/tomoscope.cpp:70: note: Failed to SLP the basic block.
toolbox/tomoscope.cpp:70: note: not vectorized: failed to find SLP opportunities in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:70: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:70: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:70: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:70: note: vectype: vector(2) double
toolbox/tomoscope.cpp:70: note: === vect_pattern_recog ===
toolbox/tomoscope.cpp:70: note: === vect_analyze_dependences ===
toolbox/tomoscope.cpp:70: note: === vect_analyze_data_refs_alignment ===
toolbox/tomoscope.cpp:70: note: vect_compute_data_ref_alignment:
toolbox/tomoscope.cpp:70: note: Unknown alignment for access: *cumulDistr.0_33
toolbox/tomoscope.cpp:70: note: === vect_analyze_data_ref_accesses ===
toolbox/tomoscope.cpp:70: note: not consecutive access _51 = *cumulDistr.0_33[m_52];

toolbox/tomoscope.cpp:70: note: === vect_analyze_slp ===
toolbox/tomoscope.cpp:70: note: Failed to SLP the basic block.
toolbox/tomoscope.cpp:70: note: not vectorized: failed to find SLP opportunities in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:68: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:68: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:68: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:73: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:73: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:73: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:82: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:82: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:82: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:82: note: vectype: vector(2) double
toolbox/tomoscope.cpp:82: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:82: note: vectype: vector(2) double
toolbox/tomoscope.cpp:82: note: === vect_pattern_recog ===
toolbox/tomoscope.cpp:82: note: vect_is_simple_use: operand _71
toolbox/tomoscope.cpp:82: note: def_stmt: _71 = (long unsigned int) n_79;

toolbox/tomoscope.cpp:82: note: type of def: 3.
toolbox/tomoscope.cpp:82: note: vect_is_simple_use: operand n_79
toolbox/tomoscope.cpp:82: note: def_stmt: n_79 = PHI <0(3), n_85(23)>

toolbox/tomoscope.cpp:82: note: type of def: 2.
toolbox/tomoscope.cpp:82: note: vect_is_simple_use: operand 8
toolbox/tomoscope.cpp:82: note: vect_is_simple_use: operand iPos_108
toolbox/tomoscope.cpp:82: note: def_stmt: iPos_108 = PHI <iPos_59(21)>

toolbox/tomoscope.cpp:82: note: type of def: 2.
toolbox/tomoscope.cpp:82: note: vect_is_simple_use: operand kPos_107
toolbox/tomoscope.cpp:82: note: def_stmt: kPos_107 = PHI <kPos_65(21)>

toolbox/tomoscope.cpp:82: note: type of def: 2.
toolbox/tomoscope.cpp:82: note: === vect_analyze_dependences ===
toolbox/tomoscope.cpp:82: note: === vect_analyze_data_refs_alignment ===
toolbox/tomoscope.cpp:82: note: vect_compute_data_ref_alignment:
toolbox/tomoscope.cpp:82: note: SLP: step doesn't divide the vector-size.
toolbox/tomoscope.cpp:82: note: Unknown alignment for access: *dt_73(D)
toolbox/tomoscope.cpp:82: note: vect_compute_data_ref_alignment:
toolbox/tomoscope.cpp:82: note: SLP: step doesn't divide the vector-size.
toolbox/tomoscope.cpp:82: note: Unknown alignment for access: *dE_80(D)
toolbox/tomoscope.cpp:82: note: === vect_analyze_data_ref_accesses ===
toolbox/tomoscope.cpp:82: note: === vect_analyze_slp ===
toolbox/tomoscope.cpp:82: note: Failed to SLP the basic block.
toolbox/tomoscope.cpp:82: note: not vectorized: failed to find SLP opportunities in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:65: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:65: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:65: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:53: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:53: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:53: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:57: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:57: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:57: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:57: note: vectype: vector(2) double
toolbox/tomoscope.cpp:57: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:57: note: vectype: vector(2) double
toolbox/tomoscope.cpp:57: note: === vect_pattern_recog ===
toolbox/tomoscope.cpp:57: note: vect_is_simple_use: operand _135
toolbox/tomoscope.cpp:57: note: def_stmt: _135 = *cumulDistr.0_33[m_5];

toolbox/tomoscope.cpp:57: note: type of def: 3.
toolbox/tomoscope.cpp:57: note: === vect_analyze_dependences ===
toolbox/tomoscope.cpp:57: note: determined dependence between *cumulDistr.0_33[m_5] and *cumulDistr.0_33[m_5]
toolbox/tomoscope.cpp:57: note: === vect_analyze_data_refs_alignment ===
toolbox/tomoscope.cpp:57: note: vect_compute_data_ref_alignment:
toolbox/tomoscope.cpp:57: note: Unknown alignment for access: *cumulDistr.0_33
toolbox/tomoscope.cpp:57: note: vect_compute_data_ref_alignment:
toolbox/tomoscope.cpp:57: note: Unknown alignment for access: *cumulDistr.0_33
toolbox/tomoscope.cpp:57: note: === vect_analyze_data_ref_accesses ===
toolbox/tomoscope.cpp:57: note: not consecutive access _135 = *cumulDistr.0_33[m_5];

toolbox/tomoscope.cpp:57: note: not consecutive access *cumulDistr.0_33[m_5] = _131;

toolbox/tomoscope.cpp:57: note: === vect_analyze_slp ===
toolbox/tomoscope.cpp:57: note: Failed to SLP the basic block.
toolbox/tomoscope.cpp:57: note: not vectorized: failed to find SLP opportunities in basic block.

toolbox/tomoscope.cpp:57: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:57: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:57: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:57: note: vectype: vector(2) double
toolbox/tomoscope.cpp:57: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:57: note: vectype: vector(2) double
toolbox/tomoscope.cpp:57: note: === vect_pattern_recog ===
toolbox/tomoscope.cpp:57: note: vect_is_simple_use: operand _154
toolbox/tomoscope.cpp:57: note: def_stmt: _154 = *cumulDistr.0_33[m_46];

toolbox/tomoscope.cpp:57: note: type of def: 3.
toolbox/tomoscope.cpp:57: note: === vect_analyze_dependences ===
toolbox/tomoscope.cpp:57: note: determined dependence between *cumulDistr.0_33[m_46] and *cumulDistr.0_33[m_46]
toolbox/tomoscope.cpp:57: note: === vect_analyze_data_refs_alignment ===
toolbox/tomoscope.cpp:57: note: vect_compute_data_ref_alignment:
toolbox/tomoscope.cpp:57: note: Unknown alignment for access: *cumulDistr.0_33
toolbox/tomoscope.cpp:57: note: vect_compute_data_ref_alignment:
toolbox/tomoscope.cpp:57: note: Unknown alignment for access: *cumulDistr.0_33
toolbox/tomoscope.cpp:57: note: === vect_analyze_data_ref_accesses ===
toolbox/tomoscope.cpp:57: note: not consecutive access _154 = *cumulDistr.0_33[m_46];

toolbox/tomoscope.cpp:57: note: not consecutive access *cumulDistr.0_33[m_46] = _155;

toolbox/tomoscope.cpp:57: note: === vect_analyze_slp ===
toolbox/tomoscope.cpp:57: note: Failed to SLP the basic block.
toolbox/tomoscope.cpp:57: note: not vectorized: failed to find SLP opportunities in basic block.

toolbox/tomoscope.cpp:57: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:57: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:57: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:57: note: vectype: vector(2) double
toolbox/tomoscope.cpp:57: note: get vectype with 2 units of type double
toolbox/tomoscope.cpp:57: note: vectype: vector(2) double
toolbox/tomoscope.cpp:57: note: === vect_pattern_recog ===
toolbox/tomoscope.cpp:57: note: vect_is_simple_use: operand _94
toolbox/tomoscope.cpp:57: note: def_stmt: _94 = *cumulDistr.0_33[m_99];

toolbox/tomoscope.cpp:57: note: type of def: 3.
toolbox/tomoscope.cpp:57: note: === vect_analyze_dependences ===
toolbox/tomoscope.cpp:57: note: determined dependence between *cumulDistr.0_33[m_99] and *cumulDistr.0_33[m_99]
toolbox/tomoscope.cpp:57: note: === vect_analyze_data_refs_alignment ===
toolbox/tomoscope.cpp:57: note: vect_compute_data_ref_alignment:
toolbox/tomoscope.cpp:57: note: Unknown alignment for access: *cumulDistr.0_33
toolbox/tomoscope.cpp:57: note: vect_compute_data_ref_alignment:
toolbox/tomoscope.cpp:57: note: Unknown alignment for access: *cumulDistr.0_33
toolbox/tomoscope.cpp:57: note: === vect_analyze_data_ref_accesses ===
toolbox/tomoscope.cpp:57: note: not consecutive access _94 = *cumulDistr.0_33[m_99];

toolbox/tomoscope.cpp:57: note: not consecutive access *cumulDistr.0_33[m_99] = _93;

toolbox/tomoscope.cpp:57: note: === vect_analyze_slp ===
toolbox/tomoscope.cpp:57: note: Failed to SLP the basic block.
toolbox/tomoscope.cpp:57: note: not vectorized: failed to find SLP opportunities in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.

toolbox/tomoscope.cpp:23: note: ===vect_slp_analyze_bb===

toolbox/tomoscope.cpp:23: note: === vect_analyze_data_refs ===

toolbox/tomoscope.cpp:23: note: not vectorized: not enough data-refs in basic block.


IF THE COMPILATION IS CORRECT A FILE NAMED result.so SHOULD APPEAR IN THE cpp_routines FOLDER.
OTHERWISE YOU HAVE TO CORRECT THE ERRORS AND COMPILE AGAIN.
